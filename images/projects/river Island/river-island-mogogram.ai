%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (hakki) ()
%%Title: (riverisland.ai)
%%CreationDate: 4/11/2013 2:41 PM
%%BoundingBox: 153 510 395 702
%%HiResBoundingBox: 153.5981 510.2949 394.5859 701.7852
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 0.037598 0.074219 595.0576 841.9346
%AI3_DocumentPreview: None
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -786.355 1034.2686 0.6667 1575 909 18 0 0 57 88 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 104 8
%%BeginData: 5214 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFD5BFFA8A87DA87DA87DA87DA87DA87DA87DA8A8FD
%15FFFD077DFD53FF52F827F827F827F827F827F827F827F827F827527DA8
%FD0FFFA827F827F827F827A8FD52FF5227F8272727F8272727F8272727F8
%272727F82727277DFD0FFFFD0427F82727FD53FF7DF827F827F827F827F8
%27F827F827F827F827F827F82727A8FD0CFFA827F827F827F827A8FD52FF
%53272027272720272727202727272027272720272727202727A8FD0CFFFD
%0427202727FD53FF7DF827F827F82752A87DA87DA87D7D5227F827F827F8
%27F82727FD0BFFA927F827F827F827A9FD52FF52272727F82727A8FD08FF
%A87D2727F8272727F82752FD0BFF2727F8FD0427FD53FF7DF827F827F827
%7DFD0BFF2727F827F827F8277DFD09FFA827F827F827F827A8FD52FF5227
%2727202727A8FD0CFFFD042720272759FD0AFF272720FD0427FD53FF7DF8
%27F827F8277DFD0CFFA8F827F827F82727FD09FFA827F827F827F827A8FD
%52FF5227F8272727F8A8FD0DFF52F8272727F827A8FD09FFFD0427F82727
%FD53FF7DF827F827F8277DFD0DFF5227F827F827F87DFD08FFA827F827F8
%27F827A8FD52FF53272027272720A8FD0DFFA82027272720277DFD09FFFD
%0427202727FD53FF7DF827F827F8277DFD0DFF7D27F827F827F87DFD08FF
%A927F827F827F827A9FD52FF52272727F82727A8FD0DFFA82727F8272727
%52FD09FF2727F8FD0427FD53FF7DF827F827F8277DFD0DFF7D27F827F827
%F87DFD08FFA827F827F827F827A8FD52FF52272727202727A8FD0DFF7D27
%27202727277DFD09FF272720FD0427FD53FF7DF827F827F8277DFD0DFF52
%27F827F827F87DFD08FFA827F827F827F827A8FD52FF5227F8272727F8A8
%FD0DFF52F8272727F827A8FD09FFFD0427F82727FD53FF7DF827F827F827
%7DFD0CFFA8F827F827F82727FD09FFA827F827F827F827A8FD52FF532720
%27272720A8FD0CFF7D2720272727207DFD0AFFFD0427202727FD53FF7DF8
%27F827F8277DFD0CFF52F827F827F8277DFD09FFA927F827F827F827A9FD
%52FF52272727F82727A8FD0BFFA8F8272727F82727FD0BFF2727F8FD0427
%FD53FF7DF827F827F8277DFD0BFF5227F827F827F87DFD0AFFA827F827F8
%27F827A8FD52FF52272727202727A8FD0BFF52202727272027A8FD0BFF27
%2720FD0427FD53FF7DF827F827F8277DFD0AFFA8F827F827F82752FD0BFF
%A827F827F827F827A8FD52FF5227F8272727F8A8FD0AFF52272727F82727
%A8FD0CFFFD0427F82727FD53FF7DF827F827F8277DFD09FFA827F827F827
%F852FD0CFFA827F827F827F827A8FD52FF53272027272720A8FD09FF7E20
%272727202753FD0DFFFD0427202727FD53FF7DF827F827F8277DFD09FF52
%27F827F827F8A8FD0CFFA927F827F827F827A9FD52FF52272727F82727A8
%FD09FF522727F8272727A8FD0DFF2727F8FD0427FD53FF7DF827F827F827
%7DFD08FFA8F827F827F82727FD0DFFA827F827F827F827A8FD52FF522727
%27202727A8FD08FFA827272720272752FD0EFF272720FD0427FD53FF7DF8
%27F827F8277DFD08FF7DF827F827F82727FD0DFFA827F827F827F827A8FD
%52FF5227F8272727F8A8FD08FF7D27F8272727F852FD0EFFFD0427F82727
%FD53FF7DF827F827F8277DFD08FFA8F827F827F82727FD0DFFA827F827F8
%27F827A8FD52FF53272027272720A8FD08FFA827202727272052FD0EFFFD
%0427202727FD53FF7DF827F827F8277DFD09FFF827F827F827F8FD0DFFA9
%27F827F827F827A9FD52FF52272727F82727A8FD09FF522727F82727277D
%FD0DFF2727F8FD0427FD53FF7DF827F827F8277DFD09FF5227F827F827F8
%27A8FD0BFFA827F827F827F827A8FD52FF52272727202727A8FD09FFA827
%2720272727207DFD0CFF272720FD0427FD53FF7DF827F827F8277DFD0AFF
%52F827F827F827F852A8FD09FFA827F827F827F827A8FD52FF5227F82727
%27F8A8FD0AFFA8272727F8272727F82752A8A8FD07FFFD0427F82727FD53
%FF7DF827F827F8277DFD0BFF7D27F827F827F827F827F82727FD04527D52
%27F827F827F827A8FD52FF53272027272720A8FD0CFF7D27202727272027
%2727202727272027272720272727202727FD53FF7DF827F827F8277DFD0D
%FFA852F827F827F827F827F827F827F827F827F827F827F827A9FD52FF52
%272727F82727A8FD0FFFA852272727F8272727F8272727F8272727F82727
%2720FD53FF7DF8FD05277DFD11FFA8A852522752FD0E27A8FD56FFA8FD1B
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%E3FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Linear Gradient 1)
(Linear Gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient 2)
(Linear Gradient 2) 0 4 Bd
[
<
05060606070708080909090A0A0B0B0C0C0C0D0D0E0E0E0F0F101011111112121313131414151516
1616171718181819191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F20202021212222222323242424252525
262627272728282829292A2A2A2B2B2C2C2C2D2D2D2E2E2E2F2F3030303131313232323333343434
3535353636363737373838383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F3F40404040414141
42424243434343444444454545454646464747474748484848494949494A4A4A4A4B4B4B4B4B4C4C
4C4C4C4C4D
>
<
47474746464545454444434343424241414140403F3F3F3E3E3E3D3D3C3C3C3B3B3A3A3A39393938
38373737363635353534343433333232323131313030302F2F2E2E2E2D2D2D2C2C2C2B2B2A2A2A29
292928282827272726262525252424242323232222222121212020201F1F1F1E1E1E1D1D1D1C1C1C
1B1B1B1A1A1A1919191818181717171716161615151514141413131313121212111111111010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A090909090808080808070707070706060606
0605050505
>
<
B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291
91908F8E8D8C8B8A89888786858483828181807F7E7D7C7B7A79787776767574737271706F6E6D6D
6C6B6A69686766656564636261605F5E5E5D5C5B5A5958585756555453535251504F4E4E4D4C4B4A
494948474645454443424141403F3E3D3D3C3B3A3A393837373635343433323131302F2E2E2D2C2C
2B2A2A2928272726252524232322212120201F1E1E1D1D1C1B1B1A1A191918171716161515141414
1313121212
>
0
1 %_Br
<
4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282725242322
21201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1C1D1E1F202122232425262728292A2B
2C2D2E2F303132333435363738393A3B3C3D3E3F404142434344454647
>
<
EBEAE9E8E8E7E6E5E5E4E3E2E2E1E0DFDFDEDDDCDCDBDAD9D9D8D7D6D6D5D4D3D3D2D1D0D0CFCECD
CDCCCBCACAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBAB9B8B8
>
0
1 %_Br
<
999999989898979797979696969695959594949494939393929292919191909090908F8F8F8E8E8E
8D8D8D8C8C8C8C8B8B8B8A8A8A898989888888878787868686858585848484848383838282828181
818080807F7F7F7E7E7E7D7D7D7C7C7C7B7B7B7A7A7A797979787878777777767676757575747474
73737272727171717070706F6F6F6E6E6E6D6D6D6C6C6C6B6B6B6A6A6A6969696868686767666666
6565656464646363636262626161616060605F5F5E5E5E5D5D5D5C5C5C5B5B5B5A5A5A5959595858
57575756565655555554545453535252525151515050504F4F4F4E4E4E4D4D4C4C4C4B4B4B4A4A
>
<
14141414141414141414141414141414141413131313131313131313131313131313131212121212
12121212121212121212121111111111111111111111111111111110101010101010101010101010
1010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808
080808080707070707070707070707070707060606060606060606060606060606050505050505
>
<
0D0D0E0F0F1011121313141516161718191A1B1B1C1D1E1F2020212223242525262728292A2B2C2C
2D2E2F30313233333435363738393A3B3B3C3D3E3F40414243444545464748494A4B4C4D4E4F5050
5152535455565758595A5B5C5C5D5E5F606162636465666768696A6B6C6C6D6E6F70717273747576
7778797A7B7C7D7E7F7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9B9C
9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4
C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEB
>
0
1 %_Br
[
0.3 0.02 0.07 0 1 50 100 %_BS
%_0.3 0.02 0.07 0 1 50 100 Bs
0.02 0.28 0.72 0 1 43.038 71.3483 %_BS
%_0.02 0.28 0.72 0 1 43.038 71.3483 Bs
0.29 0.02 0.92 0 1 50 30.8989 %_BS
%_0.29 0.02 0.92 0 1 50 30.8989 Bs
0.6 0.08 0.05 0 1 52.5253 0 %_BS
%_0.6 0.08 0.05 0 1 52.5253 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 1)
(Radial Gradient 1) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
1 0 50 0 %_BS
%_1 0 50 0 Bs
0 0 50 100 %_BS
%_0 0 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 2)
(Radial Gradient 2) 1 2 Bd
[
<
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D
0D0D0D0D0D0D0D0D0D0D0D0D0D0D
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354
55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C
7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4
A5A6A7A8A9AAABACADAEAFB0B1B3
>
<
A0A0A1A1A2A2A2A3A3A4A4A4A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAABABACACACADADAEAEAEAFAFB0
B0B0B1B1B2B2B2B3B3B4B4B4B5B5B6B6B7B7B7B8B8B9B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0
C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0
D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0
E0E1E1E1E2E2E3E3E3E4E4E5E5E6
>
0
1 %_Br
[
0.0392 0.0196 0.6275 0 1 50 0 %_BS
%_0.0392 0.0196 0.6275 0 1 50 0 Bs
0.05 0.7 0.9 0 1 46.0674 100 %_BS
%_0.05 0.7 0.9 0 1 46.0674 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 86)
(Unnamed gradient 86) 1 2 Bd
[
<
0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
>
<
B3B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C
8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A6968676665
6564636261605F5E5D5C5B5A59585757565554535251504F4E4D4C4C4B4A49484746454443424241
403F3E3D3C3B3A3A39383736353433333231302F2E2D2D2C2B2A2928272726252423222221201F1E
1E1D1C1B1A1A191817161615141313121110100F0E0D0D0C0B0B0A0909080707060505
>
<
E6E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6
D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCCCBCBCACACAC9C9C9C8C8C7C7C7
C6C6C6C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBCBBBBBABABAB9B9B9B8B8
B8B7B7B6B6B6B5B5B5B4B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACACABABABABAA
AAAAA9A9A9A8A8A8A7A7A7A6A6A6A5A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A1A0A0A0
>
0
1 %_Br
[
0.05 0.7 0.9 0 1 46.0674 0 %_BS
%_0.05 0.7 0.9 0 1 46.0674 0 Bs
0.0392 0.0196 0.6275 0 1 50 100 %_BS
%_0.0392 0.0196 0.6275 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Polka Dot Pattern)
(Polka Dot Pattern) 2.125 1.89648 71.125 70.8965 [
%AI3_Tile
(0 O 0 R 0.02 0.28 0.72 0 k
 0.02 0.28 0.72 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
71.125 1.89648 m
2.125 1.89648 L
2.125 70.8965 L
71.125 70.8965 L
71.125 1.89648 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
61.7725 71.6533 m
61.79 71.5811 61.7798 71.5264 61.7466 71.4629 c
61.6938 71.3623 61.6343 71.4004 61.5815 71.335 c
61.5313 71.2725 61.4824 71.0586 61.5024 70.9727 C
61.3335 70.915 61.4927 70.7461 61.4873 70.623 c
61.4849 70.5732 61.4468 70.5176 61.4424 70.4619 c
61.4326 70.3428 61.4595 70.1963 61.5103 70.0918 c
61.6074 69.8936 61.7783 69.6787 61.9453 69.5479 c
62.1353 69.3994 62.3101 68.9756 62.5537 68.917 c
62.731 68.875 62.9375 69.0215 63.0967 69.0596 c
63.2769 69.1025 63.4941 69.0498 63.668 69.1123 c
63.8896 69.1914 63.7954 69.4492 63.9561 69.5625 c
64.0605 69.6367 64.2432 69.5723 64.3623 69.6133 c
64.562 69.6826 64.7012 69.876 64.7383 70.0732 c
64.7539 70.1553 64.748 70.2178 64.7769 70.2939 c
64.8154 70.3965 64.8882 70.4541 64.8672 70.5869 c
64.8574 70.6484 64.8154 70.707 64.8027 70.7734 c
64.7808 70.8877 64.8047 70.9971 64.8032 71.1104 c
64.8003 71.3105 64.8198 71.4893 64.7251 71.6602 c
64.3452 72.3477 63.4888 72.5889 62.7505 72.4492 c
62.5708 72.415 62.4639 72.3232 62.3086 72.2422 c
62.1382 72.1543 62.1699 72.0762 61.9902 72.0186 c
61.9092 71.9922 61.7744 71.8945 61.7754 71.7949 c
61.7769 71.6797 61.7803 71.7441 61.7871 71.626 C
61.7666 71.6152 61.7656 71.6309 61.7568 71.6514 C
F
54.1055 71.6533 m
54.123 71.5811 54.1128 71.5264 54.0796 71.4629 c
54.0269 71.3623 53.9673 71.4004 53.9146 71.335 c
53.8643 71.2725 53.8154 71.0586 53.8354 70.9727 C
53.6665 70.915 53.8257 70.7461 53.8203 70.623 c
53.8179 70.5732 53.7798 70.5176 53.7754 70.4619 c
53.7656 70.3428 53.7925 70.1963 53.8433 70.0918 c
53.9404 69.8936 54.1113 69.6787 54.2783 69.5479 c
54.4683 69.3994 54.6431 68.9756 54.8867 68.917 c
55.064 68.875 55.2705 69.0215 55.4297 69.0596 c
55.6099 69.1025 55.8271 69.0498 56.001 69.1123 c
56.2227 69.1914 56.1284 69.4492 56.2891 69.5625 c
56.3936 69.6367 56.5762 69.5723 56.6953 69.6133 c
56.895 69.6826 57.0342 69.876 57.0713 70.0732 c
57.0869 70.1553 57.0811 70.2178 57.1099 70.2939 c
57.1484 70.3965 57.2212 70.4541 57.2002 70.5869 c
57.1904 70.6484 57.1484 70.707 57.1357 70.7734 c
57.1138 70.8877 57.1377 70.9971 57.1362 71.1104 c
57.1333 71.3105 57.1528 71.4893 57.0581 71.6602 c
56.6782 72.3477 55.8218 72.5889 55.0835 72.4492 c
54.9038 72.415 54.7969 72.3232 54.6416 72.2422 c
54.4712 72.1543 54.5029 72.0762 54.3232 72.0186 c
54.2422 71.9922 54.1074 71.8945 54.1084 71.7949 c
54.1099 71.6797 54.1133 71.7441 54.1201 71.626 C
54.0996 71.6152 54.0986 71.6309 54.0898 71.6514 C
F
46.439 71.6533 m
46.4565 71.5811 46.4463 71.5264 46.4131 71.4629 c
46.3604 71.3623 46.3008 71.4004 46.248 71.335 c
46.1978 71.2725 46.1489 71.0586 46.1689 70.9727 C
46 70.915 46.1592 70.7461 46.1538 70.623 c
46.1514 70.5732 46.1133 70.5176 46.1089 70.4619 c
46.0991 70.3428 46.126 70.1963 46.1768 70.0918 c
46.2739 69.8936 46.4448 69.6787 46.6118 69.5479 c
46.8018 69.3994 46.9766 68.9756 47.2202 68.917 c
47.3975 68.875 47.604 69.0215 47.7632 69.0596 c
47.9434 69.1025 48.1606 69.0498 48.3345 69.1123 c
48.5562 69.1914 48.4619 69.4492 48.6226 69.5625 c
48.7271 69.6367 48.9097 69.5723 49.0288 69.6133 c
49.2285 69.6826 49.3677 69.876 49.4048 70.0732 c
49.4204 70.1553 49.4146 70.2178 49.4434 70.2939 c
49.4819 70.3965 49.5547 70.4541 49.5337 70.5869 c
49.5239 70.6484 49.4819 70.707 49.4692 70.7734 c
49.4473 70.8877 49.4712 70.9971 49.4697 71.1104 c
49.4668 71.3105 49.4863 71.4893 49.3916 71.6602 c
49.0117 72.3477 48.1553 72.5889 47.417 72.4492 c
47.2373 72.415 47.1304 72.3232 46.9751 72.2422 c
46.8047 72.1543 46.8364 72.0762 46.6567 72.0186 c
46.5757 71.9922 46.4409 71.8945 46.4419 71.7949 c
46.4434 71.6797 46.4468 71.7441 46.4536 71.626 C
46.4331 71.6152 46.4321 71.6309 46.4233 71.6514 C
F
38.7725 71.6533 m
38.79 71.5811 38.7798 71.5264 38.7466 71.4629 c
38.6938 71.3623 38.6343 71.4004 38.5815 71.335 c
38.5313 71.2725 38.4824 71.0586 38.5024 70.9727 C
38.3335 70.915 38.4927 70.7461 38.4873 70.623 c
38.4849 70.5732 38.4468 70.5176 38.4424 70.4619 c
38.4326 70.3428 38.4595 70.1963 38.5103 70.0918 c
38.6074 69.8936 38.7783 69.6787 38.9453 69.5479 c
39.1353 69.3994 39.3101 68.9756 39.5537 68.917 c
39.731 68.875 39.9375 69.0215 40.0967 69.0596 c
40.2769 69.1025 40.4941 69.0498 40.668 69.1123 c
40.8896 69.1914 40.7954 69.4492 40.9561 69.5625 c
41.0605 69.6367 41.2432 69.5723 41.3623 69.6133 c
41.562 69.6826 41.7012 69.876 41.7383 70.0732 c
41.7539 70.1553 41.748 70.2178 41.7769 70.2939 c
41.8154 70.3965 41.8882 70.4541 41.8672 70.5869 c
41.8574 70.6484 41.8154 70.707 41.8027 70.7734 c
41.7808 70.8877 41.8047 70.9971 41.8032 71.1104 c
41.8003 71.3105 41.8198 71.4893 41.7251 71.6602 c
41.3452 72.3477 40.4888 72.5889 39.7505 72.4492 c
39.5708 72.415 39.4639 72.3232 39.3086 72.2422 c
39.1382 72.1543 39.1699 72.0762 38.9902 72.0186 c
38.9092 71.9922 38.7744 71.8945 38.7754 71.7949 c
38.7769 71.6797 38.7803 71.7441 38.7871 71.626 C
38.7666 71.6152 38.7656 71.6309 38.7568 71.6514 C
F
31.1055 71.6533 m
31.123 71.5811 31.1128 71.5264 31.0796 71.4629 c
31.0269 71.3623 30.9673 71.4004 30.9146 71.335 c
30.8643 71.2725 30.8154 71.0586 30.8354 70.9727 C
30.6665 70.915 30.8257 70.7461 30.8203 70.623 c
30.8179 70.5732 30.7798 70.5176 30.7754 70.4619 c
30.7656 70.3428 30.7925 70.1963 30.8433 70.0918 c
30.9404 69.8936 31.1113 69.6787 31.2783 69.5479 c
31.4683 69.3994 31.6431 68.9756 31.8867 68.917 c
32.064 68.875 32.2705 69.0215 32.4297 69.0596 c
32.6099 69.1025 32.8271 69.0498 33.001 69.1123 c
33.2227 69.1914 33.1284 69.4492 33.2891 69.5625 c
33.3936 69.6367 33.5762 69.5723 33.6953 69.6133 c
33.895 69.6826 34.0342 69.876 34.0713 70.0732 c
34.0869 70.1553 34.0811 70.2178 34.1099 70.2939 c
34.1484 70.3965 34.2212 70.4541 34.2002 70.5869 c
34.1904 70.6484 34.1484 70.707 34.1357 70.7734 c
34.1138 70.8877 34.1377 70.9971 34.1362 71.1104 c
34.1333 71.3105 34.1528 71.4893 34.0581 71.6602 c
33.6782 72.3477 32.8218 72.5889 32.0835 72.4492 c
31.9038 72.415 31.7969 72.3232 31.6416 72.2422 c
31.4712 72.1543 31.5029 72.0762 31.3232 72.0186 c
31.2422 71.9922 31.1074 71.8945 31.1084 71.7949 c
31.1099 71.6797 31.1133 71.7441 31.1201 71.626 C
31.0996 71.6152 31.0986 71.6309 31.0898 71.6514 C
F
23.439 71.6533 m
23.4565 71.5811 23.4463 71.5264 23.4131 71.4629 c
23.3604 71.3623 23.3008 71.4004 23.248 71.335 c
23.1978 71.2725 23.1489 71.0586 23.1689 70.9727 C
23 70.915 23.1592 70.7461 23.1538 70.623 c
23.1514 70.5732 23.1133 70.5176 23.1089 70.4619 c
23.0991 70.3428 23.126 70.1963 23.1768 70.0918 c
23.2739 69.8936 23.4448 69.6787 23.6118 69.5479 c
23.8018 69.3994 23.9766 68.9756 24.2202 68.917 c
24.3975 68.875 24.604 69.0215 24.7632 69.0596 c
24.9434 69.1025 25.1606 69.0498 25.3345 69.1123 c
25.5562 69.1914 25.4619 69.4492 25.6226 69.5625 c
25.7271 69.6367 25.9097 69.5723 26.0288 69.6133 c
26.2285 69.6826 26.3677 69.876 26.4048 70.0732 c
26.4204 70.1553 26.4146 70.2178 26.4434 70.2939 c
26.4819 70.3965 26.5547 70.4541 26.5337 70.5869 c
26.5239 70.6484 26.4819 70.707 26.4692 70.7734 c
26.4473 70.8877 26.4712 70.9971 26.4697 71.1104 c
26.4668 71.3105 26.4863 71.4893 26.3916 71.6602 c
26.0117 72.3477 25.1553 72.5889 24.417 72.4492 c
24.2373 72.415 24.1304 72.3232 23.9751 72.2422 c
23.8047 72.1543 23.8364 72.0762 23.6567 72.0186 c
23.5757 71.9922 23.4409 71.8945 23.4419 71.7949 c
23.4434 71.6797 23.4468 71.7441 23.4536 71.626 C
23.4331 71.6152 23.4321 71.6309 23.4233 71.6514 C
F
15.7725 71.6533 m
15.79 71.5811 15.7798 71.5264 15.7466 71.4629 c
15.6938 71.3623 15.6343 71.4004 15.5815 71.335 c
15.5313 71.2725 15.4824 71.0586 15.5024 70.9727 C
15.3335 70.915 15.4927 70.7461 15.4873 70.623 c
15.4849 70.5732 15.4468 70.5176 15.4424 70.4619 c
15.4326 70.3428 15.4595 70.1963 15.5103 70.0918 c
15.6074 69.8936 15.7783 69.6787 15.9453 69.5479 c
16.1353 69.3994 16.3101 68.9756 16.5537 68.917 c
16.731 68.875 16.9375 69.0215 17.0967 69.0596 c
17.2769 69.1025 17.4941 69.0498 17.668 69.1123 c
17.8896 69.1914 17.7954 69.4492 17.9561 69.5625 c
18.0605 69.6367 18.2432 69.5723 18.3623 69.6133 c
18.562 69.6826 18.7012 69.876 18.7383 70.0732 c
18.7539 70.1553 18.748 70.2178 18.7769 70.2939 c
18.8154 70.3965 18.8882 70.4541 18.8672 70.5869 c
18.8574 70.6484 18.8154 70.707 18.8027 70.7734 c
18.7808 70.8877 18.8047 70.9971 18.8032 71.1104 c
18.8003 71.3105 18.8198 71.4893 18.7251 71.6602 c
18.3452 72.3477 17.4888 72.5889 16.7505 72.4492 c
16.5708 72.415 16.4639 72.3232 16.3086 72.2422 c
16.1382 72.1543 16.1699 72.0762 15.9902 72.0186 c
15.9092 71.9922 15.7744 71.8945 15.7754 71.7949 c
15.7769 71.6797 15.7803 71.7441 15.7871 71.626 C
15.7666 71.6152 15.7656 71.6309 15.7568 71.6514 C
F
8.10547 71.6533 m
8.12305 71.5811 8.11279 71.5264 8.07959 71.4629 c
8.02686 71.3623 7.96729 71.4004 7.91455 71.335 c
7.86426 71.2725 7.81543 71.0586 7.83545 70.9727 C
7.6665 70.915 7.82568 70.7461 7.82031 70.623 c
7.81787 70.5732 7.77979 70.5176 7.77539 70.4619 c
7.76563 70.3428 7.79248 70.1963 7.84326 70.0918 c
7.94043 69.8936 8.11133 69.6787 8.27832 69.5479 c
8.46826 69.3994 8.64307 68.9756 8.88672 68.917 c
9.06396 68.875 9.27051 69.0215 9.42969 69.0596 c
9.60986 69.1025 9.82715 69.0498 10.001 69.1123 c
10.2227 69.1914 10.1284 69.4492 10.2891 69.5625 c
10.3936 69.6367 10.5762 69.5723 10.6953 69.6133 c
10.895 69.6826 11.0342 69.876 11.0713 70.0732 c
11.0869 70.1553 11.0811 70.2178 11.1099 70.2939 c
11.1484 70.3965 11.2212 70.4541 11.2002 70.5869 c
11.1904 70.6484 11.1484 70.707 11.1357 70.7734 c
11.1138 70.8877 11.1377 70.9971 11.1362 71.1104 c
11.1333 71.3105 11.1528 71.4893 11.0581 71.6602 c
10.6782 72.3477 9.82178 72.5889 9.0835 72.4492 c
8.90381 72.415 8.79688 72.3232 8.6416 72.2422 c
8.47119 72.1543 8.50293 72.0762 8.32324 72.0186 c
8.24219 71.9922 8.10742 71.8945 8.1084 71.7949 c
8.10986 71.6797 8.11328 71.7441 8.12012 71.626 C
8.09961 71.6152 8.09863 71.6309 8.08984 71.6514 C
F
0.438965 71.6533 m
0.456543 71.5811 0.446777 71.5264 0.413086 71.4629 c
0.36084 71.3623 0.300293 71.4004 0.248047 71.335 c
0.197266 71.2725 0.148926 71.0586 0.168945 70.9727 C
0 70.915 0.158691 70.7461 0.153809 70.623 c
0.151367 70.5732 0.113281 70.5176 0.108887 70.4619 c
0.098633 70.3428 0.125977 70.1963 0.176758 70.0918 c
0.273926 69.8936 0.444824 69.6787 0.611816 69.5479 c
0.801758 69.3994 0.976563 68.9756 1.22021 68.917 c
1.39746 68.875 1.604 69.0215 1.76318 69.0596 c
1.94336 69.1025 2.16064 69.0498 2.33447 69.1123 c
2.55615 69.1914 2.46191 69.4492 2.62256 69.5625 c
2.72705 69.6367 2.90967 69.5723 3.02881 69.6133 c
3.22852 69.6836 3.36816 69.876 3.40479 70.0732 c
3.42041 70.1553 3.41455 70.2178 3.44336 70.2939 c
3.48145 70.3965 3.55469 70.4541 3.53369 70.5869 c
3.52393 70.6484 3.48242 70.707 3.46924 70.7734 c
3.44775 70.8877 3.47119 70.9971 3.46973 71.1104 c
3.4668 71.3105 3.48633 71.4893 3.3916 71.6602 c
3.01172 72.3477 2.15527 72.5889 1.41699 72.4492 c
1.2373 72.415 1.13037 72.3232 0.975098 72.2422 c
0.804688 72.1543 0.836426 72.0762 0.656738 72.0186 c
0.575684 71.9922 0.441406 71.8945 0.441895 71.7949 c
0.443848 71.6797 0.446777 71.7441 0.453613 71.626 C
0.433105 71.6152 0.432129 71.6309 0.42334 71.6514 c
F
69.439 71.6533 m
69.4565 71.5811 69.4468 71.5264 69.4131 71.4629 c
69.3608 71.3623 69.3003 71.4004 69.248 71.335 c
69.1973 71.2725 69.1489 71.0586 69.1689 70.9727 C
69 70.915 69.1587 70.7461 69.1538 70.623 c
69.1514 70.5732 69.1133 70.5176 69.1089 70.4619 c
69.0986 70.3428 69.126 70.1963 69.1768 70.0918 c
69.2739 69.8936 69.4448 69.6787 69.6118 69.5479 c
69.8018 69.3994 69.9766 68.9756 70.2202 68.917 c
70.3975 68.875 70.604 69.0215 70.7632 69.0596 c
70.9434 69.1025 71.1606 69.0498 71.3345 69.1123 c
71.5562 69.1914 71.4619 69.4492 71.6226 69.5625 c
71.7271 69.6367 71.9097 69.5723 72.0288 69.6133 c
72.2285 69.6836 72.3682 69.876 72.4048 70.0732 c
72.4204 70.1553 72.4146 70.2178 72.4434 70.2939 c
72.4814 70.3965 72.5547 70.4541 72.5337 70.5869 c
72.5239 70.6484 72.4824 70.707 72.4692 70.7734 c
72.4478 70.8877 72.4712 70.9971 72.4697 71.1104 c
72.4668 71.3105 72.4863 71.4893 72.3916 71.6602 c
72.0117 72.3477 71.1553 72.5889 70.417 72.4492 c
70.2373 72.415 70.1304 72.3232 69.9751 72.2422 c
69.8047 72.1543 69.8364 72.0762 69.6567 72.0186 c
69.5757 71.9922 69.4414 71.8945 69.4419 71.7949 c
69.4438 71.6797 69.4468 71.7441 69.4536 71.626 C
69.4331 71.6152 69.4321 71.6309 69.4233 71.6514 c
F
0.495117 71.6533 m
0.512695 71.5811 0.50293 71.5264 0.469238 71.4629 c
0.416992 71.3623 0.356445 71.4004 0.304199 71.335 c
0.253418 71.2725 0.205078 71.0586 0.225098 70.9727 C
0.056152 70.915 0.214844 70.7461 0.209961 70.623 c
0.20752 70.5732 0.169434 70.5176 0.165039 70.4619 c
0.154785 70.3428 0.182129 70.1963 0.23291 70.0918 c
0.330078 69.8936 0.500977 69.6787 0.667969 69.5479 c
0.85791 69.3994 1.03271 68.9756 1.27637 68.917 c
1.45361 68.875 1.66016 69.0215 1.81934 69.0596 c
1.99951 69.1025 2.2168 69.0498 2.39063 69.1123 c
2.6123 69.1914 2.51807 69.4492 2.67871 69.5625 c
2.7832 69.6367 2.96582 69.5723 3.08496 69.6133 c
3.28467 69.6836 3.42432 69.876 3.46094 70.0732 c
3.47656 70.1553 3.4707 70.2178 3.49951 70.2939 c
3.5376 70.3965 3.61084 70.4541 3.58984 70.5869 c
3.58008 70.6484 3.53857 70.707 3.52539 70.7734 c
3.50391 70.8877 3.52734 70.9971 3.52588 71.1104 c
3.52295 71.3105 3.54248 71.4893 3.44775 71.6602 c
3.06787 72.3477 2.21143 72.5889 1.47314 72.4492 c
1.29346 72.415 1.18652 72.3232 1.03125 72.2422 c
0.86084 72.1543 0.892578 72.0762 0.712891 72.0186 c
0.631836 71.9922 0.497559 71.8945 0.498047 71.7949 c
0.5 71.6797 0.50293 71.7441 0.509766 71.626 C
0.489258 71.6152 0.488281 71.6309 0.479492 71.6514 c
F
69.439 64.001 m
69.4565 63.9287 69.4463 63.874 69.4131 63.8105 c
69.3604 63.71 69.3008 63.748 69.248 63.6826 c
69.1978 63.6201 69.1489 63.4063 69.1689 63.3203 C
69 63.2627 69.1592 63.0938 69.1538 62.9707 c
69.1514 62.9209 69.1133 62.8652 69.1089 62.8096 c
69.0991 62.6904 69.126 62.5439 69.1768 62.4395 c
69.2739 62.2412 69.4448 62.0264 69.6118 61.8955 c
69.8018 61.7471 69.9766 61.3232 70.2202 61.2646 c
70.3975 61.2227 70.604 61.3691 70.7632 61.4072 c
70.9434 61.4502 71.1606 61.3975 71.3345 61.46 c
71.5562 61.5391 71.4619 61.7969 71.6226 61.9102 c
71.7271 61.9844 71.9097 61.9199 72.0288 61.9609 c
72.2285 62.0303 72.3677 62.2236 72.4048 62.4209 c
72.4204 62.5029 72.4146 62.5654 72.4434 62.6416 c
72.4819 62.7441 72.5547 62.8018 72.5337 62.9346 c
72.5239 62.9961 72.4819 63.0547 72.4692 63.1211 c
72.4473 63.2354 72.4712 63.3447 72.4697 63.458 c
72.4668 63.6582 72.4863 63.8369 72.3916 64.0078 c
72.0117 64.6953 71.1553 64.9365 70.417 64.7969 c
70.2373 64.7627 70.1304 64.6709 69.9751 64.5898 c
69.8047 64.502 69.8364 64.4238 69.6567 64.3662 c
69.5757 64.3398 69.4409 64.2422 69.4419 64.1426 c
69.4434 64.0273 69.4468 64.0918 69.4536 63.9736 C
69.4331 63.9629 69.4321 63.9785 69.4233 63.999 C
F
61.7783 64.001 m
61.7959 63.9287 61.7856 63.874 61.7524 63.8105 c
61.6997 63.71 61.6401 63.748 61.5874 63.6826 c
61.5371 63.6201 61.4883 63.4063 61.5083 63.3203 C
61.3394 63.2627 61.499 63.0938 61.4932 62.9707 c
61.4907 62.9209 61.4526 62.8652 61.4482 62.8096 c
61.4385 62.6904 61.4653 62.5439 61.5161 62.4395 c
61.6133 62.2412 61.7842 62.0264 61.9512 61.8955 c
62.1411 61.7471 62.3159 61.3232 62.5596 61.2646 c
62.7368 61.2227 62.9434 61.3691 63.1025 61.4072 c
63.2827 61.4502 63.5 61.3975 63.6738 61.46 c
63.8955 61.5391 63.8013 61.7969 63.9619 61.9102 c
64.0664 61.9844 64.249 61.9199 64.3682 61.9609 c
64.5679 62.0303 64.707 62.2236 64.7441 62.4209 c
64.7598 62.5029 64.7539 62.5654 64.7827 62.6416 c
64.8213 62.7441 64.894 62.8018 64.873 62.9346 c
64.8633 62.9961 64.8213 63.0547 64.8086 63.1211 c
64.7866 63.2354 64.8105 63.3447 64.8091 63.458 c
64.8062 63.6582 64.8257 63.8369 64.731 64.0078 c
64.3511 64.6953 63.4946 64.9365 62.7563 64.7969 c
62.5767 64.7627 62.4697 64.6709 62.3145 64.5898 c
62.144 64.502 62.1758 64.4238 61.9961 64.3662 c
61.915 64.3398 61.7803 64.2422 61.7813 64.1426 c
61.7827 64.0273 61.7861 64.0918 61.793 63.9736 C
61.7725 63.9629 61.7715 63.9785 61.7627 63.999 C
F
54.1182 64.001 m
54.1357 63.9287 54.1255 63.874 54.0923 63.8105 c
54.0396 63.71 53.98 63.748 53.9272 63.6826 c
53.877 63.6201 53.8281 63.4063 53.8481 63.3203 C
53.6792 63.2627 53.8389 63.0938 53.833 62.9707 c
53.8306 62.9209 53.7925 62.8652 53.7881 62.8096 c
53.7783 62.6904 53.8052 62.5439 53.856 62.4395 c
53.9531 62.2412 54.124 62.0264 54.291 61.8955 c
54.481 61.7471 54.6558 61.3232 54.8994 61.2646 c
55.0767 61.2227 55.2832 61.3691 55.4424 61.4072 c
55.6226 61.4502 55.8398 61.3975 56.0137 61.46 c
56.2354 61.5391 56.1411 61.7969 56.3018 61.9102 c
56.4063 61.9844 56.5889 61.9199 56.708 61.9609 c
56.9077 62.0303 57.0469 62.2236 57.084 62.4209 c
57.0996 62.5029 57.0938 62.5654 57.1226 62.6416 c
57.1611 62.7441 57.2339 62.8018 57.2129 62.9346 c
57.2031 62.9961 57.1611 63.0547 57.1484 63.1211 c
57.1265 63.2354 57.1504 63.3447 57.1489 63.458 c
57.146 63.6582 57.1655 63.8369 57.0708 64.0078 c
56.6909 64.6953 55.8345 64.9365 55.0962 64.7969 c
54.9165 64.7627 54.8096 64.6709 54.6543 64.5898 c
54.4839 64.502 54.5156 64.4238 54.3359 64.3662 c
54.2549 64.3398 54.1201 64.2422 54.1211 64.1426 c
54.1226 64.0273 54.126 64.0918 54.1328 63.9736 C
54.1123 63.9629 54.1113 63.9785 54.1025 63.999 C
F
46.4575 64.001 m
46.4751 63.9287 46.4648 63.874 46.4316 63.8105 c
46.3789 63.71 46.3193 63.748 46.2666 63.6826 c
46.2163 63.6201 46.1675 63.4063 46.1875 63.3203 C
46.0186 63.2627 46.1782 63.0938 46.1724 62.9707 c
46.1699 62.9209 46.1318 62.8652 46.1274 62.8096 c
46.1177 62.6904 46.1445 62.5439 46.1953 62.4395 c
46.2925 62.2412 46.4634 62.0264 46.6304 61.8955 c
46.8203 61.7471 46.9951 61.3232 47.2388 61.2646 c
47.416 61.2227 47.6226 61.3691 47.7817 61.4072 c
47.9619 61.4502 48.1792 61.3975 48.353 61.46 c
48.5747 61.5391 48.4805 61.7969 48.6411 61.9102 c
48.7456 61.9844 48.9282 61.9199 49.0474 61.9609 c
49.2471 62.0303 49.3862 62.2236 49.4233 62.4209 c
49.439 62.5029 49.4331 62.5654 49.4619 62.6416 c
49.5005 62.7441 49.5732 62.8018 49.5522 62.9346 c
49.5425 62.9961 49.5005 63.0547 49.4878 63.1211 c
49.4658 63.2354 49.4897 63.3447 49.4883 63.458 c
49.4854 63.6582 49.5049 63.8369 49.4102 64.0078 c
49.0303 64.6953 48.1738 64.9365 47.4355 64.7969 c
47.2559 64.7627 47.1489 64.6709 46.9937 64.5898 c
46.8232 64.502 46.855 64.4238 46.6753 64.3662 c
46.5942 64.3398 46.4595 64.2422 46.4604 64.1426 c
46.4619 64.0273 46.4653 64.0918 46.4722 63.9736 C
46.4517 63.9629 46.4507 63.9785 46.4419 63.999 C
F
38.7974 64.001 m
38.8149 63.9287 38.8047 63.874 38.7715 63.8105 c
38.7188 63.71 38.6592 63.748 38.6064 63.6826 c
38.5562 63.6201 38.5073 63.4063 38.5273 63.3203 C
38.3584 63.2627 38.5181 63.0938 38.5122 62.9707 c
38.5098 62.9209 38.4717 62.8652 38.4673 62.8096 c
38.4575 62.6904 38.4844 62.5439 38.5352 62.4395 c
38.6323 62.2412 38.8032 62.0264 38.9702 61.8955 c
39.1602 61.7471 39.335 61.3232 39.5786 61.2646 c
39.7559 61.2227 39.9624 61.3691 40.1216 61.4072 c
40.3018 61.4502 40.519 61.3975 40.6929 61.46 c
40.9146 61.5391 40.8203 61.7969 40.981 61.9102 c
41.0854 61.9844 41.2681 61.9199 41.3872 61.9609 c
41.5869 62.0303 41.7261 62.2236 41.7632 62.4209 c
41.7788 62.5029 41.7729 62.5654 41.8018 62.6416 c
41.8403 62.7441 41.9131 62.8018 41.8921 62.9346 c
41.8823 62.9961 41.8403 63.0547 41.8276 63.1211 c
41.8057 63.2354 41.8296 63.3447 41.8281 63.458 c
41.8252 63.6582 41.8447 63.8369 41.75 64.0078 c
41.3701 64.6953 40.5137 64.9365 39.7754 64.7969 c
39.5957 64.7627 39.4888 64.6709 39.3335 64.5898 c
39.1631 64.502 39.1948 64.4238 39.0151 64.3662 c
38.9341 64.3398 38.7993 64.2422 38.8003 64.1426 c
38.8018 64.0273 38.8052 64.0918 38.812 63.9736 C
38.7915 63.9629 38.7905 63.9785 38.7817 63.999 C
F
31.1367 64.001 m
31.1543 63.9287 31.144 63.874 31.1108 63.8105 c
31.0581 63.71 30.9985 63.748 30.9458 63.6826 c
30.8955 63.6201 30.8467 63.4063 30.8667 63.3203 C
30.6978 63.2627 30.8574 63.0938 30.8516 62.9707 c
30.8491 62.9209 30.811 62.8652 30.8066 62.8096 c
30.7969 62.6904 30.8237 62.5439 30.8745 62.4395 c
30.9717 62.2412 31.1426 62.0264 31.3096 61.8955 c
31.4995 61.7471 31.6743 61.3232 31.918 61.2646 c
32.0952 61.2227 32.3018 61.3691 32.4609 61.4072 c
32.6411 61.4502 32.8584 61.3975 33.0322 61.46 c
33.2539 61.5391 33.1597 61.7969 33.3203 61.9102 c
33.4248 61.9844 33.6074 61.9199 33.7266 61.9609 c
33.9263 62.0303 34.0654 62.2236 34.1025 62.4209 c
34.1182 62.5029 34.1123 62.5654 34.1411 62.6416 c
34.1797 62.7441 34.2524 62.8018 34.2314 62.9346 c
34.2217 62.9961 34.1797 63.0547 34.167 63.1211 c
34.145 63.2354 34.1689 63.3447 34.1675 63.458 c
34.1646 63.6582 34.1841 63.8369 34.0894 64.0078 c
33.7095 64.6953 32.853 64.9365 32.1147 64.7969 c
31.9351 64.7627 31.8281 64.6709 31.6729 64.5898 c
31.5024 64.502 31.5342 64.4238 31.3545 64.3662 c
31.2734 64.3398 31.1387 64.2422 31.1396 64.1426 c
31.1411 64.0273 31.1445 64.0918 31.1514 63.9736 C
31.1309 63.9629 31.1299 63.9785 31.1211 63.999 C
F
23.4766 64.001 m
23.4941 63.9287 23.4839 63.874 23.4507 63.8105 c
23.3979 63.71 23.3384 63.748 23.2856 63.6826 c
23.2354 63.6201 23.1865 63.4063 23.2065 63.3203 C
23.0376 63.2627 23.1973 63.0938 23.1914 62.9707 c
23.189 62.9209 23.1509 62.8652 23.1465 62.8096 c
23.1367 62.6904 23.1636 62.5439 23.2144 62.4395 c
23.3115 62.2412 23.4824 62.0264 23.6494 61.8955 c
23.8394 61.7471 24.0142 61.3232 24.2578 61.2646 c
24.4351 61.2227 24.6416 61.3691 24.8008 61.4072 c
24.981 61.4502 25.1982 61.3975 25.3721 61.46 c
25.5938 61.5391 25.4995 61.7969 25.6602 61.9102 c
25.7646 61.9844 25.9473 61.9199 26.0664 61.9609 c
26.2661 62.0303 26.4053 62.2236 26.4424 62.4209 c
26.458 62.5029 26.4521 62.5654 26.481 62.6416 c
26.5195 62.7441 26.5923 62.8018 26.5713 62.9346 c
26.5615 62.9961 26.5195 63.0547 26.5068 63.1211 c
26.4849 63.2354 26.5088 63.3447 26.5073 63.458 c
26.5044 63.6582 26.5239 63.8369 26.4292 64.0078 c
26.0493 64.6953 25.1929 64.9365 24.4546 64.7969 c
24.2749 64.7627 24.168 64.6709 24.0127 64.5898 c
23.8423 64.502 23.874 64.4238 23.6943 64.3662 c
23.6133 64.3398 23.4785 64.2422 23.4795 64.1426 c
23.481 64.0273 23.4844 64.0918 23.4912 63.9736 C
23.4707 63.9629 23.4697 63.9785 23.4609 63.999 C
F
15.8159 64.001 m
15.8335 63.9287 15.8232 63.874 15.79 63.8105 c
15.7373 63.71 15.6777 63.748 15.625 63.6826 c
15.5747 63.6201 15.5259 63.4063 15.5459 63.3203 C
15.377 63.2627 15.5366 63.0938 15.5308 62.9707 c
15.5283 62.9209 15.4902 62.8652 15.4858 62.8096 c
15.4761 62.6904 15.5029 62.5439 15.5537 62.4395 c
15.6509 62.2412 15.8218 62.0264 15.9888 61.8955 c
16.1787 61.7471 16.3535 61.3232 16.5972 61.2646 c
16.7744 61.2227 16.981 61.3691 17.1401 61.4072 c
17.3203 61.4502 17.5376 61.3975 17.7114 61.46 c
17.9331 61.5391 17.8389 61.7969 17.9995 61.9102 c
18.104 61.9844 18.2866 61.9199 18.4058 61.9609 c
18.6055 62.0303 18.7446 62.2236 18.7817 62.4209 c
18.7974 62.5029 18.7915 62.5654 18.8203 62.6416 c
18.8589 62.7441 18.9316 62.8018 18.9106 62.9346 c
18.9009 62.9961 18.8589 63.0547 18.8462 63.1211 c
18.8242 63.2354 18.8481 63.3447 18.8467 63.458 c
18.8438 63.6582 18.8633 63.8369 18.7686 64.0078 c
18.3887 64.6953 17.5322 64.9365 16.7939 64.7969 c
16.6143 64.7627 16.5073 64.6709 16.3521 64.5898 c
16.1816 64.502 16.2134 64.4238 16.0337 64.3662 c
15.9526 64.3398 15.8179 64.2422 15.8188 64.1426 c
15.8203 64.0273 15.8237 64.0918 15.8306 63.9736 C
15.8101 63.9629 15.8091 63.9785 15.8003 63.999 C
F
8.15576 64.001 m
8.17334 63.9287 8.16309 63.874 8.12988 63.8105 c
8.07715 63.71 8.01758 63.748 7.96484 63.6826 c
7.91455 63.6201 7.86572 63.4063 7.88574 63.3203 C
7.7168 63.2627 7.87646 63.0938 7.87061 62.9707 c
7.86816 62.9209 7.83008 62.8652 7.82568 62.8096 c
7.81592 62.6904 7.84277 62.5439 7.89355 62.4395 c
7.99072 62.2412 8.16162 62.0264 8.32861 61.8955 c
8.51855 61.7471 8.69336 61.3232 8.93701 61.2646 c
9.11426 61.2227 9.3208 61.3691 9.47998 61.4072 c
9.66016 61.4502 9.87744 61.3975 10.0513 61.46 c
10.2729 61.5391 10.1787 61.7969 10.3394 61.9102 c
10.4438 61.9844 10.6265 61.9199 10.7456 61.9609 c
10.9453 62.0303 11.0845 62.2236 11.1216 62.4209 c
11.1372 62.5029 11.1313 62.5654 11.1602 62.6416 c
11.1987 62.7441 11.2715 62.8018 11.2505 62.9346 c
11.2407 62.9961 11.1987 63.0547 11.186 63.1211 c
11.1641 63.2354 11.188 63.3447 11.1865 63.458 c
11.1836 63.6582 11.2031 63.8369 11.1084 64.0078 c
10.7285 64.6953 9.87207 64.9365 9.13379 64.7969 c
8.9541 64.7627 8.84717 64.6709 8.69189 64.5898 c
8.52148 64.502 8.55322 64.4238 8.37354 64.3662 c
8.29248 64.3398 8.15771 64.2422 8.15869 64.1426 c
8.16016 64.0273 8.16357 64.0918 8.17041 63.9736 C
8.1499 63.9629 8.14893 63.9785 8.14014 63.999 C
F
0.495117 64.001 m
0.512695 63.9287 0.502441 63.874 0.469238 63.8105 c
0.416504 63.71 0.356934 63.748 0.304199 63.6826 c
0.253906 63.6201 0.205078 63.4063 0.225098 63.3203 C
0.056152 63.2627 0.215332 63.0938 0.209961 62.9707 c
0.20752 62.9209 0.169434 62.8652 0.165039 62.8096 c
0.155273 62.6904 0.182129 62.5439 0.23291 62.4395 c
0.330078 62.2412 0.500977 62.0264 0.667969 61.8955 c
0.85791 61.7471 1.03271 61.3232 1.27637 61.2646 c
1.45361 61.2227 1.66016 61.3691 1.81934 61.4072 c
1.99951 61.4502 2.2168 61.3975 2.39063 61.46 c
2.6123 61.5391 2.51807 61.7969 2.67871 61.9102 c
2.7832 61.9844 2.96582 61.9199 3.08496 61.9609 c
3.28467 62.0303 3.42383 62.2236 3.46094 62.4209 c
3.47656 62.5029 3.4707 62.5654 3.49951 62.6416 c
3.53809 62.7441 3.61084 62.8018 3.58984 62.9346 c
3.58008 62.9961 3.53809 63.0547 3.52539 63.1211 c
3.50342 63.2354 3.52734 63.3447 3.52588 63.458 c
3.52295 63.6582 3.54248 63.8369 3.44775 64.0078 c
3.06787 64.6953 2.21143 64.9365 1.47314 64.7969 c
1.29346 64.7627 1.18652 64.6709 1.03125 64.5898 c
0.86084 64.502 0.892578 64.4238 0.712891 64.3662 c
0.631836 64.3398 0.49707 64.2422 0.498047 64.1426 c
0.499512 64.0273 0.50293 64.0918 0.509766 63.9736 C
0.489258 63.9629 0.488281 63.9785 0.479492 63.999 C
F
69.439 56.3477 m
69.4565 56.2754 69.4463 56.2207 69.4131 56.1572 c
69.3604 56.0566 69.3008 56.0947 69.248 56.0293 c
69.1978 55.9668 69.1489 55.7529 69.1689 55.667 C
69 55.6094 69.1592 55.4404 69.1538 55.3174 c
69.1514 55.2676 69.1133 55.2119 69.1089 55.1563 c
69.0991 55.0371 69.126 54.8906 69.1768 54.7861 c
69.2739 54.5879 69.4448 54.373 69.6118 54.2422 c
69.8018 54.0938 69.9766 53.6699 70.2202 53.6113 c
70.3975 53.5693 70.604 53.7158 70.7632 53.7539 c
70.9434 53.7969 71.1606 53.7441 71.3345 53.8066 c
71.5562 53.8857 71.4619 54.1436 71.6226 54.2568 c
71.7271 54.3311 71.9097 54.2666 72.0288 54.3076 c
72.2285 54.377 72.3677 54.5703 72.4048 54.7676 c
72.4204 54.8496 72.4146 54.9121 72.4434 54.9883 c
72.4819 55.0908 72.5547 55.1484 72.5337 55.2813 c
72.5239 55.3428 72.4819 55.4014 72.4692 55.4678 c
72.4473 55.582 72.4712 55.6914 72.4697 55.8047 c
72.4668 56.0049 72.4863 56.1836 72.3916 56.3545 c
72.0117 57.042 71.1553 57.2832 70.417 57.1436 c
70.2373 57.1094 70.1304 57.0176 69.9751 56.9365 c
69.8047 56.8486 69.8364 56.7705 69.6567 56.7129 c
69.5757 56.6865 69.4409 56.5889 69.4419 56.4893 c
69.4434 56.374 69.4468 56.4385 69.4536 56.3203 C
69.4331 56.3096 69.4321 56.3252 69.4233 56.3457 C
F
61.7783 56.3477 m
61.7959 56.2754 61.7856 56.2207 61.7524 56.1572 c
61.6997 56.0566 61.6401 56.0947 61.5874 56.0293 c
61.5371 55.9668 61.4883 55.7529 61.5083 55.667 C
61.3394 55.6094 61.499 55.4404 61.4932 55.3174 c
61.4907 55.2676 61.4526 55.2119 61.4482 55.1563 c
61.4385 55.0371 61.4653 54.8906 61.5161 54.7861 c
61.6133 54.5879 61.7842 54.373 61.9512 54.2422 c
62.1411 54.0938 62.3159 53.6699 62.5596 53.6113 c
62.7368 53.5693 62.9434 53.7158 63.1025 53.7539 c
63.2827 53.7969 63.5 53.7441 63.6738 53.8066 c
63.8955 53.8857 63.8013 54.1436 63.9619 54.2568 c
64.0664 54.3311 64.249 54.2666 64.3682 54.3076 c
64.5679 54.377 64.707 54.5703 64.7441 54.7676 c
64.7598 54.8496 64.7539 54.9121 64.7827 54.9883 c
64.8213 55.0908 64.894 55.1484 64.873 55.2813 c
64.8633 55.3428 64.8213 55.4014 64.8086 55.4678 c
64.7866 55.582 64.8105 55.6914 64.8091 55.8047 c
64.8062 56.0049 64.8257 56.1836 64.731 56.3545 c
64.3511 57.042 63.4946 57.2832 62.7563 57.1436 c
62.5767 57.1094 62.4697 57.0176 62.3145 56.9365 c
62.144 56.8486 62.1758 56.7705 61.9961 56.7129 c
61.915 56.6865 61.7803 56.5889 61.7813 56.4893 c
61.7827 56.374 61.7861 56.4385 61.793 56.3203 C
61.7725 56.3096 61.7715 56.3252 61.7627 56.3457 C
F
54.1182 56.3477 m
54.1357 56.2754 54.1255 56.2207 54.0923 56.1572 c
54.0396 56.0566 53.98 56.0947 53.9272 56.0293 c
53.877 55.9668 53.8281 55.7529 53.8481 55.667 C
53.6792 55.6094 53.8389 55.4404 53.833 55.3174 c
53.8306 55.2676 53.7925 55.2119 53.7881 55.1563 c
53.7783 55.0371 53.8052 54.8906 53.856 54.7861 c
53.9531 54.5879 54.124 54.373 54.291 54.2422 c
54.481 54.0938 54.6558 53.6699 54.8994 53.6113 c
55.0767 53.5693 55.2832 53.7158 55.4424 53.7539 c
55.6226 53.7969 55.8398 53.7441 56.0137 53.8066 c
56.2354 53.8857 56.1411 54.1436 56.3018 54.2568 c
56.4063 54.3311 56.5889 54.2666 56.708 54.3076 c
56.9077 54.377 57.0469 54.5703 57.084 54.7676 c
57.0996 54.8496 57.0938 54.9121 57.1226 54.9883 c
57.1611 55.0908 57.2339 55.1484 57.2129 55.2813 c
57.2031 55.3428 57.1611 55.4014 57.1484 55.4678 c
57.1265 55.582 57.1504 55.6914 57.1489 55.8047 c
57.146 56.0049 57.1655 56.1836 57.0708 56.3545 c
56.6909 57.042 55.8345 57.2832 55.0962 57.1436 c
54.9165 57.1094 54.8096 57.0176 54.6543 56.9365 c
54.4839 56.8486 54.5156 56.7705 54.3359 56.7129 c
54.2549 56.6865 54.1201 56.5889 54.1211 56.4893 c
54.1226 56.374 54.126 56.4385 54.1328 56.3203 C
54.1123 56.3096 54.1113 56.3252 54.1025 56.3457 C
F
46.4575 56.3477 m
46.4751 56.2754 46.4648 56.2207 46.4316 56.1572 c
46.3789 56.0566 46.3193 56.0947 46.2666 56.0293 c
46.2163 55.9668 46.1675 55.7529 46.1875 55.667 C
46.0186 55.6094 46.1782 55.4404 46.1724 55.3174 c
46.1699 55.2676 46.1318 55.2119 46.1274 55.1563 c
46.1177 55.0371 46.1445 54.8906 46.1953 54.7861 c
46.2925 54.5879 46.4634 54.373 46.6304 54.2422 c
46.8203 54.0938 46.9951 53.6699 47.2388 53.6113 c
47.416 53.5693 47.6226 53.7158 47.7817 53.7539 c
47.9619 53.7969 48.1792 53.7441 48.353 53.8066 c
48.5747 53.8857 48.4805 54.1436 48.6411 54.2568 c
48.7456 54.3311 48.9282 54.2666 49.0474 54.3076 c
49.2471 54.377 49.3862 54.5703 49.4233 54.7676 c
49.439 54.8496 49.4331 54.9121 49.4619 54.9883 c
49.5005 55.0908 49.5732 55.1484 49.5522 55.2813 c
49.5425 55.3428 49.5005 55.4014 49.4878 55.4678 c
49.4658 55.582 49.4897 55.6914 49.4883 55.8047 c
49.4854 56.0049 49.5049 56.1836 49.4102 56.3545 c
49.0303 57.042 48.1738 57.2832 47.4355 57.1436 c
47.2559 57.1094 47.1489 57.0176 46.9937 56.9365 c
46.8232 56.8486 46.855 56.7705 46.6753 56.7129 c
46.5942 56.6865 46.4595 56.5889 46.4604 56.4893 c
46.4619 56.374 46.4653 56.4385 46.4722 56.3203 C
46.4517 56.3096 46.4507 56.3252 46.4419 56.3457 C
F
38.7974 56.3477 m
38.8149 56.2754 38.8047 56.2207 38.7715 56.1572 c
38.7188 56.0566 38.6592 56.0947 38.6064 56.0293 c
38.5562 55.9668 38.5073 55.7529 38.5273 55.667 C
38.3584 55.6094 38.5181 55.4404 38.5122 55.3174 c
38.5098 55.2676 38.4717 55.2119 38.4673 55.1563 c
38.4575 55.0371 38.4844 54.8906 38.5352 54.7861 c
38.6323 54.5879 38.8032 54.373 38.9702 54.2422 c
39.1602 54.0938 39.335 53.6699 39.5786 53.6113 c
39.7559 53.5693 39.9624 53.7158 40.1216 53.7539 c
40.3018 53.7969 40.519 53.7441 40.6929 53.8066 c
40.9146 53.8857 40.8203 54.1436 40.981 54.2568 c
41.0854 54.3311 41.2681 54.2666 41.3872 54.3076 c
41.5869 54.377 41.7261 54.5703 41.7632 54.7676 c
41.7788 54.8496 41.7729 54.9121 41.8018 54.9883 c
41.8403 55.0908 41.9131 55.1484 41.8921 55.2813 c
41.8823 55.3428 41.8403 55.4014 41.8276 55.4678 c
41.8057 55.582 41.8296 55.6914 41.8281 55.8047 c
41.8252 56.0049 41.8447 56.1836 41.75 56.3545 c
41.3701 57.042 40.5137 57.2832 39.7754 57.1436 c
39.5957 57.1094 39.4888 57.0176 39.3335 56.9365 c
39.1631 56.8486 39.1948 56.7705 39.0151 56.7129 c
38.9341 56.6865 38.7993 56.5889 38.8003 56.4893 c
38.8018 56.374 38.8052 56.4385 38.812 56.3203 C
38.7915 56.3096 38.7905 56.3252 38.7817 56.3457 C
F
31.1367 56.3477 m
31.1543 56.2754 31.144 56.2207 31.1108 56.1572 c
31.0581 56.0566 30.9985 56.0947 30.9458 56.0293 c
30.8955 55.9668 30.8467 55.7529 30.8667 55.667 C
30.6978 55.6094 30.8574 55.4404 30.8516 55.3174 c
30.8491 55.2676 30.811 55.2119 30.8066 55.1563 c
30.7969 55.0371 30.8237 54.8906 30.8745 54.7861 c
30.9717 54.5879 31.1426 54.373 31.3096 54.2422 c
31.4995 54.0938 31.6743 53.6699 31.918 53.6113 c
32.0952 53.5693 32.3018 53.7158 32.4609 53.7539 c
32.6411 53.7969 32.8584 53.7441 33.0322 53.8066 c
33.2539 53.8857 33.1597 54.1436 33.3203 54.2568 c
33.4248 54.3311 33.6074 54.2666 33.7266 54.3076 c
33.9263 54.377 34.0654 54.5703 34.1025 54.7676 c
34.1182 54.8496 34.1123 54.9121 34.1411 54.9883 c
34.1797 55.0908 34.2524 55.1484 34.2314 55.2813 c
34.2217 55.3428 34.1797 55.4014 34.167 55.4678 c
34.145 55.582 34.1689 55.6914 34.1675 55.8047 c
34.1646 56.0049 34.1841 56.1836 34.0894 56.3545 c
33.7095 57.042 32.853 57.2832 32.1147 57.1436 c
31.9351 57.1094 31.8281 57.0176 31.6729 56.9365 c
31.5024 56.8486 31.5342 56.7705 31.3545 56.7129 c
31.2734 56.6865 31.1387 56.5889 31.1396 56.4893 c
31.1411 56.374 31.1445 56.4385 31.1514 56.3203 C
31.1309 56.3096 31.1299 56.3252 31.1211 56.3457 C
F
23.4766 56.3477 m
23.4941 56.2754 23.4839 56.2207 23.4507 56.1572 c
23.3979 56.0566 23.3384 56.0947 23.2856 56.0293 c
23.2354 55.9668 23.1865 55.7529 23.2065 55.667 C
23.0376 55.6094 23.1973 55.4404 23.1914 55.3174 c
23.189 55.2676 23.1509 55.2119 23.1465 55.1563 c
23.1367 55.0371 23.1636 54.8906 23.2144 54.7861 c
23.3115 54.5879 23.4824 54.373 23.6494 54.2422 c
23.8394 54.0938 24.0142 53.6699 24.2578 53.6113 c
24.4351 53.5693 24.6416 53.7158 24.8008 53.7539 c
24.981 53.7969 25.1982 53.7441 25.3721 53.8066 c
25.5938 53.8857 25.4995 54.1436 25.6602 54.2568 c
25.7646 54.3311 25.9473 54.2666 26.0664 54.3076 c
26.2661 54.377 26.4053 54.5703 26.4424 54.7676 c
26.458 54.8496 26.4521 54.9121 26.481 54.9883 c
26.5195 55.0908 26.5923 55.1484 26.5713 55.2813 c
26.5615 55.3428 26.5195 55.4014 26.5068 55.4678 c
26.4849 55.582 26.5088 55.6914 26.5073 55.8047 c
26.5044 56.0049 26.5239 56.1836 26.4292 56.3545 c
26.0493 57.042 25.1929 57.2832 24.4546 57.1436 c
24.2749 57.1094 24.168 57.0176 24.0127 56.9365 c
23.8423 56.8486 23.874 56.7705 23.6943 56.7129 c
23.6133 56.6865 23.4785 56.5889 23.4795 56.4893 c
23.481 56.374 23.4844 56.4385 23.4912 56.3203 C
23.4707 56.3096 23.4697 56.3252 23.4609 56.3457 C
F
15.8159 56.3477 m
15.8335 56.2754 15.8232 56.2207 15.79 56.1572 c
15.7373 56.0566 15.6777 56.0947 15.625 56.0293 c
15.5747 55.9668 15.5259 55.7529 15.5459 55.667 C
15.377 55.6094 15.5366 55.4404 15.5308 55.3174 c
15.5283 55.2676 15.4902 55.2119 15.4858 55.1563 c
15.4761 55.0371 15.5029 54.8906 15.5537 54.7861 c
15.6509 54.5879 15.8218 54.373 15.9888 54.2422 c
16.1787 54.0938 16.3535 53.6699 16.5972 53.6113 c
16.7744 53.5693 16.981 53.7158 17.1401 53.7539 c
17.3203 53.7969 17.5376 53.7441 17.7114 53.8066 c
17.9331 53.8857 17.8389 54.1436 17.9995 54.2568 c
18.104 54.3311 18.2866 54.2666 18.4058 54.3076 c
18.6055 54.377 18.7446 54.5703 18.7817 54.7676 c
18.7974 54.8496 18.7915 54.9121 18.8203 54.9883 c
18.8589 55.0908 18.9316 55.1484 18.9106 55.2813 c
18.9009 55.3428 18.8589 55.4014 18.8462 55.4678 c
18.8242 55.582 18.8481 55.6914 18.8467 55.8047 c
18.8438 56.0049 18.8633 56.1836 18.7686 56.3545 c
18.3887 57.042 17.5322 57.2832 16.7939 57.1436 c
16.6143 57.1094 16.5073 57.0176 16.3521 56.9365 c
16.1816 56.8486 16.2134 56.7705 16.0337 56.7129 c
15.9526 56.6865 15.8179 56.5889 15.8188 56.4893 c
15.8203 56.374 15.8237 56.4385 15.8306 56.3203 C
15.8101 56.3096 15.8091 56.3252 15.8003 56.3457 C
F
8.15576 56.3477 m
8.17334 56.2754 8.16309 56.2207 8.12988 56.1572 c
8.07715 56.0566 8.01758 56.0947 7.96484 56.0293 c
7.91455 55.9668 7.86572 55.7529 7.88574 55.667 C
7.7168 55.6094 7.87646 55.4404 7.87061 55.3174 c
7.86816 55.2676 7.83008 55.2119 7.82568 55.1563 c
7.81592 55.0371 7.84277 54.8906 7.89355 54.7861 c
7.99072 54.5879 8.16162 54.373 8.32861 54.2422 c
8.51855 54.0938 8.69336 53.6699 8.93701 53.6113 c
9.11426 53.5693 9.3208 53.7158 9.47998 53.7539 c
9.66016 53.7969 9.87744 53.7441 10.0513 53.8066 c
10.2729 53.8857 10.1787 54.1436 10.3394 54.2568 c
10.4438 54.3311 10.6265 54.2666 10.7456 54.3076 c
10.9453 54.377 11.0845 54.5703 11.1216 54.7676 c
11.1372 54.8496 11.1313 54.9121 11.1602 54.9883 c
11.1987 55.0908 11.2715 55.1484 11.2505 55.2813 c
11.2407 55.3428 11.1987 55.4014 11.186 55.4678 c
11.1641 55.582 11.188 55.6914 11.1865 55.8047 c
11.1836 56.0049 11.2031 56.1836 11.1084 56.3545 c
10.7285 57.042 9.87207 57.2832 9.13379 57.1436 c
8.9541 57.1094 8.84717 57.0176 8.69189 56.9365 c
8.52148 56.8486 8.55322 56.7705 8.37354 56.7129 c
8.29248 56.6865 8.15771 56.5889 8.15869 56.4893 c
8.16016 56.374 8.16357 56.4385 8.17041 56.3203 C
8.1499 56.3096 8.14893 56.3252 8.14014 56.3457 C
F
0.495117 56.3477 m
0.512695 56.2754 0.502441 56.2207 0.469238 56.1572 c
0.416504 56.0566 0.356934 56.0947 0.304199 56.0293 c
0.253906 55.9668 0.205078 55.7529 0.225098 55.667 C
0.056152 55.6094 0.215332 55.4404 0.209961 55.3174 c
0.20752 55.2676 0.169434 55.2119 0.165039 55.1563 c
0.155273 55.0371 0.182129 54.8906 0.23291 54.7861 c
0.330078 54.5879 0.500977 54.373 0.667969 54.2422 c
0.85791 54.0938 1.03271 53.6699 1.27637 53.6113 c
1.45361 53.5693 1.66016 53.7158 1.81934 53.7539 c
1.99951 53.7969 2.2168 53.7441 2.39063 53.8066 c
2.6123 53.8857 2.51807 54.1436 2.67871 54.2568 c
2.7832 54.3311 2.96582 54.2666 3.08496 54.3076 c
3.28467 54.377 3.42383 54.5703 3.46094 54.7676 c
3.47656 54.8496 3.4707 54.9121 3.49951 54.9883 c
3.53809 55.0908 3.61084 55.1484 3.58984 55.2813 c
3.58008 55.3428 3.53809 55.4014 3.52539 55.4678 c
3.50342 55.582 3.52734 55.6914 3.52588 55.8047 c
3.52295 56.0049 3.54248 56.1836 3.44775 56.3545 c
3.06787 57.042 2.21143 57.2832 1.47314 57.1436 c
1.29346 57.1094 1.18652 57.0176 1.03125 56.9365 c
0.86084 56.8486 0.892578 56.7705 0.712891 56.7129 c
0.631836 56.6865 0.49707 56.5889 0.498047 56.4893 c
0.499512 56.374 0.50293 56.4385 0.509766 56.3203 C
0.489258 56.3096 0.488281 56.3252 0.479492 56.3457 C
F
69.439 48.6953 m
69.4565 48.623 69.4463 48.5684 69.4131 48.5049 c
69.3604 48.4043 69.3008 48.4424 69.248 48.377 c
69.1978 48.3145 69.1489 48.1006 69.1689 48.0146 C
69 47.957 69.1592 47.7881 69.1538 47.665 c
69.1514 47.6152 69.1133 47.5596 69.1089 47.5039 c
69.0991 47.3848 69.126 47.2383 69.1768 47.1338 c
69.2739 46.9355 69.4448 46.7207 69.6118 46.5898 c
69.8018 46.4414 69.9766 46.0176 70.2202 45.959 c
70.3975 45.917 70.604 46.0635 70.7632 46.1016 c
70.9434 46.1445 71.1606 46.0918 71.3345 46.1543 c
71.5562 46.2334 71.4619 46.4912 71.6226 46.6045 c
71.7271 46.6787 71.9097 46.6143 72.0288 46.6553 c
72.2285 46.7246 72.3677 46.918 72.4048 47.1152 c
72.4204 47.1973 72.4146 47.2598 72.4434 47.3359 c
72.4819 47.4385 72.5547 47.4961 72.5337 47.6289 c
72.5239 47.6904 72.4819 47.749 72.4692 47.8154 c
72.4473 47.9297 72.4712 48.0391 72.4697 48.1523 c
72.4668 48.3525 72.4863 48.5313 72.3916 48.7021 c
72.0117 49.3896 71.1553 49.6309 70.417 49.4912 c
70.2373 49.457 70.1304 49.3652 69.9751 49.2842 c
69.8047 49.1963 69.8364 49.1182 69.6567 49.0605 c
69.5757 49.0342 69.4409 48.9365 69.4419 48.8369 c
69.4434 48.7217 69.4468 48.7861 69.4536 48.668 C
69.4331 48.6572 69.4321 48.6729 69.4233 48.6934 C
F
61.7783 48.6953 m
61.7959 48.623 61.7856 48.5684 61.7524 48.5049 c
61.6997 48.4043 61.6401 48.4424 61.5874 48.377 c
61.5371 48.3145 61.4883 48.1006 61.5083 48.0146 C
61.3394 47.957 61.499 47.7881 61.4932 47.665 c
61.4907 47.6152 61.4526 47.5596 61.4482 47.5039 c
61.4385 47.3848 61.4653 47.2383 61.5161 47.1338 c
61.6133 46.9355 61.7842 46.7207 61.9512 46.5898 c
62.1411 46.4414 62.3159 46.0176 62.5596 45.959 c
62.7368 45.917 62.9434 46.0635 63.1025 46.1016 c
63.2827 46.1445 63.5 46.0918 63.6738 46.1543 c
63.8955 46.2334 63.8013 46.4912 63.9619 46.6045 c
64.0664 46.6787 64.249 46.6143 64.3682 46.6553 c
64.5679 46.7246 64.707 46.918 64.7441 47.1152 c
64.7598 47.1973 64.7539 47.2598 64.7827 47.3359 c
64.8213 47.4385 64.894 47.4961 64.873 47.6289 c
64.8633 47.6904 64.8213 47.749 64.8086 47.8154 c
64.7866 47.9297 64.8105 48.0391 64.8091 48.1523 c
64.8062 48.3525 64.8257 48.5313 64.731 48.7021 c
64.3511 49.3896 63.4946 49.6309 62.7563 49.4912 c
62.5767 49.457 62.4697 49.3652 62.3145 49.2842 c
62.144 49.1963 62.1758 49.1182 61.9961 49.0605 c
61.915 49.0342 61.7803 48.9365 61.7813 48.8369 c
61.7827 48.7217 61.7861 48.7861 61.793 48.668 C
61.7725 48.6572 61.7715 48.6729 61.7627 48.6934 C
F
54.1182 48.6953 m
54.1357 48.623 54.1255 48.5684 54.0923 48.5049 c
54.0396 48.4043 53.98 48.4424 53.9272 48.377 c
53.877 48.3145 53.8281 48.1006 53.8481 48.0146 C
53.6792 47.957 53.8389 47.7881 53.833 47.665 c
53.8306 47.6152 53.7925 47.5596 53.7881 47.5039 c
53.7783 47.3848 53.8052 47.2383 53.856 47.1338 c
53.9531 46.9355 54.124 46.7207 54.291 46.5898 c
54.481 46.4414 54.6558 46.0176 54.8994 45.959 c
55.0767 45.917 55.2832 46.0635 55.4424 46.1016 c
55.6226 46.1445 55.8398 46.0918 56.0137 46.1543 c
56.2354 46.2334 56.1411 46.4912 56.3018 46.6045 c
56.4063 46.6787 56.5889 46.6143 56.708 46.6553 c
56.9077 46.7246 57.0469 46.918 57.084 47.1152 c
57.0996 47.1973 57.0938 47.2598 57.1226 47.3359 c
57.1611 47.4385 57.2339 47.4961 57.2129 47.6289 c
57.2031 47.6904 57.1611 47.749 57.1484 47.8154 c
57.1265 47.9297 57.1504 48.0391 57.1489 48.1523 c
57.146 48.3525 57.1655 48.5313 57.0708 48.7021 c
56.6909 49.3896 55.8345 49.6309 55.0962 49.4912 c
54.9165 49.457 54.8096 49.3652 54.6543 49.2842 c
54.4839 49.1963 54.5156 49.1182 54.3359 49.0605 c
54.2549 49.0342 54.1201 48.9365 54.1211 48.8369 c
54.1226 48.7217 54.126 48.7861 54.1328 48.668 C
54.1123 48.6572 54.1113 48.6729 54.1025 48.6934 C
F
46.4575 48.6953 m
46.4751 48.623 46.4648 48.5684 46.4316 48.5049 c
46.3789 48.4043 46.3193 48.4424 46.2666 48.377 c
46.2163 48.3145 46.1675 48.1006 46.1875 48.0146 C
46.0186 47.957 46.1782 47.7881 46.1724 47.665 c
46.1699 47.6152 46.1318 47.5596 46.1274 47.5039 c
46.1177 47.3848 46.1445 47.2383 46.1953 47.1338 c
46.2925 46.9355 46.4634 46.7207 46.6304 46.5898 c
46.8203 46.4414 46.9951 46.0176 47.2388 45.959 c
47.416 45.917 47.6226 46.0635 47.7817 46.1016 c
47.9619 46.1445 48.1792 46.0918 48.353 46.1543 c
48.5747 46.2334 48.4805 46.4912 48.6411 46.6045 c
48.7456 46.6787 48.9282 46.6143 49.0474 46.6553 c
49.2471 46.7246 49.3862 46.918 49.4233 47.1152 c
49.439 47.1973 49.4331 47.2598 49.4619 47.3359 c
49.5005 47.4385 49.5732 47.4961 49.5522 47.6289 c
49.5425 47.6904 49.5005 47.749 49.4878 47.8154 c
49.4658 47.9297 49.4897 48.0391 49.4883 48.1523 c
49.4854 48.3525 49.5049 48.5313 49.4102 48.7021 c
49.0303 49.3896 48.1738 49.6309 47.4355 49.4912 c
47.2559 49.457 47.1489 49.3652 46.9937 49.2842 c
46.8232 49.1963 46.855 49.1182 46.6753 49.0605 c
46.5942 49.0342 46.4595 48.9365 46.4604 48.8369 c
46.4619 48.7217 46.4653 48.7861 46.4722 48.668 C
46.4517 48.6572 46.4507 48.6729 46.4419 48.6934 C
F
38.7974 48.6953 m
38.8149 48.623 38.8047 48.5684 38.7715 48.5049 c
38.7188 48.4043 38.6592 48.4424 38.6064 48.377 c
38.5562 48.3145 38.5073 48.1006 38.5273 48.0146 C
38.3584 47.957 38.5181 47.7881 38.5122 47.665 c
38.5098 47.6152 38.4717 47.5596 38.4673 47.5039 c
38.4575 47.3848 38.4844 47.2383 38.5352 47.1338 c
38.6323 46.9355 38.8032 46.7207 38.9702 46.5898 c
39.1602 46.4414 39.335 46.0176 39.5786 45.959 c
39.7559 45.917 39.9624 46.0635 40.1216 46.1016 c
40.3018 46.1445 40.519 46.0918 40.6929 46.1543 c
40.9146 46.2334 40.8203 46.4912 40.981 46.6045 c
41.0854 46.6787 41.2681 46.6143 41.3872 46.6553 c
41.5869 46.7246 41.7261 46.918 41.7632 47.1152 c
41.7788 47.1973 41.7729 47.2598 41.8018 47.3359 c
41.8403 47.4385 41.9131 47.4961 41.8921 47.6289 c
41.8823 47.6904 41.8403 47.749 41.8276 47.8154 c
41.8057 47.9297 41.8296 48.0391 41.8281 48.1523 c
41.8252 48.3525 41.8447 48.5313 41.75 48.7021 c
41.3701 49.3896 40.5137 49.6309 39.7754 49.4912 c
39.5957 49.457 39.4888 49.3652 39.3335 49.2842 c
39.1631 49.1963 39.1948 49.1182 39.0151 49.0605 c
38.9341 49.0342 38.7993 48.9365 38.8003 48.8369 c
38.8018 48.7217 38.8052 48.7861 38.812 48.668 C
38.7915 48.6572 38.7905 48.6729 38.7817 48.6934 C
F
31.1367 48.6953 m
31.1543 48.623 31.144 48.5684 31.1108 48.5049 c
31.0581 48.4043 30.9985 48.4424 30.9458 48.377 c
30.8955 48.3145 30.8467 48.1006 30.8667 48.0146 C
30.6978 47.957 30.8574 47.7881 30.8516 47.665 c
30.8491 47.6152 30.811 47.5596 30.8066 47.5039 c
30.7969 47.3848 30.8237 47.2383 30.8745 47.1338 c
30.9717 46.9355 31.1426 46.7207 31.3096 46.5898 c
31.4995 46.4414 31.6743 46.0176 31.918 45.959 c
32.0952 45.917 32.3018 46.0635 32.4609 46.1016 c
32.6411 46.1445 32.8584 46.0918 33.0322 46.1543 c
33.2539 46.2334 33.1597 46.4912 33.3203 46.6045 c
33.4248 46.6787 33.6074 46.6143 33.7266 46.6553 c
33.9263 46.7246 34.0654 46.918 34.1025 47.1152 c
34.1182 47.1973 34.1123 47.2598 34.1411 47.3359 c
34.1797 47.4385 34.2524 47.4961 34.2314 47.6289 c
34.2217 47.6904 34.1797 47.749 34.167 47.8154 c
34.145 47.9297 34.1689 48.0391 34.1675 48.1523 c
34.1646 48.3525 34.1841 48.5313 34.0894 48.7021 c
33.7095 49.3896 32.853 49.6309 32.1147 49.4912 c
31.9351 49.457 31.8281 49.3652 31.6729 49.2842 c
31.5024 49.1963 31.5342 49.1182 31.3545 49.0605 c
31.2734 49.0342 31.1387 48.9365 31.1396 48.8369 c
31.1411 48.7217 31.1445 48.7861 31.1514 48.668 C
31.1309 48.6572 31.1299 48.6729 31.1211 48.6934 C
F
23.4766 48.6953 m
23.4941 48.623 23.4839 48.5684 23.4507 48.5049 c
23.3979 48.4043 23.3384 48.4424 23.2856 48.377 c
23.2354 48.3145 23.1865 48.1006 23.2065 48.0146 C
23.0376 47.957 23.1973 47.7881 23.1914 47.665 c
23.189 47.6152 23.1509 47.5596 23.1465 47.5039 c
23.1367 47.3848 23.1636 47.2383 23.2144 47.1338 c
23.3115 46.9355 23.4824 46.7207 23.6494 46.5898 c
23.8394 46.4414 24.0142 46.0176 24.2578 45.959 c
24.4351 45.917 24.6416 46.0635 24.8008 46.1016 c
24.981 46.1445 25.1982 46.0918 25.3721 46.1543 c
25.5938 46.2334 25.4995 46.4912 25.6602 46.6045 c
25.7646 46.6787 25.9473 46.6143 26.0664 46.6553 c
26.2661 46.7246 26.4053 46.918 26.4424 47.1152 c
26.458 47.1973 26.4521 47.2598 26.481 47.3359 c
26.5195 47.4385 26.5923 47.4961 26.5713 47.6289 c
26.5615 47.6904 26.5195 47.749 26.5068 47.8154 c
26.4849 47.9297 26.5088 48.0391 26.5073 48.1523 c
26.5044 48.3525 26.5239 48.5313 26.4292 48.7021 c
26.0493 49.3896 25.1929 49.6309 24.4546 49.4912 c
24.2749 49.457 24.168 49.3652 24.0127 49.2842 c
23.8423 49.1963 23.874 49.1182 23.6943 49.0605 c
23.6133 49.0342 23.4785 48.9365 23.4795 48.8369 c
23.481 48.7217 23.4844 48.7861 23.4912 48.668 C
23.4707 48.6572 23.4697 48.6729 23.4609 48.6934 C
F
15.8159 48.6953 m
15.8335 48.623 15.8232 48.5684 15.79 48.5049 c
15.7373 48.4043 15.6777 48.4424 15.625 48.377 c
15.5747 48.3145 15.5259 48.1006 15.5459 48.0146 C
15.377 47.957 15.5366 47.7881 15.5308 47.665 c
15.5283 47.6152 15.4902 47.5596 15.4858 47.5039 c
15.4761 47.3848 15.5029 47.2383 15.5537 47.1338 c
15.6509 46.9355 15.8218 46.7207 15.9888 46.5898 c
16.1787 46.4414 16.3535 46.0176 16.5972 45.959 c
16.7744 45.917 16.981 46.0635 17.1401 46.1016 c
17.3203 46.1445 17.5376 46.0918 17.7114 46.1543 c
17.9331 46.2334 17.8389 46.4912 17.9995 46.6045 c
18.104 46.6787 18.2866 46.6143 18.4058 46.6553 c
18.6055 46.7246 18.7446 46.918 18.7817 47.1152 c
18.7974 47.1973 18.7915 47.2598 18.8203 47.3359 c
18.8589 47.4385 18.9316 47.4961 18.9106 47.6289 c
18.9009 47.6904 18.8589 47.749 18.8462 47.8154 c
18.8242 47.9297 18.8481 48.0391 18.8467 48.1523 c
18.8438 48.3525 18.8633 48.5313 18.7686 48.7021 c
18.3887 49.3896 17.5322 49.6309 16.7939 49.4912 c
16.6143 49.457 16.5073 49.3652 16.3521 49.2842 c
16.1816 49.1963 16.2134 49.1182 16.0337 49.0605 c
15.9526 49.0342 15.8179 48.9365 15.8188 48.8369 c
15.8203 48.7217 15.8237 48.7861 15.8306 48.668 C
15.8101 48.6572 15.8091 48.6729 15.8003 48.6934 C
F
8.15576 48.6953 m
8.17334 48.623 8.16309 48.5684 8.12988 48.5049 c
8.07715 48.4043 8.01758 48.4424 7.96484 48.377 c
7.91455 48.3145 7.86572 48.1006 7.88574 48.0146 C
7.7168 47.957 7.87646 47.7881 7.87061 47.665 c
7.86816 47.6152 7.83008 47.5596 7.82568 47.5039 c
7.81592 47.3848 7.84277 47.2383 7.89355 47.1338 c
7.99072 46.9355 8.16162 46.7207 8.32861 46.5898 c
8.51855 46.4414 8.69336 46.0176 8.93701 45.959 c
9.11426 45.917 9.3208 46.0635 9.47998 46.1016 c
9.66016 46.1445 9.87744 46.0918 10.0513 46.1543 c
10.2729 46.2334 10.1787 46.4912 10.3394 46.6045 c
10.4438 46.6787 10.6265 46.6143 10.7456 46.6553 c
10.9453 46.7246 11.0845 46.918 11.1216 47.1152 c
11.1372 47.1973 11.1313 47.2598 11.1602 47.3359 c
11.1987 47.4385 11.2715 47.4961 11.2505 47.6289 c
11.2407 47.6904 11.1987 47.749 11.186 47.8154 c
11.1641 47.9297 11.188 48.0391 11.1865 48.1523 c
11.1836 48.3525 11.2031 48.5313 11.1084 48.7021 c
10.7285 49.3896 9.87207 49.6309 9.13379 49.4912 c
8.9541 49.457 8.84717 49.3652 8.69189 49.2842 c
8.52148 49.1963 8.55322 49.1182 8.37354 49.0605 c
8.29248 49.0342 8.15771 48.9365 8.15869 48.8369 c
8.16016 48.7217 8.16357 48.7861 8.17041 48.668 C
8.1499 48.6572 8.14893 48.6729 8.14014 48.6934 C
F
0.495117 48.6953 m
0.512695 48.623 0.502441 48.5684 0.469238 48.5049 c
0.416504 48.4043 0.356934 48.4424 0.304199 48.377 c
0.253906 48.3145 0.205078 48.1006 0.225098 48.0146 C
0.056152 47.957 0.215332 47.7881 0.209961 47.665 c
0.20752 47.6152 0.169434 47.5596 0.165039 47.5039 c
0.155273 47.3848 0.182129 47.2383 0.23291 47.1338 c
0.330078 46.9355 0.500977 46.7207 0.667969 46.5898 c
0.85791 46.4414 1.03271 46.0176 1.27637 45.959 c
1.45361 45.917 1.66016 46.0635 1.81934 46.1016 c
1.99951 46.1445 2.2168 46.0918 2.39063 46.1543 c
2.6123 46.2334 2.51807 46.4912 2.67871 46.6045 c
2.7832 46.6787 2.96582 46.6143 3.08496 46.6553 c
3.28467 46.7246 3.42383 46.918 3.46094 47.1152 c
3.47656 47.1973 3.4707 47.2598 3.49951 47.3359 c
3.53809 47.4385 3.61084 47.4961 3.58984 47.6289 c
3.58008 47.6904 3.53809 47.749 3.52539 47.8154 c
3.50342 47.9297 3.52734 48.0391 3.52588 48.1523 c
3.52295 48.3525 3.54248 48.5313 3.44775 48.7021 c
3.06787 49.3896 2.21143 49.6309 1.47314 49.4912 c
1.29346 49.457 1.18652 49.3652 1.03125 49.2842 c
0.86084 49.1963 0.892578 49.1182 0.712891 49.0605 c
0.631836 49.0342 0.49707 48.9365 0.498047 48.8369 c
0.499512 48.7217 0.50293 48.7861 0.509766 48.668 C
0.489258 48.6572 0.488281 48.6729 0.479492 48.6934 C
F
69.439 41.042 m
69.4565 40.9697 69.4463 40.915 69.4131 40.8516 c
69.3604 40.751 69.3008 40.7891 69.248 40.7236 c
69.1978 40.6611 69.1489 40.4473 69.1689 40.3613 C
69 40.3037 69.1592 40.1348 69.1538 40.0117 c
69.1514 39.9619 69.1133 39.9063 69.1089 39.8506 c
69.0991 39.7314 69.126 39.585 69.1768 39.4805 c
69.2739 39.2822 69.4448 39.0674 69.6118 38.9365 c
69.8018 38.7881 69.9766 38.3643 70.2202 38.3057 c
70.3975 38.2637 70.604 38.4102 70.7632 38.4482 c
70.9434 38.4912 71.1606 38.4385 71.3345 38.501 c
71.5562 38.5801 71.4619 38.8379 71.6226 38.9512 c
71.7271 39.0254 71.9097 38.9609 72.0288 39.002 c
72.2285 39.0713 72.3677 39.2646 72.4048 39.4619 c
72.4204 39.5439 72.4146 39.6064 72.4434 39.6826 c
72.4819 39.7852 72.5547 39.8428 72.5337 39.9756 c
72.5239 40.0371 72.4819 40.0957 72.4692 40.1621 c
72.4473 40.2764 72.4712 40.3857 72.4697 40.499 c
72.4668 40.6992 72.4863 40.8779 72.3916 41.0488 c
72.0117 41.7363 71.1553 41.9775 70.417 41.8379 c
70.2373 41.8037 70.1304 41.7119 69.9751 41.6309 c
69.8047 41.543 69.8364 41.4648 69.6567 41.4072 c
69.5757 41.3809 69.4409 41.2832 69.4419 41.1836 c
69.4434 41.0684 69.4468 41.1328 69.4536 41.0146 C
69.4331 41.0039 69.4321 41.0195 69.4233 41.04 C
F
61.7783 41.042 m
61.7959 40.9697 61.7856 40.915 61.7524 40.8516 c
61.6997 40.751 61.6401 40.7891 61.5874 40.7236 c
61.5371 40.6611 61.4883 40.4473 61.5083 40.3613 C
61.3394 40.3037 61.499 40.1348 61.4932 40.0117 c
61.4907 39.9619 61.4526 39.9063 61.4482 39.8506 c
61.4385 39.7314 61.4653 39.585 61.5161 39.4805 c
61.6133 39.2822 61.7842 39.0674 61.9512 38.9365 c
62.1411 38.7881 62.3159 38.3643 62.5596 38.3057 c
62.7368 38.2637 62.9434 38.4102 63.1025 38.4482 c
63.2827 38.4912 63.5 38.4385 63.6738 38.501 c
63.8955 38.5801 63.8013 38.8379 63.9619 38.9512 c
64.0664 39.0254 64.249 38.9609 64.3682 39.002 c
64.5679 39.0713 64.707 39.2646 64.7441 39.4619 c
64.7598 39.5439 64.7539 39.6064 64.7827 39.6826 c
64.8213 39.7852 64.894 39.8428 64.873 39.9756 c
64.8633 40.0371 64.8213 40.0957 64.8086 40.1621 c
64.7866 40.2764 64.8105 40.3857 64.8091 40.499 c
64.8062 40.6992 64.8257 40.8779 64.731 41.0488 c
64.3511 41.7363 63.4946 41.9775 62.7563 41.8379 c
62.5767 41.8037 62.4697 41.7119 62.3145 41.6309 c
62.144 41.543 62.1758 41.4648 61.9961 41.4072 c
61.915 41.3809 61.7803 41.2832 61.7813 41.1836 c
61.7827 41.0684 61.7861 41.1328 61.793 41.0146 C
61.7725 41.0039 61.7715 41.0195 61.7627 41.04 C
F
54.1182 41.042 m
54.1357 40.9697 54.1255 40.915 54.0923 40.8516 c
54.0396 40.751 53.98 40.7891 53.9272 40.7236 c
53.877 40.6611 53.8281 40.4473 53.8481 40.3613 C
53.6792 40.3037 53.8389 40.1348 53.833 40.0117 c
53.8306 39.9619 53.7925 39.9063 53.7881 39.8506 c
53.7783 39.7314 53.8052 39.585 53.856 39.4805 c
53.9531 39.2822 54.124 39.0674 54.291 38.9365 c
54.481 38.7881 54.6558 38.3643 54.8994 38.3057 c
55.0767 38.2637 55.2832 38.4102 55.4424 38.4482 c
55.6226 38.4912 55.8398 38.4385 56.0137 38.501 c
56.2354 38.5801 56.1411 38.8379 56.3018 38.9512 c
56.4063 39.0254 56.5889 38.9609 56.708 39.002 c
56.9077 39.0713 57.0469 39.2646 57.084 39.4619 c
57.0996 39.5439 57.0938 39.6064 57.1226 39.6826 c
57.1611 39.7852 57.2339 39.8428 57.2129 39.9756 c
57.2031 40.0371 57.1611 40.0957 57.1484 40.1621 c
57.1265 40.2764 57.1504 40.3857 57.1489 40.499 c
57.146 40.6992 57.1655 40.8779 57.0708 41.0488 c
56.6909 41.7363 55.8345 41.9775 55.0962 41.8379 c
54.9165 41.8037 54.8096 41.7119 54.6543 41.6309 c
54.4839 41.543 54.5156 41.4648 54.3359 41.4072 c
54.2549 41.3809 54.1201 41.2832 54.1211 41.1836 c
54.1226 41.0684 54.126 41.1328 54.1328 41.0146 C
54.1123 41.0039 54.1113 41.0195 54.1025 41.04 C
F
46.4575 41.042 m
46.4751 40.9697 46.4648 40.915 46.4316 40.8516 c
46.3789 40.751 46.3193 40.7891 46.2666 40.7236 c
46.2163 40.6611 46.1675 40.4473 46.1875 40.3613 C
46.0186 40.3037 46.1782 40.1348 46.1724 40.0117 c
46.1699 39.9619 46.1318 39.9063 46.1274 39.8506 c
46.1177 39.7314 46.1445 39.585 46.1953 39.4805 c
46.2925 39.2822 46.4634 39.0674 46.6304 38.9365 c
46.8203 38.7881 46.9951 38.3643 47.2388 38.3057 c
47.416 38.2637 47.6226 38.4102 47.7817 38.4482 c
47.9619 38.4912 48.1792 38.4385 48.353 38.501 c
48.5747 38.5801 48.4805 38.8379 48.6411 38.9512 c
48.7456 39.0254 48.9282 38.9609 49.0474 39.002 c
49.2471 39.0713 49.3862 39.2646 49.4233 39.4619 c
49.439 39.5439 49.4331 39.6064 49.4619 39.6826 c
49.5005 39.7852 49.5732 39.8428 49.5522 39.9756 c
49.5425 40.0371 49.5005 40.0957 49.4878 40.1621 c
49.4658 40.2764 49.4897 40.3857 49.4883 40.499 c
49.4854 40.6992 49.5049 40.8779 49.4102 41.0488 c
49.0303 41.7363 48.1738 41.9775 47.4355 41.8379 c
47.2559 41.8037 47.1489 41.7119 46.9937 41.6309 c
46.8232 41.543 46.855 41.4648 46.6753 41.4072 c
46.5942 41.3809 46.4595 41.2832 46.4604 41.1836 c
46.4619 41.0684 46.4653 41.1328 46.4722 41.0146 C
46.4517 41.0039 46.4507 41.0195 46.4419 41.04 C
F
38.7974 41.042 m
38.8149 40.9697 38.8047 40.915 38.7715 40.8516 c
38.7188 40.751 38.6592 40.7891 38.6064 40.7236 c
38.5562 40.6611 38.5073 40.4473 38.5273 40.3613 C
38.3584 40.3037 38.5181 40.1348 38.5122 40.0117 c
38.5098 39.9619 38.4717 39.9063 38.4673 39.8506 c
38.4575 39.7314 38.4844 39.585 38.5352 39.4805 c
38.6323 39.2822 38.8032 39.0674 38.9702 38.9365 c
39.1602 38.7881 39.335 38.3643 39.5786 38.3057 c
39.7559 38.2637 39.9624 38.4102 40.1216 38.4482 c
40.3018 38.4912 40.519 38.4385 40.6929 38.501 c
40.9146 38.5801 40.8203 38.8379 40.981 38.9512 c
41.0854 39.0254 41.2681 38.9609 41.3872 39.002 c
41.5869 39.0713 41.7261 39.2646 41.7632 39.4619 c
41.7788 39.5439 41.7729 39.6064 41.8018 39.6826 c
41.8403 39.7852 41.9131 39.8428 41.8921 39.9756 c
41.8823 40.0371 41.8403 40.0957 41.8276 40.1621 c
41.8057 40.2764 41.8296 40.3857 41.8281 40.499 c
41.8252 40.6992 41.8447 40.8779 41.75 41.0488 c
41.3701 41.7363 40.5137 41.9775 39.7754 41.8379 c
39.5957 41.8037 39.4888 41.7119 39.3335 41.6309 c
39.1631 41.543 39.1948 41.4648 39.0151 41.4072 c
38.9341 41.3809 38.7993 41.2832 38.8003 41.1836 c
38.8018 41.0684 38.8052 41.1328 38.812 41.0146 C
38.7915 41.0039 38.7905 41.0195 38.7817 41.04 C
F
31.1367 41.042 m
31.1543 40.9697 31.144 40.915 31.1108 40.8516 c
31.0581 40.751 30.9985 40.7891 30.9458 40.7236 c
30.8955 40.6611 30.8467 40.4473 30.8667 40.3613 C
30.6978 40.3037 30.8574 40.1348 30.8516 40.0117 c
30.8491 39.9619 30.811 39.9063 30.8066 39.8506 c
30.7969 39.7314 30.8237 39.585 30.8745 39.4805 c
30.9717 39.2822 31.1426 39.0674 31.3096 38.9365 c
31.4995 38.7881 31.6743 38.3643 31.918 38.3057 c
32.0952 38.2637 32.3018 38.4102 32.4609 38.4482 c
32.6411 38.4912 32.8584 38.4385 33.0322 38.501 c
33.2539 38.5801 33.1597 38.8379 33.3203 38.9512 c
33.4248 39.0254 33.6074 38.9609 33.7266 39.002 c
33.9263 39.0713 34.0654 39.2646 34.1025 39.4619 c
34.1182 39.5439 34.1123 39.6064 34.1411 39.6826 c
34.1797 39.7852 34.2524 39.8428 34.2314 39.9756 c
34.2217 40.0371 34.1797 40.0957 34.167 40.1621 c
34.145 40.2764 34.1689 40.3857 34.1675 40.499 c
34.1646 40.6992 34.1841 40.8779 34.0894 41.0488 c
33.7095 41.7363 32.853 41.9775 32.1147 41.8379 c
31.9351 41.8037 31.8281 41.7119 31.6729 41.6309 c
31.5024 41.543 31.5342 41.4648 31.3545 41.4072 c
31.2734 41.3809 31.1387 41.2832 31.1396 41.1836 c
31.1411 41.0684 31.1445 41.1328 31.1514 41.0146 C
31.1309 41.0039 31.1299 41.0195 31.1211 41.04 C
F
23.4766 41.042 m
23.4941 40.9697 23.4839 40.915 23.4507 40.8516 c
23.3979 40.751 23.3384 40.7891 23.2856 40.7236 c
23.2354 40.6611 23.1865 40.4473 23.2065 40.3613 C
23.0376 40.3037 23.1973 40.1348 23.1914 40.0117 c
23.189 39.9619 23.1509 39.9063 23.1465 39.8506 c
23.1367 39.7314 23.1636 39.585 23.2144 39.4805 c
23.3115 39.2822 23.4824 39.0674 23.6494 38.9365 c
23.8394 38.7881 24.0142 38.3643 24.2578 38.3057 c
24.4351 38.2637 24.6416 38.4102 24.8008 38.4482 c
24.981 38.4912 25.1982 38.4385 25.3721 38.501 c
25.5938 38.5801 25.4995 38.8379 25.6602 38.9512 c
25.7646 39.0254 25.9473 38.9609 26.0664 39.002 c
26.2661 39.0713 26.4053 39.2646 26.4424 39.4619 c
26.458 39.5439 26.4521 39.6064 26.481 39.6826 c
26.5195 39.7852 26.5923 39.8428 26.5713 39.9756 c
26.5615 40.0371 26.5195 40.0957 26.5068 40.1621 c
26.4849 40.2764 26.5088 40.3857 26.5073 40.499 c
26.5044 40.6992 26.5239 40.8779 26.4292 41.0488 c
26.0493 41.7363 25.1929 41.9775 24.4546 41.8379 c
24.2749 41.8037 24.168 41.7119 24.0127 41.6309 c
23.8423 41.543 23.874 41.4648 23.6943 41.4072 c
23.6133 41.3809 23.4785 41.2832 23.4795 41.1836 c
23.481 41.0684 23.4844 41.1328 23.4912 41.0146 C
23.4707 41.0039 23.4697 41.0195 23.4609 41.04 C
F
15.8159 41.042 m
15.8335 40.9697 15.8232 40.915 15.79 40.8516 c
15.7373 40.751 15.6777 40.7891 15.625 40.7236 c
15.5747 40.6611 15.5259 40.4473 15.5459 40.3613 C
15.377 40.3037 15.5366 40.1348 15.5308 40.0117 c
15.5283 39.9619 15.4902 39.9063 15.4858 39.8506 c
15.4761 39.7314 15.5029 39.585 15.5537 39.4805 c
15.6509 39.2822 15.8218 39.0674 15.9888 38.9365 c
16.1787 38.7881 16.3535 38.3643 16.5972 38.3057 c
16.7744 38.2637 16.981 38.4102 17.1401 38.4482 c
17.3203 38.4912 17.5376 38.4385 17.7114 38.501 c
17.9331 38.5801 17.8389 38.8379 17.9995 38.9512 c
18.104 39.0254 18.2866 38.9609 18.4058 39.002 c
18.6055 39.0713 18.7446 39.2646 18.7817 39.4619 c
18.7974 39.5439 18.7915 39.6064 18.8203 39.6826 c
18.8589 39.7852 18.9316 39.8428 18.9106 39.9756 c
18.9009 40.0371 18.8589 40.0957 18.8462 40.1621 c
18.8242 40.2764 18.8481 40.3857 18.8467 40.499 c
18.8438 40.6992 18.8633 40.8779 18.7686 41.0488 c
18.3887 41.7363 17.5322 41.9775 16.7939 41.8379 c
16.6143 41.8037 16.5073 41.7119 16.3521 41.6309 c
16.1816 41.543 16.2134 41.4648 16.0337 41.4072 c
15.9526 41.3809 15.8179 41.2832 15.8188 41.1836 c
15.8203 41.0684 15.8237 41.1328 15.8306 41.0146 C
15.8101 41.0039 15.8091 41.0195 15.8003 41.04 C
F
8.15576 41.042 m
8.17334 40.9697 8.16309 40.915 8.12988 40.8516 c
8.07715 40.751 8.01758 40.7891 7.96484 40.7236 c
7.91455 40.6611 7.86572 40.4473 7.88574 40.3613 C
7.7168 40.3037 7.87646 40.1348 7.87061 40.0117 c
7.86816 39.9619 7.83008 39.9063 7.82568 39.8506 c
7.81592 39.7314 7.84277 39.585 7.89355 39.4805 c
7.99072 39.2822 8.16162 39.0674 8.32861 38.9365 c
8.51855 38.7881 8.69336 38.3643 8.93701 38.3057 c
9.11426 38.2637 9.3208 38.4102 9.47998 38.4482 c
9.66016 38.4912 9.87744 38.4385 10.0513 38.501 c
10.2729 38.5801 10.1787 38.8379 10.3394 38.9512 c
10.4438 39.0254 10.6265 38.9609 10.7456 39.002 c
10.9453 39.0713 11.0845 39.2646 11.1216 39.4619 c
11.1372 39.5439 11.1313 39.6064 11.1602 39.6826 c
11.1987 39.7852 11.2715 39.8428 11.2505 39.9756 c
11.2407 40.0371 11.1987 40.0957 11.186 40.1621 c
11.1641 40.2764 11.188 40.3857 11.1865 40.499 c
11.1836 40.6992 11.2031 40.8779 11.1084 41.0488 c
10.7285 41.7363 9.87207 41.9775 9.13379 41.8379 c
8.9541 41.8037 8.84717 41.7119 8.69189 41.6309 c
8.52148 41.543 8.55322 41.4648 8.37354 41.4072 c
8.29248 41.3809 8.15771 41.2832 8.15869 41.1836 c
8.16016 41.0684 8.16357 41.1328 8.17041 41.0146 C
8.1499 41.0039 8.14893 41.0195 8.14014 41.04 C
F
0.495117 41.042 m
0.512695 40.9697 0.502441 40.915 0.469238 40.8516 c
0.416504 40.751 0.356934 40.7891 0.304199 40.7236 c
0.253906 40.6611 0.205078 40.4473 0.225098 40.3613 C
0.056152 40.3037 0.215332 40.1348 0.209961 40.0117 c
0.20752 39.9619 0.169434 39.9063 0.165039 39.8506 c
0.155273 39.7314 0.182129 39.585 0.23291 39.4805 c
0.330078 39.2822 0.500977 39.0674 0.667969 38.9365 c
0.85791 38.7881 1.03271 38.3643 1.27637 38.3057 c
1.45361 38.2637 1.66016 38.4102 1.81934 38.4482 c
1.99951 38.4912 2.2168 38.4385 2.39063 38.501 c
2.6123 38.5801 2.51807 38.8379 2.67871 38.9512 c
2.7832 39.0254 2.96582 38.9609 3.08496 39.002 c
3.28467 39.0713 3.42383 39.2646 3.46094 39.4619 c
3.47656 39.5439 3.4707 39.6064 3.49951 39.6826 c
3.53809 39.7852 3.61084 39.8428 3.58984 39.9756 c
3.58008 40.0371 3.53809 40.0957 3.52539 40.1621 c
3.50342 40.2764 3.52734 40.3857 3.52588 40.499 c
3.52295 40.6992 3.54248 40.8779 3.44775 41.0488 c
3.06787 41.7363 2.21143 41.9775 1.47314 41.8379 c
1.29346 41.8037 1.18652 41.7119 1.03125 41.6309 c
0.86084 41.543 0.892578 41.4648 0.712891 41.4072 c
0.631836 41.3809 0.49707 41.2832 0.498047 41.1836 c
0.499512 41.0684 0.50293 41.1328 0.509766 41.0146 C
0.489258 41.0039 0.488281 41.0195 0.479492 41.04 C
F
69.439 33.3896 m
69.4565 33.3174 69.4463 33.2627 69.4131 33.1992 c
69.3604 33.0986 69.3008 33.1367 69.248 33.0713 c
69.1978 33.0088 69.1489 32.7949 69.1689 32.709 C
69 32.6514 69.1592 32.4824 69.1538 32.3594 c
69.1514 32.3096 69.1133 32.2539 69.1089 32.1982 c
69.0991 32.0791 69.126 31.9326 69.1768 31.8281 c
69.2739 31.6299 69.4448 31.415 69.6118 31.2842 c
69.8018 31.1357 69.9766 30.7119 70.2202 30.6533 c
70.3975 30.6113 70.604 30.7578 70.7632 30.7959 c
70.9434 30.8389 71.1606 30.7861 71.3345 30.8486 c
71.5562 30.9277 71.4619 31.1855 71.6226 31.2988 c
71.7271 31.373 71.9097 31.3086 72.0288 31.3496 c
72.2285 31.4189 72.3677 31.6123 72.4048 31.8096 c
72.4204 31.8916 72.4146 31.9541 72.4434 32.0303 c
72.4819 32.1328 72.5547 32.1904 72.5337 32.3232 c
72.5239 32.3848 72.4819 32.4434 72.4692 32.5098 c
72.4473 32.624 72.4712 32.7334 72.4697 32.8467 c
72.4668 33.0469 72.4863 33.2256 72.3916 33.3965 c
72.0117 34.084 71.1553 34.3252 70.417 34.1855 c
70.2373 34.1514 70.1304 34.0596 69.9751 33.9785 c
69.8047 33.8906 69.8364 33.8125 69.6567 33.7549 c
69.5757 33.7285 69.4409 33.6309 69.4419 33.5313 c
69.4434 33.416 69.4468 33.4805 69.4536 33.3623 C
69.4331 33.3516 69.4321 33.3672 69.4233 33.3877 C
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
61.7783 33.3896 m
61.7959 33.3174 61.7856 33.2627 61.7524 33.1992 c
61.6997 33.0986 61.6401 33.1367 61.5874 33.0713 c
61.5371 33.0088 61.4883 32.7949 61.5083 32.709 C
61.3394 32.6514 61.499 32.4824 61.4932 32.3594 c
61.4907 32.3096 61.4526 32.2539 61.4482 32.1982 c
61.4385 32.0791 61.4653 31.9326 61.5161 31.8281 c
61.6133 31.6299 61.7842 31.415 61.9512 31.2842 c
62.1411 31.1357 62.3159 30.7119 62.5596 30.6533 c
62.7368 30.6113 62.9434 30.7578 63.1025 30.7959 c
63.2827 30.8389 63.5 30.7861 63.6738 30.8486 c
63.8955 30.9277 63.8013 31.1855 63.9619 31.2988 c
64.0664 31.373 64.249 31.3086 64.3682 31.3496 c
64.5679 31.4189 64.707 31.6123 64.7441 31.8096 c
64.7598 31.8916 64.7539 31.9541 64.7827 32.0303 c
64.8213 32.1328 64.894 32.1904 64.873 32.3232 c
64.8633 32.3848 64.8213 32.4434 64.8086 32.5098 c
64.7866 32.624 64.8105 32.7334 64.8091 32.8467 c
64.8062 33.0469 64.8257 33.2256 64.731 33.3965 c
64.3511 34.084 63.4946 34.3252 62.7563 34.1855 c
62.5767 34.1514 62.4697 34.0596 62.3145 33.9785 c
62.144 33.8906 62.1758 33.8125 61.9961 33.7549 c
61.915 33.7285 61.7803 33.6309 61.7813 33.5313 c
61.7827 33.416 61.7861 33.4805 61.793 33.3623 C
61.7725 33.3516 61.7715 33.3672 61.7627 33.3877 C
F
54.1182 33.3896 m
54.1357 33.3174 54.1255 33.2627 54.0923 33.1992 c
54.0396 33.0986 53.98 33.1367 53.9272 33.0713 c
53.877 33.0088 53.8281 32.7949 53.8481 32.709 C
53.6792 32.6514 53.8389 32.4824 53.833 32.3594 c
53.8306 32.3096 53.7925 32.2539 53.7881 32.1982 c
53.7783 32.0791 53.8052 31.9326 53.856 31.8281 c
53.9531 31.6299 54.124 31.415 54.291 31.2842 c
54.481 31.1357 54.6558 30.7119 54.8994 30.6533 c
55.0767 30.6113 55.2832 30.7578 55.4424 30.7959 c
55.6226 30.8389 55.8398 30.7861 56.0137 30.8486 c
56.2354 30.9277 56.1411 31.1855 56.3018 31.2988 c
56.4063 31.373 56.5889 31.3086 56.708 31.3496 c
56.9077 31.4189 57.0469 31.6123 57.084 31.8096 c
57.0996 31.8916 57.0938 31.9541 57.1226 32.0303 c
57.1611 32.1328 57.2339 32.1904 57.2129 32.3232 c
57.2031 32.3848 57.1611 32.4434 57.1484 32.5098 c
57.1265 32.624 57.1504 32.7334 57.1489 32.8467 c
57.146 33.0469 57.1655 33.2256 57.0708 33.3965 c
56.6909 34.084 55.8345 34.3252 55.0962 34.1855 c
54.9165 34.1514 54.8096 34.0596 54.6543 33.9785 c
54.4839 33.8906 54.5156 33.8125 54.3359 33.7549 c
54.2549 33.7285 54.1201 33.6309 54.1211 33.5313 c
54.1226 33.416 54.126 33.4805 54.1328 33.3623 C
54.1123 33.3516 54.1113 33.3672 54.1025 33.3877 C
F
46.4575 33.3896 m
46.4751 33.3174 46.4648 33.2627 46.4316 33.1992 c
46.3789 33.0986 46.3193 33.1367 46.2666 33.0713 c
46.2163 33.0088 46.1675 32.7949 46.1875 32.709 C
46.0186 32.6514 46.1782 32.4824 46.1724 32.3594 c
46.1699 32.3096 46.1318 32.2539 46.1274 32.1982 c
46.1177 32.0791 46.1445 31.9326 46.1953 31.8281 c
46.2925 31.6299 46.4634 31.415 46.6304 31.2842 c
46.8203 31.1357 46.9951 30.7119 47.2388 30.6533 c
47.416 30.6113 47.6226 30.7578 47.7817 30.7959 c
47.9619 30.8389 48.1792 30.7861 48.353 30.8486 c
48.5747 30.9277 48.4805 31.1855 48.6411 31.2988 c
48.7456 31.373 48.9282 31.3086 49.0474 31.3496 c
49.2471 31.4189 49.3862 31.6123 49.4233 31.8096 c
49.439 31.8916 49.4331 31.9541 49.4619 32.0303 c
49.5005 32.1328 49.5732 32.1904 49.5522 32.3232 c
49.5425 32.3848 49.5005 32.4434 49.4878 32.5098 c
49.4658 32.624 49.4897 32.7334 49.4883 32.8467 c
49.4854 33.0469 49.5049 33.2256 49.4102 33.3965 c
49.0303 34.084 48.1738 34.3252 47.4355 34.1855 c
47.2559 34.1514 47.1489 34.0596 46.9937 33.9785 c
46.8232 33.8906 46.855 33.8125 46.6753 33.7549 c
46.5942 33.7285 46.4595 33.6309 46.4604 33.5313 c
46.4619 33.416 46.4653 33.4805 46.4722 33.3623 C
46.4517 33.3516 46.4507 33.3672 46.4419 33.3877 C
F
38.7974 33.3896 m
38.8149 33.3174 38.8047 33.2627 38.7715 33.1992 c
38.7188 33.0986 38.6592 33.1367 38.6064 33.0713 c
38.5562 33.0088 38.5073 32.7949 38.5273 32.709 C
38.3584 32.6514 38.5181 32.4824 38.5122 32.3594 c
38.5098 32.3096 38.4717 32.2539 38.4673 32.1982 c
38.4575 32.0791 38.4844 31.9326 38.5352 31.8281 c
38.6323 31.6299 38.8032 31.415 38.9702 31.2842 c
39.1602 31.1357 39.335 30.7119 39.5786 30.6533 c
39.7559 30.6113 39.9624 30.7578 40.1216 30.7959 c
40.3018 30.8389 40.519 30.7861 40.6929 30.8486 c
40.9146 30.9277 40.8203 31.1855 40.981 31.2988 c
41.0854 31.373 41.2681 31.3086 41.3872 31.3496 c
41.5869 31.4189 41.7261 31.6123 41.7632 31.8096 c
41.7788 31.8916 41.7729 31.9541 41.8018 32.0303 c
41.8403 32.1328 41.9131 32.1904 41.8921 32.3232 c
41.8823 32.3848 41.8403 32.4434 41.8276 32.5098 c
41.8057 32.624 41.8296 32.7334 41.8281 32.8467 c
41.8252 33.0469 41.8447 33.2256 41.75 33.3965 c
41.3701 34.084 40.5137 34.3252 39.7754 34.1855 c
39.5957 34.1514 39.4888 34.0596 39.3335 33.9785 c
39.1631 33.8906 39.1948 33.8125 39.0151 33.7549 c
38.9341 33.7285 38.7993 33.6309 38.8003 33.5313 c
38.8018 33.416 38.8052 33.4805 38.812 33.3623 C
38.7915 33.3516 38.7905 33.3672 38.7817 33.3877 C
F
31.1367 33.3896 m
31.1543 33.3174 31.144 33.2627 31.1108 33.1992 c
31.0581 33.0986 30.9985 33.1367 30.9458 33.0713 c
30.8955 33.0088 30.8467 32.7949 30.8667 32.709 C
30.6978 32.6514 30.8574 32.4824 30.8516 32.3594 c
30.8491 32.3096 30.811 32.2539 30.8066 32.1982 c
30.7969 32.0791 30.8237 31.9326 30.8745 31.8281 c
30.9717 31.6299 31.1426 31.415 31.3096 31.2842 c
31.4995 31.1357 31.6743 30.7119 31.918 30.6533 c
32.0952 30.6113 32.3018 30.7578 32.4609 30.7959 c
32.6411 30.8389 32.8584 30.7861 33.0322 30.8486 c
33.2539 30.9277 33.1597 31.1855 33.3203 31.2988 c
33.4248 31.373 33.6074 31.3086 33.7266 31.3496 c
33.9263 31.4189 34.0654 31.6123 34.1025 31.8096 c
34.1182 31.8916 34.1123 31.9541 34.1411 32.0303 c
34.1797 32.1328 34.2524 32.1904 34.2314 32.3232 c
34.2217 32.3848 34.1797 32.4434 34.167 32.5098 c
34.145 32.624 34.1689 32.7334 34.1675 32.8467 c
34.1646 33.0469 34.1841 33.2256 34.0894 33.3965 c
33.7095 34.084 32.853 34.3252 32.1147 34.1855 c
31.9351 34.1514 31.8281 34.0596 31.6729 33.9785 c
31.5024 33.8906 31.5342 33.8125 31.3545 33.7549 c
31.2734 33.7285 31.1387 33.6309 31.1396 33.5313 c
31.1411 33.416 31.1445 33.4805 31.1514 33.3623 C
31.1309 33.3516 31.1299 33.3672 31.1211 33.3877 C
F
23.4766 33.3896 m
23.4941 33.3174 23.4839 33.2627 23.4507 33.1992 c
23.3979 33.0986 23.3384 33.1367 23.2856 33.0713 c
23.2354 33.0088 23.1865 32.7949 23.2065 32.709 C
23.0376 32.6514 23.1973 32.4824 23.1914 32.3594 c
23.189 32.3096 23.1509 32.2539 23.1465 32.1982 c
23.1367 32.0791 23.1636 31.9326 23.2144 31.8281 c
23.3115 31.6299 23.4824 31.415 23.6494 31.2842 c
23.8394 31.1357 24.0142 30.7119 24.2578 30.6533 c
24.4351 30.6113 24.6416 30.7578 24.8008 30.7959 c
24.981 30.8389 25.1982 30.7861 25.3721 30.8486 c
25.5938 30.9277 25.4995 31.1855 25.6602 31.2988 c
25.7646 31.373 25.9473 31.3086 26.0664 31.3496 c
26.2661 31.4189 26.4053 31.6123 26.4424 31.8096 c
26.458 31.8916 26.4521 31.9541 26.481 32.0303 c
26.5195 32.1328 26.5923 32.1904 26.5713 32.3232 c
26.5615 32.3848 26.5195 32.4434 26.5068 32.5098 c
26.4849 32.624 26.5088 32.7334 26.5073 32.8467 c
26.5044 33.0469 26.5239 33.2256 26.4292 33.3965 c
26.0493 34.084 25.1929 34.3252 24.4546 34.1855 c
24.2749 34.1514 24.168 34.0596 24.0127 33.9785 c
23.8423 33.8906 23.874 33.8125 23.6943 33.7549 c
23.6133 33.7285 23.4785 33.6309 23.4795 33.5313 c
23.481 33.416 23.4844 33.4805 23.4912 33.3623 C
23.4707 33.3516 23.4697 33.3672 23.4609 33.3877 C
F
15.8159 33.3896 m
15.8335 33.3174 15.8232 33.2627 15.79 33.1992 c
15.7373 33.0986 15.6777 33.1367 15.625 33.0713 c
15.5747 33.0088 15.5259 32.7949 15.5459 32.709 C
15.377 32.6514 15.5366 32.4824 15.5308 32.3594 c
15.5283 32.3096 15.4902 32.2539 15.4858 32.1982 c
15.4761 32.0791 15.5029 31.9326 15.5537 31.8281 c
15.6509 31.6299 15.8218 31.415 15.9888 31.2842 c
16.1787 31.1357 16.3535 30.7119 16.5972 30.6533 c
16.7744 30.6113 16.981 30.7578 17.1401 30.7959 c
17.3203 30.8389 17.5376 30.7861 17.7114 30.8486 c
17.9331 30.9277 17.8389 31.1855 17.9995 31.2988 c
18.104 31.373 18.2866 31.3086 18.4058 31.3496 c
18.6055 31.4189 18.7446 31.6123 18.7817 31.8096 c
18.7974 31.8916 18.7915 31.9541 18.8203 32.0303 c
18.8589 32.1328 18.9316 32.1904 18.9106 32.3232 c
18.9009 32.3848 18.8589 32.4434 18.8462 32.5098 c
18.8242 32.624 18.8481 32.7334 18.8467 32.8467 c
18.8438 33.0469 18.8633 33.2256 18.7686 33.3965 c
18.3887 34.084 17.5322 34.3252 16.7939 34.1855 c
16.6143 34.1514 16.5073 34.0596 16.3521 33.9785 c
16.1816 33.8906 16.2134 33.8125 16.0337 33.7549 c
15.9526 33.7285 15.8179 33.6309 15.8188 33.5313 c
15.8203 33.416 15.8237 33.4805 15.8306 33.3623 C
15.8101 33.3516 15.8091 33.3672 15.8003 33.3877 C
F
8.15576 33.3896 m
8.17334 33.3174 8.16309 33.2627 8.12988 33.1992 c
8.07715 33.0986 8.01758 33.1367 7.96484 33.0713 c
7.91455 33.0088 7.86572 32.7949 7.88574 32.709 C
7.7168 32.6514 7.87646 32.4824 7.87061 32.3594 c
7.86816 32.3096 7.83008 32.2539 7.82568 32.1982 c
7.81592 32.0791 7.84277 31.9326 7.89355 31.8281 c
7.99072 31.6299 8.16162 31.415 8.32861 31.2842 c
8.51855 31.1357 8.69336 30.7119 8.93701 30.6533 c
9.11426 30.6113 9.3208 30.7578 9.47998 30.7959 c
9.66016 30.8389 9.87744 30.7861 10.0513 30.8486 c
10.2729 30.9277 10.1787 31.1855 10.3394 31.2988 c
10.4438 31.373 10.6265 31.3086 10.7456 31.3496 c
10.9453 31.4189 11.0845 31.6123 11.1216 31.8096 c
11.1372 31.8916 11.1313 31.9541 11.1602 32.0303 c
11.1987 32.1328 11.2715 32.1904 11.2505 32.3232 c
11.2407 32.3848 11.1987 32.4434 11.186 32.5098 c
11.1641 32.624 11.188 32.7334 11.1865 32.8467 c
11.1836 33.0469 11.2031 33.2256 11.1084 33.3965 c
10.7285 34.084 9.87207 34.3252 9.13379 34.1855 c
8.9541 34.1514 8.84717 34.0596 8.69189 33.9785 c
8.52148 33.8906 8.55322 33.8125 8.37354 33.7549 c
8.29248 33.7285 8.15771 33.6309 8.15869 33.5313 c
8.16016 33.416 8.16357 33.4805 8.17041 33.3623 C
8.1499 33.3516 8.14893 33.3672 8.14014 33.3877 C
F
0.495117 33.3896 m
0.512695 33.3174 0.502441 33.2627 0.469238 33.1992 c
0.416504 33.0986 0.356934 33.1367 0.304199 33.0713 c
0.253906 33.0088 0.205078 32.7949 0.225098 32.709 C
0.056152 32.6514 0.215332 32.4824 0.209961 32.3594 c
0.20752 32.3096 0.169434 32.2539 0.165039 32.1982 c
0.155273 32.0791 0.182129 31.9326 0.23291 31.8281 c
0.330078 31.6299 0.500977 31.415 0.667969 31.2842 c
0.85791 31.1357 1.03271 30.7119 1.27637 30.6533 c
1.45361 30.6113 1.66016 30.7578 1.81934 30.7959 c
1.99951 30.8389 2.2168 30.7861 2.39063 30.8486 c
2.6123 30.9277 2.51807 31.1855 2.67871 31.2988 c
2.7832 31.373 2.96582 31.3086 3.08496 31.3496 c
3.28467 31.4189 3.42383 31.6123 3.46094 31.8096 c
3.47656 31.8916 3.4707 31.9541 3.49951 32.0303 c
3.53809 32.1328 3.61084 32.1904 3.58984 32.3232 c
3.58008 32.3848 3.53809 32.4434 3.52539 32.5098 c
3.50342 32.624 3.52734 32.7334 3.52588 32.8467 c
3.52295 33.0469 3.54248 33.2256 3.44775 33.3965 c
3.06787 34.084 2.21143 34.3252 1.47314 34.1855 c
1.29346 34.1514 1.18652 34.0596 1.03125 33.9785 c
0.86084 33.8906 0.892578 33.8125 0.712891 33.7549 c
0.631836 33.7285 0.49707 33.6309 0.498047 33.5313 c
0.499512 33.416 0.50293 33.4805 0.509766 33.3623 C
0.489258 33.3516 0.488281 33.3672 0.479492 33.3877 C
F
69.439 25.7363 m
69.4565 25.6641 69.4463 25.6094 69.4131 25.5459 c
69.3604 25.4453 69.3008 25.4834 69.248 25.418 c
69.1978 25.3555 69.1489 25.1416 69.1689 25.0557 C
69 24.998 69.1592 24.8291 69.1538 24.7061 c
69.1514 24.6563 69.1133 24.6006 69.1089 24.5449 c
69.0991 24.4258 69.126 24.2793 69.1768 24.1748 c
69.2739 23.9766 69.4448 23.7617 69.6118 23.6309 c
69.8018 23.4824 69.9766 23.0586 70.2202 23 c
70.3975 22.958 70.604 23.1045 70.7632 23.1426 c
70.9434 23.1855 71.1606 23.1328 71.3345 23.1953 c
71.5562 23.2744 71.4619 23.5322 71.6226 23.6455 c
71.7271 23.7197 71.9097 23.6553 72.0288 23.6963 c
72.2285 23.7656 72.3677 23.959 72.4048 24.1563 c
72.4204 24.2383 72.4146 24.3008 72.4434 24.377 c
72.4819 24.4795 72.5547 24.5371 72.5337 24.6699 c
72.5239 24.7314 72.4819 24.79 72.4692 24.8564 c
72.4473 24.9707 72.4712 25.0801 72.4697 25.1934 c
72.4668 25.3936 72.4863 25.5723 72.3916 25.7432 c
72.0117 26.4307 71.1553 26.6719 70.417 26.5322 c
70.2373 26.498 70.1304 26.4063 69.9751 26.3252 c
69.8047 26.2373 69.8364 26.1592 69.6567 26.1016 c
69.5757 26.0752 69.4409 25.9775 69.4419 25.8779 c
69.4434 25.7627 69.4468 25.8271 69.4536 25.709 C
69.4331 25.6982 69.4321 25.7139 69.4233 25.7344 C
F
61.7783 25.7363 m
61.7959 25.6641 61.7856 25.6094 61.7524 25.5459 c
61.6997 25.4453 61.6401 25.4834 61.5874 25.418 c
61.5371 25.3555 61.4883 25.1416 61.5083 25.0557 C
61.3394 24.998 61.499 24.8291 61.4932 24.7061 c
61.4907 24.6563 61.4526 24.6006 61.4482 24.5449 c
61.4385 24.4258 61.4653 24.2793 61.5161 24.1748 c
61.6133 23.9766 61.7842 23.7617 61.9512 23.6309 c
62.1411 23.4824 62.3159 23.0586 62.5596 23 c
62.7368 22.958 62.9434 23.1045 63.1025 23.1426 c
63.2827 23.1855 63.5 23.1328 63.6738 23.1953 c
63.8955 23.2744 63.8013 23.5322 63.9619 23.6455 c
64.0664 23.7197 64.249 23.6553 64.3682 23.6963 c
64.5679 23.7656 64.707 23.959 64.7441 24.1563 c
64.7598 24.2383 64.7539 24.3008 64.7827 24.377 c
64.8213 24.4795 64.894 24.5371 64.873 24.6699 c
64.8633 24.7314 64.8213 24.79 64.8086 24.8564 c
64.7866 24.9707 64.8105 25.0801 64.8091 25.1934 c
64.8062 25.3936 64.8257 25.5723 64.731 25.7432 c
64.3511 26.4307 63.4946 26.6719 62.7563 26.5322 c
62.5767 26.498 62.4697 26.4063 62.3145 26.3252 c
62.144 26.2373 62.1758 26.1592 61.9961 26.1016 c
61.915 26.0752 61.7803 25.9775 61.7813 25.8779 c
61.7827 25.7627 61.7861 25.8271 61.793 25.709 C
61.7725 25.6982 61.7715 25.7139 61.7627 25.7344 C
F
54.1182 25.7363 m
54.1357 25.6641 54.1255 25.6094 54.0923 25.5459 c
54.0396 25.4453 53.98 25.4834 53.9272 25.418 c
53.877 25.3555 53.8281 25.1416 53.8481 25.0557 C
53.6792 24.998 53.8389 24.8291 53.833 24.7061 c
53.8306 24.6563 53.7925 24.6006 53.7881 24.5449 c
53.7783 24.4258 53.8052 24.2793 53.856 24.1748 c
53.9531 23.9766 54.124 23.7617 54.291 23.6309 c
54.481 23.4824 54.6558 23.0586 54.8994 23 c
55.0767 22.958 55.2832 23.1045 55.4424 23.1426 c
55.6226 23.1855 55.8398 23.1328 56.0137 23.1953 c
56.2354 23.2744 56.1411 23.5322 56.3018 23.6455 c
56.4063 23.7197 56.5889 23.6553 56.708 23.6963 c
56.9077 23.7656 57.0469 23.959 57.084 24.1563 c
57.0996 24.2383 57.0938 24.3008 57.1226 24.377 c
57.1611 24.4795 57.2339 24.5371 57.2129 24.6699 c
57.2031 24.7314 57.1611 24.79 57.1484 24.8564 c
57.1265 24.9707 57.1504 25.0801 57.1489 25.1934 c
57.146 25.3936 57.1655 25.5723 57.0708 25.7432 c
56.6909 26.4307 55.8345 26.6719 55.0962 26.5322 c
54.9165 26.498 54.8096 26.4063 54.6543 26.3252 c
54.4839 26.2373 54.5156 26.1592 54.3359 26.1016 c
54.2549 26.0752 54.1201 25.9775 54.1211 25.8779 c
54.1226 25.7627 54.126 25.8271 54.1328 25.709 C
54.1123 25.6982 54.1113 25.7139 54.1025 25.7344 C
F
46.4575 25.7363 m
46.4751 25.6641 46.4648 25.6094 46.4316 25.5459 c
46.3789 25.4453 46.3193 25.4834 46.2666 25.418 c
46.2163 25.3555 46.1675 25.1416 46.1875 25.0557 C
46.0186 24.998 46.1782 24.8291 46.1724 24.7061 c
46.1699 24.6563 46.1318 24.6006 46.1274 24.5449 c
46.1177 24.4258 46.1445 24.2793 46.1953 24.1748 c
46.2925 23.9766 46.4634 23.7617 46.6304 23.6309 c
46.8203 23.4824 46.9951 23.0586 47.2388 23 c
47.416 22.958 47.6226 23.1045 47.7817 23.1426 c
47.9619 23.1855 48.1792 23.1328 48.353 23.1953 c
48.5747 23.2744 48.4805 23.5322 48.6411 23.6455 c
48.7456 23.7197 48.9282 23.6553 49.0474 23.6963 c
49.2471 23.7656 49.3862 23.959 49.4233 24.1563 c
49.439 24.2383 49.4331 24.3008 49.4619 24.377 c
49.5005 24.4795 49.5732 24.5371 49.5522 24.6699 c
49.5425 24.7314 49.5005 24.79 49.4878 24.8564 c
49.4658 24.9707 49.4897 25.0801 49.4883 25.1934 c
49.4854 25.3936 49.5049 25.5723 49.4102 25.7432 c
49.0303 26.4307 48.1738 26.6719 47.4355 26.5322 c
47.2559 26.498 47.1489 26.4063 46.9937 26.3252 c
46.8232 26.2373 46.855 26.1592 46.6753 26.1016 c
46.5942 26.0752 46.4595 25.9775 46.4604 25.8779 c
46.4619 25.7627 46.4653 25.8271 46.4722 25.709 C
46.4517 25.6982 46.4507 25.7139 46.4419 25.7344 C
F
38.7974 25.7363 m
38.8149 25.6641 38.8047 25.6094 38.7715 25.5459 c
38.7188 25.4453 38.6592 25.4834 38.6064 25.418 c
38.5562 25.3555 38.5073 25.1416 38.5273 25.0557 C
38.3584 24.998 38.5181 24.8291 38.5122 24.7061 c
38.5098 24.6563 38.4717 24.6006 38.4673 24.5449 c
38.4575 24.4258 38.4844 24.2793 38.5352 24.1748 c
38.6323 23.9766 38.8032 23.7617 38.9702 23.6309 c
39.1602 23.4824 39.335 23.0586 39.5786 23 c
39.7559 22.958 39.9624 23.1045 40.1216 23.1426 c
40.3018 23.1855 40.519 23.1328 40.6929 23.1953 c
40.9146 23.2744 40.8203 23.5322 40.981 23.6455 c
41.0854 23.7197 41.2681 23.6553 41.3872 23.6963 c
41.5869 23.7656 41.7261 23.959 41.7632 24.1563 c
41.7788 24.2383 41.7729 24.3008 41.8018 24.377 c
41.8403 24.4795 41.9131 24.5371 41.8921 24.6699 c
41.8823 24.7314 41.8403 24.79 41.8276 24.8564 c
41.8057 24.9707 41.8296 25.0801 41.8281 25.1934 c
41.8252 25.3936 41.8447 25.5723 41.75 25.7432 c
41.3701 26.4307 40.5137 26.6719 39.7754 26.5322 c
39.5957 26.498 39.4888 26.4063 39.3335 26.3252 c
39.1631 26.2373 39.1948 26.1592 39.0151 26.1016 c
38.9341 26.0752 38.7993 25.9775 38.8003 25.8779 c
38.8018 25.7627 38.8052 25.8271 38.812 25.709 C
38.7915 25.6982 38.7905 25.7139 38.7817 25.7344 C
F
31.1367 25.7363 m
31.1543 25.6641 31.144 25.6094 31.1108 25.5459 c
31.0581 25.4453 30.9985 25.4834 30.9458 25.418 c
30.8955 25.3555 30.8467 25.1416 30.8667 25.0557 C
30.6978 24.998 30.8574 24.8291 30.8516 24.7061 c
30.8491 24.6563 30.811 24.6006 30.8066 24.5449 c
30.7969 24.4258 30.8237 24.2793 30.8745 24.1748 c
30.9717 23.9766 31.1426 23.7617 31.3096 23.6309 c
31.4995 23.4824 31.6743 23.0586 31.918 23 c
32.0952 22.958 32.3018 23.1045 32.4609 23.1426 c
32.6411 23.1855 32.8584 23.1328 33.0322 23.1953 c
33.2539 23.2744 33.1597 23.5322 33.3203 23.6455 c
33.4248 23.7197 33.6074 23.6553 33.7266 23.6963 c
33.9263 23.7656 34.0654 23.959 34.1025 24.1563 c
34.1182 24.2383 34.1123 24.3008 34.1411 24.377 c
34.1797 24.4795 34.2524 24.5371 34.2314 24.6699 c
34.2217 24.7314 34.1797 24.79 34.167 24.8564 c
34.145 24.9707 34.1689 25.0801 34.1675 25.1934 c
34.1646 25.3936 34.1841 25.5723 34.0894 25.7432 c
33.7095 26.4307 32.853 26.6719 32.1147 26.5322 c
31.9351 26.498 31.8281 26.4063 31.6729 26.3252 c
31.5024 26.2373 31.5342 26.1592 31.3545 26.1016 c
31.2734 26.0752 31.1387 25.9775 31.1396 25.8779 c
31.1411 25.7627 31.1445 25.8271 31.1514 25.709 C
31.1309 25.6982 31.1299 25.7139 31.1211 25.7344 C
F
23.4766 25.7363 m
23.4941 25.6641 23.4839 25.6094 23.4507 25.5459 c
23.3979 25.4453 23.3384 25.4834 23.2856 25.418 c
23.2354 25.3555 23.1865 25.1416 23.2065 25.0557 C
23.0376 24.998 23.1973 24.8291 23.1914 24.7061 c
23.189 24.6563 23.1509 24.6006 23.1465 24.5449 c
23.1367 24.4258 23.1636 24.2793 23.2144 24.1748 c
23.3115 23.9766 23.4824 23.7617 23.6494 23.6309 c
23.8394 23.4824 24.0142 23.0586 24.2578 23 c
24.4351 22.958 24.6416 23.1045 24.8008 23.1426 c
24.981 23.1855 25.1982 23.1328 25.3721 23.1953 c
25.5938 23.2744 25.4995 23.5322 25.6602 23.6455 c
25.7646 23.7197 25.9473 23.6553 26.0664 23.6963 c
26.2661 23.7656 26.4053 23.959 26.4424 24.1563 c
26.458 24.2383 26.4521 24.3008 26.481 24.377 c
26.5195 24.4795 26.5923 24.5371 26.5713 24.6699 c
26.5615 24.7314 26.5195 24.79 26.5068 24.8564 c
26.4849 24.9707 26.5088 25.0801 26.5073 25.1934 c
26.5044 25.3936 26.5239 25.5723 26.4292 25.7432 c
26.0493 26.4307 25.1929 26.6719 24.4546 26.5322 c
24.2749 26.498 24.168 26.4063 24.0127 26.3252 c
23.8423 26.2373 23.874 26.1592 23.6943 26.1016 c
23.6133 26.0752 23.4785 25.9775 23.4795 25.8779 c
23.481 25.7627 23.4844 25.8271 23.4912 25.709 C
23.4707 25.6982 23.4697 25.7139 23.4609 25.7344 C
F
15.8159 25.7363 m
15.8335 25.6641 15.8232 25.6094 15.79 25.5459 c
15.7373 25.4453 15.6777 25.4834 15.625 25.418 c
15.5747 25.3555 15.5259 25.1416 15.5459 25.0557 C
15.377 24.998 15.5366 24.8291 15.5308 24.7061 c
15.5283 24.6563 15.4902 24.6006 15.4858 24.5449 c
15.4761 24.4258 15.5029 24.2793 15.5537 24.1748 c
15.6509 23.9766 15.8218 23.7617 15.9888 23.6309 c
16.1787 23.4824 16.3535 23.0586 16.5972 23 c
16.7744 22.958 16.981 23.1045 17.1401 23.1426 c
17.3203 23.1855 17.5376 23.1328 17.7114 23.1953 c
17.9331 23.2744 17.8389 23.5322 17.9995 23.6455 c
18.104 23.7197 18.2866 23.6553 18.4058 23.6963 c
18.6055 23.7656 18.7446 23.959 18.7817 24.1563 c
18.7974 24.2383 18.7915 24.3008 18.8203 24.377 c
18.8589 24.4795 18.9316 24.5371 18.9106 24.6699 c
18.9009 24.7314 18.8589 24.79 18.8462 24.8564 c
18.8242 24.9707 18.8481 25.0801 18.8467 25.1934 c
18.8438 25.3936 18.8633 25.5723 18.7686 25.7432 c
18.3887 26.4307 17.5322 26.6719 16.7939 26.5322 c
16.6143 26.498 16.5073 26.4063 16.3521 26.3252 c
16.1816 26.2373 16.2134 26.1592 16.0337 26.1016 c
15.9526 26.0752 15.8179 25.9775 15.8188 25.8779 c
15.8203 25.7627 15.8237 25.8271 15.8306 25.709 C
15.8101 25.6982 15.8091 25.7139 15.8003 25.7344 C
F
8.15576 25.7363 m
8.17334 25.6641 8.16309 25.6094 8.12988 25.5459 c
8.07715 25.4453 8.01758 25.4834 7.96484 25.418 c
7.91455 25.3555 7.86572 25.1416 7.88574 25.0557 C
7.7168 24.998 7.87646 24.8291 7.87061 24.7061 c
7.86816 24.6563 7.83008 24.6006 7.82568 24.5449 c
7.81592 24.4258 7.84277 24.2793 7.89355 24.1748 c
7.99072 23.9766 8.16162 23.7617 8.32861 23.6309 c
8.51855 23.4824 8.69336 23.0586 8.93701 23 c
9.11426 22.958 9.3208 23.1045 9.47998 23.1426 c
9.66016 23.1855 9.87744 23.1328 10.0513 23.1953 c
10.2729 23.2744 10.1787 23.5322 10.3394 23.6455 c
10.4438 23.7197 10.6265 23.6553 10.7456 23.6963 c
10.9453 23.7656 11.0845 23.959 11.1216 24.1563 c
11.1372 24.2383 11.1313 24.3008 11.1602 24.377 c
11.1987 24.4795 11.2715 24.5371 11.2505 24.6699 c
11.2407 24.7314 11.1987 24.79 11.186 24.8564 c
11.1641 24.9707 11.188 25.0801 11.1865 25.1934 c
11.1836 25.3936 11.2031 25.5723 11.1084 25.7432 c
10.7285 26.4307 9.87207 26.6719 9.13379 26.5322 c
8.9541 26.498 8.84717 26.4063 8.69189 26.3252 c
8.52148 26.2373 8.55322 26.1592 8.37354 26.1016 c
8.29248 26.0752 8.15771 25.9775 8.15869 25.8779 c
8.16016 25.7627 8.16357 25.8271 8.17041 25.709 C
8.1499 25.6982 8.14893 25.7139 8.14014 25.7344 C
F
0.495117 25.7363 m
0.512695 25.6641 0.502441 25.6094 0.469238 25.5459 c
0.416504 25.4453 0.356934 25.4834 0.304199 25.418 c
0.253906 25.3555 0.205078 25.1416 0.225098 25.0557 C
0.056152 24.998 0.215332 24.8291 0.209961 24.7061 c
0.20752 24.6563 0.169434 24.6006 0.165039 24.5449 c
0.155273 24.4258 0.182129 24.2793 0.23291 24.1748 c
0.330078 23.9766 0.500977 23.7617 0.667969 23.6309 c
0.85791 23.4824 1.03271 23.0586 1.27637 23 c
1.45361 22.958 1.66016 23.1045 1.81934 23.1426 c
1.99951 23.1855 2.2168 23.1328 2.39063 23.1953 c
2.6123 23.2744 2.51807 23.5322 2.67871 23.6455 c
2.7832 23.7197 2.96582 23.6553 3.08496 23.6963 c
3.28467 23.7656 3.42383 23.959 3.46094 24.1563 c
3.47656 24.2383 3.4707 24.3008 3.49951 24.377 c
3.53809 24.4795 3.61084 24.5371 3.58984 24.6699 c
3.58008 24.7314 3.53809 24.79 3.52539 24.8564 c
3.50342 24.9707 3.52734 25.0801 3.52588 25.1934 c
3.52295 25.3936 3.54248 25.5723 3.44775 25.7432 c
3.06787 26.4307 2.21143 26.6719 1.47314 26.5322 c
1.29346 26.498 1.18652 26.4063 1.03125 26.3252 c
0.86084 26.2373 0.892578 26.1592 0.712891 26.1016 c
0.631836 26.0752 0.49707 25.9775 0.498047 25.8779 c
0.499512 25.7627 0.50293 25.8271 0.509766 25.709 C
0.489258 25.6982 0.488281 25.7139 0.479492 25.7344 C
F
69.439 18.084 m
69.4565 18.0117 69.4463 17.957 69.4131 17.8936 c
69.3604 17.793 69.3008 17.8311 69.248 17.7656 c
69.1978 17.7031 69.1489 17.4893 69.1689 17.4033 C
69 17.3457 69.1592 17.1768 69.1538 17.0537 c
69.1514 17.0039 69.1133 16.9482 69.1089 16.8926 c
69.0991 16.7734 69.126 16.627 69.1768 16.5225 c
69.2739 16.3242 69.4448 16.1094 69.6118 15.9785 c
69.8018 15.8301 69.9766 15.4063 70.2202 15.3477 c
70.3975 15.3057 70.604 15.4521 70.7632 15.4902 c
70.9434 15.5332 71.1606 15.4805 71.3345 15.543 c
71.5562 15.6221 71.4619 15.8799 71.6226 15.9932 c
71.7271 16.0674 71.9097 16.0029 72.0288 16.0439 c
72.2285 16.1133 72.3677 16.3066 72.4048 16.5039 c
72.4204 16.5859 72.4146 16.6484 72.4434 16.7246 c
72.4819 16.8271 72.5547 16.8848 72.5337 17.0176 c
72.5239 17.0791 72.4819 17.1377 72.4692 17.2041 c
72.4473 17.3184 72.4712 17.4277 72.4697 17.541 c
72.4668 17.7412 72.4863 17.9199 72.3916 18.0908 c
72.0117 18.7783 71.1553 19.0195 70.417 18.8799 c
70.2373 18.8457 70.1304 18.7539 69.9751 18.6729 c
69.8047 18.585 69.8364 18.5068 69.6567 18.4492 c
69.5757 18.4229 69.4409 18.3252 69.4419 18.2256 c
69.4434 18.1104 69.4468 18.1748 69.4536 18.0566 C
69.4331 18.0459 69.4321 18.0615 69.4233 18.082 C
F
61.7783 18.084 m
61.7959 18.0117 61.7856 17.957 61.7524 17.8936 c
61.6997 17.793 61.6401 17.8311 61.5874 17.7656 c
61.5371 17.7031 61.4883 17.4893 61.5083 17.4033 C
61.3394 17.3457 61.499 17.1768 61.4932 17.0537 c
61.4907 17.0039 61.4526 16.9482 61.4482 16.8926 c
61.4385 16.7734 61.4653 16.627 61.5161 16.5225 c
61.6133 16.3242 61.7842 16.1094 61.9512 15.9785 c
62.1411 15.8301 62.3159 15.4063 62.5596 15.3477 c
62.7368 15.3057 62.9434 15.4521 63.1025 15.4902 c
63.2827 15.5332 63.5 15.4805 63.6738 15.543 c
63.8955 15.6221 63.8013 15.8799 63.9619 15.9932 c
64.0664 16.0674 64.249 16.0029 64.3682 16.0439 c
64.5679 16.1133 64.707 16.3066 64.7441 16.5039 c
64.7598 16.5859 64.7539 16.6484 64.7827 16.7246 c
64.8213 16.8271 64.894 16.8848 64.873 17.0176 c
64.8633 17.0791 64.8213 17.1377 64.8086 17.2041 c
64.7866 17.3184 64.8105 17.4277 64.8091 17.541 c
64.8062 17.7412 64.8257 17.9199 64.731 18.0908 c
64.3511 18.7783 63.4946 19.0195 62.7563 18.8799 c
62.5767 18.8457 62.4697 18.7539 62.3145 18.6729 c
62.144 18.585 62.1758 18.5068 61.9961 18.4492 c
61.915 18.4229 61.7803 18.3252 61.7813 18.2256 c
61.7827 18.1104 61.7861 18.1748 61.793 18.0566 C
61.7725 18.0459 61.7715 18.0615 61.7627 18.082 C
F
54.1182 18.084 m
54.1357 18.0117 54.1255 17.957 54.0923 17.8936 c
54.0396 17.793 53.98 17.8311 53.9272 17.7656 c
53.877 17.7031 53.8281 17.4893 53.8481 17.4033 C
53.6792 17.3457 53.8389 17.1768 53.833 17.0537 c
53.8306 17.0039 53.7925 16.9482 53.7881 16.8926 c
53.7783 16.7734 53.8052 16.627 53.856 16.5225 c
53.9531 16.3242 54.124 16.1094 54.291 15.9785 c
54.481 15.8301 54.6558 15.4063 54.8994 15.3477 c
55.0767 15.3057 55.2832 15.4521 55.4424 15.4902 c
55.6226 15.5332 55.8398 15.4805 56.0137 15.543 c
56.2354 15.6221 56.1411 15.8799 56.3018 15.9932 c
56.4063 16.0674 56.5889 16.0029 56.708 16.0439 c
56.9077 16.1133 57.0469 16.3066 57.084 16.5039 c
57.0996 16.5859 57.0938 16.6484 57.1226 16.7246 c
57.1611 16.8271 57.2339 16.8848 57.2129 17.0176 c
57.2031 17.0791 57.1611 17.1377 57.1484 17.2041 c
57.1265 17.3184 57.1504 17.4277 57.1489 17.541 c
57.146 17.7412 57.1655 17.9199 57.0708 18.0908 c
56.6909 18.7783 55.8345 19.0195 55.0962 18.8799 c
54.9165 18.8457 54.8096 18.7539 54.6543 18.6729 c
54.4839 18.585 54.5156 18.5068 54.3359 18.4492 c
54.2549 18.4229 54.1201 18.3252 54.1211 18.2256 c
54.1226 18.1104 54.126 18.1748 54.1328 18.0566 C
54.1123 18.0459 54.1113 18.0615 54.1025 18.082 C
F
46.4575 18.084 m
46.4751 18.0117 46.4648 17.957 46.4316 17.8936 c
46.3789 17.793 46.3193 17.8311 46.2666 17.7656 c
46.2163 17.7031 46.1675 17.4893 46.1875 17.4033 C
46.0186 17.3457 46.1782 17.1768 46.1724 17.0537 c
46.1699 17.0039 46.1318 16.9482 46.1274 16.8926 c
46.1177 16.7734 46.1445 16.627 46.1953 16.5225 c
46.2925 16.3242 46.4634 16.1094 46.6304 15.9785 c
46.8203 15.8301 46.9951 15.4063 47.2388 15.3477 c
47.416 15.3057 47.6226 15.4521 47.7817 15.4902 c
47.9619 15.5332 48.1792 15.4805 48.353 15.543 c
48.5747 15.6221 48.4805 15.8799 48.6411 15.9932 c
48.7456 16.0674 48.9282 16.0029 49.0474 16.0439 c
49.2471 16.1133 49.3862 16.3066 49.4233 16.5039 c
49.439 16.5859 49.4331 16.6484 49.4619 16.7246 c
49.5005 16.8271 49.5732 16.8848 49.5522 17.0176 c
49.5425 17.0791 49.5005 17.1377 49.4878 17.2041 c
49.4658 17.3184 49.4897 17.4277 49.4883 17.541 c
49.4854 17.7412 49.5049 17.9199 49.4102 18.0908 c
49.0303 18.7783 48.1738 19.0195 47.4355 18.8799 c
47.2559 18.8457 47.1489 18.7539 46.9937 18.6729 c
46.8232 18.585 46.855 18.5068 46.6753 18.4492 c
46.5942 18.4229 46.4595 18.3252 46.4604 18.2256 c
46.4619 18.1104 46.4653 18.1748 46.4722 18.0566 C
46.4517 18.0459 46.4507 18.0615 46.4419 18.082 C
F
38.7974 18.084 m
38.8149 18.0117 38.8047 17.957 38.7715 17.8936 c
38.7188 17.793 38.6592 17.8311 38.6064 17.7656 c
38.5562 17.7031 38.5073 17.4893 38.5273 17.4033 C
38.3584 17.3457 38.5181 17.1768 38.5122 17.0537 c
38.5098 17.0039 38.4717 16.9482 38.4673 16.8926 c
38.4575 16.7734 38.4844 16.627 38.5352 16.5225 c
38.6323 16.3242 38.8032 16.1094 38.9702 15.9785 c
39.1602 15.8301 39.335 15.4063 39.5786 15.3477 c
39.7559 15.3057 39.9624 15.4521 40.1216 15.4902 c
40.3018 15.5332 40.519 15.4805 40.6929 15.543 c
40.9146 15.6221 40.8203 15.8799 40.981 15.9932 c
41.0854 16.0674 41.2681 16.0029 41.3872 16.0439 c
41.5869 16.1133 41.7261 16.3066 41.7632 16.5039 c
41.7788 16.5859 41.7729 16.6484 41.8018 16.7246 c
41.8403 16.8271 41.9131 16.8848 41.8921 17.0176 c
41.8823 17.0791 41.8403 17.1377 41.8276 17.2041 c
41.8057 17.3184 41.8296 17.4277 41.8281 17.541 c
41.8252 17.7412 41.8447 17.9199 41.75 18.0908 c
41.3701 18.7783 40.5137 19.0195 39.7754 18.8799 c
39.5957 18.8457 39.4888 18.7539 39.3335 18.6729 c
39.1631 18.585 39.1948 18.5068 39.0151 18.4492 c
38.9341 18.4229 38.7993 18.3252 38.8003 18.2256 c
38.8018 18.1104 38.8052 18.1748 38.812 18.0566 C
38.7915 18.0459 38.7905 18.0615 38.7817 18.082 C
F
31.1367 18.084 m
31.1543 18.0117 31.144 17.957 31.1108 17.8936 c
31.0581 17.793 30.9985 17.8311 30.9458 17.7656 c
30.8955 17.7031 30.8467 17.4893 30.8667 17.4033 C
30.6978 17.3457 30.8574 17.1768 30.8516 17.0537 c
30.8491 17.0039 30.811 16.9482 30.8066 16.8926 c
30.7969 16.7734 30.8237 16.627 30.8745 16.5225 c
30.9717 16.3242 31.1426 16.1094 31.3096 15.9785 c
31.4995 15.8301 31.6743 15.4063 31.918 15.3477 c
32.0952 15.3057 32.3018 15.4521 32.4609 15.4902 c
32.6411 15.5332 32.8584 15.4805 33.0322 15.543 c
33.2539 15.6221 33.1597 15.8799 33.3203 15.9932 c
33.4248 16.0674 33.6074 16.0029 33.7266 16.0439 c
33.9263 16.1133 34.0654 16.3066 34.1025 16.5039 c
34.1182 16.5859 34.1123 16.6484 34.1411 16.7246 c
34.1797 16.8271 34.2524 16.8848 34.2314 17.0176 c
34.2217 17.0791 34.1797 17.1377 34.167 17.2041 c
34.145 17.3184 34.1689 17.4277 34.1675 17.541 c
34.1646 17.7412 34.1841 17.9199 34.0894 18.0908 c
33.7095 18.7783 32.853 19.0195 32.1147 18.8799 c
31.9351 18.8457 31.8281 18.7539 31.6729 18.6729 c
31.5024 18.585 31.5342 18.5068 31.3545 18.4492 c
31.2734 18.4229 31.1387 18.3252 31.1396 18.2256 c
31.1411 18.1104 31.1445 18.1748 31.1514 18.0566 C
31.1309 18.0459 31.1299 18.0615 31.1211 18.082 C
F
23.4766 18.084 m
23.4941 18.0117 23.4839 17.957 23.4507 17.8936 c
23.3979 17.793 23.3384 17.8311 23.2856 17.7656 c
23.2354 17.7031 23.1865 17.4893 23.2065 17.4033 C
23.0376 17.3457 23.1973 17.1768 23.1914 17.0537 c
23.189 17.0039 23.1509 16.9482 23.1465 16.8926 c
23.1367 16.7734 23.1636 16.627 23.2144 16.5225 c
23.3115 16.3242 23.4824 16.1094 23.6494 15.9785 c
23.8394 15.8301 24.0142 15.4063 24.2578 15.3477 c
24.4351 15.3057 24.6416 15.4521 24.8008 15.4902 c
24.981 15.5332 25.1982 15.4805 25.3721 15.543 c
25.5938 15.6221 25.4995 15.8799 25.6602 15.9932 c
25.7646 16.0674 25.9473 16.0029 26.0664 16.0439 c
26.2661 16.1133 26.4053 16.3066 26.4424 16.5039 c
26.458 16.5859 26.4521 16.6484 26.481 16.7246 c
26.5195 16.8271 26.5923 16.8848 26.5713 17.0176 c
26.5615 17.0791 26.5195 17.1377 26.5068 17.2041 c
26.4849 17.3184 26.5088 17.4277 26.5073 17.541 c
26.5044 17.7412 26.5239 17.9199 26.4292 18.0908 c
26.0493 18.7783 25.1929 19.0195 24.4546 18.8799 c
24.2749 18.8457 24.168 18.7539 24.0127 18.6729 c
23.8423 18.585 23.874 18.5068 23.6943 18.4492 c
23.6133 18.4229 23.4785 18.3252 23.4795 18.2256 c
23.481 18.1104 23.4844 18.1748 23.4912 18.0566 C
23.4707 18.0459 23.4697 18.0615 23.4609 18.082 C
F
15.8159 18.084 m
15.8335 18.0117 15.8232 17.957 15.79 17.8936 c
15.7373 17.793 15.6777 17.8311 15.625 17.7656 c
15.5747 17.7031 15.5259 17.4893 15.5459 17.4033 C
15.377 17.3457 15.5366 17.1768 15.5308 17.0537 c
15.5283 17.0039 15.4902 16.9482 15.4858 16.8926 c
15.4761 16.7734 15.5029 16.627 15.5537 16.5225 c
15.6509 16.3242 15.8218 16.1094 15.9888 15.9785 c
16.1787 15.8301 16.3535 15.4063 16.5972 15.3477 c
16.7744 15.3057 16.981 15.4521 17.1401 15.4902 c
17.3203 15.5332 17.5376 15.4805 17.7114 15.543 c
17.9331 15.6221 17.8389 15.8799 17.9995 15.9932 c
18.104 16.0674 18.2866 16.0029 18.4058 16.0439 c
18.6055 16.1133 18.7446 16.3066 18.7817 16.5039 c
18.7974 16.5859 18.7915 16.6484 18.8203 16.7246 c
18.8589 16.8271 18.9316 16.8848 18.9106 17.0176 c
18.9009 17.0791 18.8589 17.1377 18.8462 17.2041 c
18.8242 17.3184 18.8481 17.4277 18.8467 17.541 c
18.8438 17.7412 18.8633 17.9199 18.7686 18.0908 c
18.3887 18.7783 17.5322 19.0195 16.7939 18.8799 c
16.6143 18.8457 16.5073 18.7539 16.3521 18.6729 c
16.1816 18.585 16.2134 18.5068 16.0337 18.4492 c
15.9526 18.4229 15.8179 18.3252 15.8188 18.2256 c
15.8203 18.1104 15.8237 18.1748 15.8306 18.0566 C
15.8101 18.0459 15.8091 18.0615 15.8003 18.082 C
F
8.15576 18.084 m
8.17334 18.0117 8.16309 17.957 8.12988 17.8936 c
8.07715 17.793 8.01758 17.8311 7.96484 17.7656 c
7.91455 17.7031 7.86572 17.4893 7.88574 17.4033 C
7.7168 17.3457 7.87646 17.1768 7.87061 17.0537 c
7.86816 17.0039 7.83008 16.9482 7.82568 16.8926 c
7.81592 16.7734 7.84277 16.627 7.89355 16.5225 c
7.99072 16.3242 8.16162 16.1094 8.32861 15.9785 c
8.51855 15.8301 8.69336 15.4063 8.93701 15.3477 c
9.11426 15.3057 9.3208 15.4521 9.47998 15.4902 c
9.66016 15.5332 9.87744 15.4805 10.0513 15.543 c
10.2729 15.6221 10.1787 15.8799 10.3394 15.9932 c
10.4438 16.0674 10.6265 16.0029 10.7456 16.0439 c
10.9453 16.1133 11.0845 16.3066 11.1216 16.5039 c
11.1372 16.5859 11.1313 16.6484 11.1602 16.7246 c
11.1987 16.8271 11.2715 16.8848 11.2505 17.0176 c
11.2407 17.0791 11.1987 17.1377 11.186 17.2041 c
11.1641 17.3184 11.188 17.4277 11.1865 17.541 c
11.1836 17.7412 11.2031 17.9199 11.1084 18.0908 c
10.7285 18.7783 9.87207 19.0195 9.13379 18.8799 c
8.9541 18.8457 8.84717 18.7539 8.69189 18.6729 c
8.52148 18.585 8.55322 18.5068 8.37354 18.4492 c
8.29248 18.4229 8.15771 18.3252 8.15869 18.2256 c
8.16016 18.1104 8.16357 18.1748 8.17041 18.0566 C
8.1499 18.0459 8.14893 18.0615 8.14014 18.082 C
F
0.495117 18.084 m
0.512695 18.0117 0.502441 17.957 0.469238 17.8936 c
0.416504 17.793 0.356934 17.8311 0.304199 17.7656 c
0.253906 17.7031 0.205078 17.4893 0.225098 17.4033 C
0.056152 17.3457 0.215332 17.1768 0.209961 17.0537 c
0.20752 17.0039 0.169434 16.9482 0.165039 16.8926 c
0.155273 16.7734 0.182129 16.627 0.23291 16.5225 c
0.330078 16.3242 0.500977 16.1094 0.667969 15.9785 c
0.85791 15.8301 1.03271 15.4063 1.27637 15.3477 c
1.45361 15.3057 1.66016 15.4521 1.81934 15.4902 c
1.99951 15.5332 2.2168 15.4805 2.39063 15.543 c
2.6123 15.6221 2.51807 15.8799 2.67871 15.9932 c
2.7832 16.0674 2.96582 16.0029 3.08496 16.0439 c
3.28467 16.1133 3.42383 16.3066 3.46094 16.5039 c
3.47656 16.5859 3.4707 16.6484 3.49951 16.7246 c
3.53809 16.8271 3.61084 16.8848 3.58984 17.0176 c
3.58008 17.0791 3.53809 17.1377 3.52539 17.2041 c
3.50342 17.3184 3.52734 17.4277 3.52588 17.541 c
3.52295 17.7412 3.54248 17.9199 3.44775 18.0908 c
3.06787 18.7783 2.21143 19.0195 1.47314 18.8799 c
1.29346 18.8457 1.18652 18.7539 1.03125 18.6729 c
0.86084 18.585 0.892578 18.5068 0.712891 18.4492 c
0.631836 18.4229 0.49707 18.3252 0.498047 18.2256 c
0.499512 18.1104 0.50293 18.1748 0.509766 18.0566 C
0.489258 18.0459 0.488281 18.0615 0.479492 18.082 C
F
69.439 10.4307 m
69.4565 10.3584 69.4463 10.3037 69.4131 10.2402 c
69.3604 10.1396 69.3008 10.1777 69.248 10.1123 c
69.1978 10.0498 69.1489 9.83594 69.1689 9.75 C
69 9.69238 69.1592 9.52344 69.1538 9.40039 c
69.1514 9.35059 69.1133 9.29492 69.1089 9.23926 c
69.0991 9.12012 69.126 8.97363 69.1768 8.86914 c
69.2739 8.6709 69.4448 8.45605 69.6118 8.3252 c
69.8018 8.17676 69.9766 7.75293 70.2202 7.69434 c
70.3975 7.65234 70.604 7.79883 70.7632 7.83691 c
70.9434 7.87988 71.1606 7.82715 71.3345 7.88965 c
71.5562 7.96875 71.4619 8.22656 71.6226 8.33984 c
71.7271 8.41406 71.9097 8.34961 72.0288 8.39063 c
72.2285 8.45996 72.3677 8.65332 72.4048 8.85059 c
72.4204 8.93262 72.4146 8.99512 72.4434 9.07129 c
72.4819 9.17383 72.5547 9.23145 72.5337 9.36426 c
72.5239 9.42578 72.4819 9.48438 72.4692 9.55078 c
72.4473 9.66504 72.4712 9.77441 72.4697 9.8877 c
72.4668 10.0879 72.4863 10.2666 72.3916 10.4375 c
72.0117 11.125 71.1553 11.3662 70.417 11.2266 c
70.2373 11.1924 70.1304 11.1006 69.9751 11.0195 c
69.8047 10.9316 69.8364 10.8535 69.6567 10.7959 c
69.5757 10.7695 69.4409 10.6719 69.4419 10.5723 c
69.4434 10.457 69.4468 10.5215 69.4536 10.4033 C
69.4331 10.3926 69.4321 10.4082 69.4233 10.4287 C
F
61.7783 10.4307 m
61.7959 10.3584 61.7856 10.3037 61.7524 10.2402 c
61.6997 10.1396 61.6401 10.1777 61.5874 10.1123 c
61.5371 10.0498 61.4883 9.83594 61.5083 9.75 C
61.3394 9.69238 61.499 9.52344 61.4932 9.40039 c
61.4907 9.35059 61.4526 9.29492 61.4482 9.23926 c
61.4385 9.12012 61.4653 8.97363 61.5161 8.86914 c
61.6133 8.6709 61.7842 8.45605 61.9512 8.3252 c
62.1411 8.17676 62.3159 7.75293 62.5596 7.69434 c
62.7368 7.65234 62.9434 7.79883 63.1025 7.83691 c
63.2827 7.87988 63.5 7.82715 63.6738 7.88965 c
63.8955 7.96875 63.8013 8.22656 63.9619 8.33984 c
64.0664 8.41406 64.249 8.34961 64.3682 8.39063 c
64.5679 8.45996 64.707 8.65332 64.7441 8.85059 c
64.7598 8.93262 64.7539 8.99512 64.7827 9.07129 c
64.8213 9.17383 64.894 9.23145 64.873 9.36426 c
64.8633 9.42578 64.8213 9.48438 64.8086 9.55078 c
64.7866 9.66504 64.8105 9.77441 64.8091 9.8877 c
64.8062 10.0879 64.8257 10.2666 64.731 10.4375 c
64.3511 11.125 63.4946 11.3662 62.7563 11.2266 c
62.5767 11.1924 62.4697 11.1006 62.3145 11.0195 c
62.144 10.9316 62.1758 10.8535 61.9961 10.7959 c
61.915 10.7695 61.7803 10.6719 61.7813 10.5723 c
61.7827 10.457 61.7861 10.5215 61.793 10.4033 C
61.7725 10.3926 61.7715 10.4082 61.7627 10.4287 C
F
54.1182 10.4307 m
54.1357 10.3584 54.1255 10.3037 54.0923 10.2402 c
54.0396 10.1396 53.98 10.1777 53.9272 10.1123 c
53.877 10.0498 53.8281 9.83594 53.8481 9.75 C
53.6792 9.69238 53.8389 9.52344 53.833 9.40039 c
53.8306 9.35059 53.7925 9.29492 53.7881 9.23926 c
53.7783 9.12012 53.8052 8.97363 53.856 8.86914 c
53.9531 8.6709 54.124 8.45605 54.291 8.3252 c
54.481 8.17676 54.6558 7.75293 54.8994 7.69434 c
55.0767 7.65234 55.2832 7.79883 55.4424 7.83691 c
55.6226 7.87988 55.8398 7.82715 56.0137 7.88965 c
56.2354 7.96875 56.1411 8.22656 56.3018 8.33984 c
56.4063 8.41406 56.5889 8.34961 56.708 8.39063 c
56.9077 8.45996 57.0469 8.65332 57.084 8.85059 c
57.0996 8.93262 57.0938 8.99512 57.1226 9.07129 c
57.1611 9.17383 57.2339 9.23145 57.2129 9.36426 c
57.2031 9.42578 57.1611 9.48438 57.1484 9.55078 c
57.1265 9.66504 57.1504 9.77441 57.1489 9.8877 c
57.146 10.0879 57.1655 10.2666 57.0708 10.4375 c
56.6909 11.125 55.8345 11.3662 55.0962 11.2266 c
54.9165 11.1924 54.8096 11.1006 54.6543 11.0195 c
54.4839 10.9316 54.5156 10.8535 54.3359 10.7959 c
54.2549 10.7695 54.1201 10.6719 54.1211 10.5723 c
54.1226 10.457 54.126 10.5215 54.1328 10.4033 C
54.1123 10.3926 54.1113 10.4082 54.1025 10.4287 C
F
46.4575 10.4307 m
46.4751 10.3584 46.4648 10.3037 46.4316 10.2402 c
46.3789 10.1396 46.3193 10.1777 46.2666 10.1123 c
46.2163 10.0498 46.1675 9.83594 46.1875 9.75 C
46.0186 9.69238 46.1782 9.52344 46.1724 9.40039 c
46.1699 9.35059 46.1318 9.29492 46.1274 9.23926 c
46.1177 9.12012 46.1445 8.97363 46.1953 8.86914 c
46.2925 8.6709 46.4634 8.45605 46.6304 8.3252 c
46.8203 8.17676 46.9951 7.75293 47.2388 7.69434 c
47.416 7.65234 47.6226 7.79883 47.7817 7.83691 c
47.9619 7.87988 48.1792 7.82715 48.353 7.88965 c
48.5747 7.96875 48.4805 8.22656 48.6411 8.33984 c
48.7456 8.41406 48.9282 8.34961 49.0474 8.39063 c
49.2471 8.45996 49.3862 8.65332 49.4233 8.85059 c
49.439 8.93262 49.4331 8.99512 49.4619 9.07129 c
49.5005 9.17383 49.5732 9.23145 49.5522 9.36426 c
49.5425 9.42578 49.5005 9.48438 49.4878 9.55078 c
49.4658 9.66504 49.4897 9.77441 49.4883 9.8877 c
49.4854 10.0879 49.5049 10.2666 49.4102 10.4375 c
49.0303 11.125 48.1738 11.3662 47.4355 11.2266 c
47.2559 11.1924 47.1489 11.1006 46.9937 11.0195 c
46.8232 10.9316 46.855 10.8535 46.6753 10.7959 c
46.5942 10.7695 46.4595 10.6719 46.4604 10.5723 c
46.4619 10.457 46.4653 10.5215 46.4722 10.4033 C
46.4517 10.3926 46.4507 10.4082 46.4419 10.4287 C
F
38.7974 10.4307 m
38.8149 10.3584 38.8047 10.3037 38.7715 10.2402 c
38.7188 10.1396 38.6592 10.1777 38.6064 10.1123 c
38.5562 10.0498 38.5073 9.83594 38.5273 9.75 C
38.3584 9.69238 38.5181 9.52344 38.5122 9.40039 c
38.5098 9.35059 38.4717 9.29492 38.4673 9.23926 c
38.4575 9.12012 38.4844 8.97363 38.5352 8.86914 c
38.6323 8.6709 38.8032 8.45605 38.9702 8.3252 c
39.1602 8.17676 39.335 7.75293 39.5786 7.69434 c
39.7559 7.65234 39.9624 7.79883 40.1216 7.83691 c
40.3018 7.87988 40.519 7.82715 40.6929 7.88965 c
40.9146 7.96875 40.8203 8.22656 40.981 8.33984 c
41.0854 8.41406 41.2681 8.34961 41.3872 8.39063 c
41.5869 8.45996 41.7261 8.65332 41.7632 8.85059 c
41.7788 8.93262 41.7729 8.99512 41.8018 9.07129 c
41.8403 9.17383 41.9131 9.23145 41.8921 9.36426 c
41.8823 9.42578 41.8403 9.48438 41.8276 9.55078 c
41.8057 9.66504 41.8296 9.77441 41.8281 9.8877 c
41.8252 10.0879 41.8447 10.2666 41.75 10.4375 c
41.3701 11.125 40.5137 11.3662 39.7754 11.2266 c
39.5957 11.1924 39.4888 11.1006 39.3335 11.0195 c
39.1631 10.9316 39.1948 10.8535 39.0151 10.7959 c
38.9341 10.7695 38.7993 10.6719 38.8003 10.5723 c
38.8018 10.457 38.8052 10.5215 38.812 10.4033 C
38.7915 10.3926 38.7905 10.4082 38.7817 10.4287 C
F
31.1367 10.4307 m
31.1543 10.3584 31.144 10.3037 31.1108 10.2402 c
31.0581 10.1396 30.9985 10.1777 30.9458 10.1123 c
30.8955 10.0498 30.8467 9.83594 30.8667 9.75 C
30.6978 9.69238 30.8574 9.52344 30.8516 9.40039 c
30.8491 9.35059 30.811 9.29492 30.8066 9.23926 c
30.7969 9.12012 30.8237 8.97363 30.8745 8.86914 c
30.9717 8.6709 31.1426 8.45605 31.3096 8.3252 c
31.4995 8.17676 31.6743 7.75293 31.918 7.69434 c
32.0952 7.65234 32.3018 7.79883 32.4609 7.83691 c
32.6411 7.87988 32.8584 7.82715 33.0322 7.88965 c
33.2539 7.96875 33.1597 8.22656 33.3203 8.33984 c
33.4248 8.41406 33.6074 8.34961 33.7266 8.39063 c
33.9263 8.45996 34.0654 8.65332 34.1025 8.85059 c
34.1182 8.93262 34.1123 8.99512 34.1411 9.07129 c
34.1797 9.17383 34.2524 9.23145 34.2314 9.36426 c
34.2217 9.42578 34.1797 9.48438 34.167 9.55078 c
34.145 9.66504 34.1689 9.77441 34.1675 9.8877 c
34.1646 10.0879 34.1841 10.2666 34.0894 10.4375 c
33.7095 11.125 32.853 11.3662 32.1147 11.2266 c
31.9351 11.1924 31.8281 11.1006 31.6729 11.0195 c
31.5024 10.9316 31.5342 10.8535 31.3545 10.7959 c
31.2734 10.7695 31.1387 10.6719 31.1396 10.5723 c
31.1411 10.457 31.1445 10.5215 31.1514 10.4033 C
31.1309 10.3926 31.1299 10.4082 31.1211 10.4287 C
F
23.4766 10.4307 m
23.4941 10.3584 23.4839 10.3037 23.4507 10.2402 c
23.3979 10.1396 23.3384 10.1777 23.2856 10.1123 c
23.2354 10.0498 23.1865 9.83594 23.2065 9.75 C
23.0376 9.69238 23.1973 9.52344 23.1914 9.40039 c
23.189 9.35059 23.1509 9.29492 23.1465 9.23926 c
23.1367 9.12012 23.1636 8.97363 23.2144 8.86914 c
23.3115 8.6709 23.4824 8.45605 23.6494 8.3252 c
23.8394 8.17676 24.0142 7.75293 24.2578 7.69434 c
24.4351 7.65234 24.6416 7.79883 24.8008 7.83691 c
24.981 7.87988 25.1982 7.82715 25.3721 7.88965 c
25.5938 7.96875 25.4995 8.22656 25.6602 8.33984 c
25.7646 8.41406 25.9473 8.34961 26.0664 8.39063 c
26.2661 8.45996 26.4053 8.65332 26.4424 8.85059 c
26.458 8.93262 26.4521 8.99512 26.481 9.07129 c
26.5195 9.17383 26.5923 9.23145 26.5713 9.36426 c
26.5615 9.42578 26.5195 9.48438 26.5068 9.55078 c
26.4849 9.66504 26.5088 9.77441 26.5073 9.8877 c
26.5044 10.0879 26.5239 10.2666 26.4292 10.4375 c
26.0493 11.125 25.1929 11.3662 24.4546 11.2266 c
24.2749 11.1924 24.168 11.1006 24.0127 11.0195 c
23.8423 10.9316 23.874 10.8535 23.6943 10.7959 c
23.6133 10.7695 23.4785 10.6719 23.4795 10.5723 c
23.481 10.457 23.4844 10.5215 23.4912 10.4033 C
23.4707 10.3926 23.4697 10.4082 23.4609 10.4287 C
F
15.8159 10.4307 m
15.8335 10.3584 15.8232 10.3037 15.79 10.2402 c
15.7373 10.1396 15.6777 10.1777 15.625 10.1123 c
15.5747 10.0498 15.5259 9.83594 15.5459 9.75 C
15.377 9.69238 15.5366 9.52344 15.5308 9.40039 c
15.5283 9.35059 15.4902 9.29492 15.4858 9.23926 c
15.4761 9.12012 15.5029 8.97363 15.5537 8.86914 c
15.6509 8.6709 15.8218 8.45605 15.9888 8.3252 c
16.1787 8.17676 16.3535 7.75293 16.5972 7.69434 c
16.7744 7.65234 16.981 7.79883 17.1401 7.83691 c
17.3203 7.87988 17.5376 7.82715 17.7114 7.88965 c
17.9331 7.96875 17.8389 8.22656 17.9995 8.33984 c
18.104 8.41406 18.2866 8.34961 18.4058 8.39063 c
18.6055 8.45996 18.7446 8.65332 18.7817 8.85059 c
18.7974 8.93262 18.7915 8.99512 18.8203 9.07129 c
18.8589 9.17383 18.9316 9.23145 18.9106 9.36426 c
18.9009 9.42578 18.8589 9.48438 18.8462 9.55078 c
18.8242 9.66504 18.8481 9.77441 18.8467 9.8877 c
18.8438 10.0879 18.8633 10.2666 18.7686 10.4375 c
18.3887 11.125 17.5322 11.3662 16.7939 11.2266 c
16.6143 11.1924 16.5073 11.1006 16.3521 11.0195 c
16.1816 10.9316 16.2134 10.8535 16.0337 10.7959 c
15.9526 10.7695 15.8179 10.6719 15.8188 10.5723 c
15.8203 10.457 15.8237 10.5215 15.8306 10.4033 C
15.8101 10.3926 15.8091 10.4082 15.8003 10.4287 C
F
8.15576 10.4307 m
8.17334 10.3584 8.16309 10.3037 8.12988 10.2402 c
8.07715 10.1396 8.01758 10.1777 7.96484 10.1123 c
7.91455 10.0498 7.86572 9.83594 7.88574 9.75 C
7.7168 9.69238 7.87646 9.52344 7.87061 9.40039 c
7.86816 9.35059 7.83008 9.29492 7.82568 9.23926 c
7.81592 9.12012 7.84277 8.97363 7.89355 8.86914 c
7.99072 8.6709 8.16162 8.45605 8.32861 8.3252 c
8.51855 8.17676 8.69336 7.75293 8.93701 7.69434 c
9.11426 7.65234 9.3208 7.79883 9.47998 7.83691 c
9.66016 7.87988 9.87744 7.82715 10.0513 7.88965 c
10.2729 7.96875 10.1787 8.22656 10.3394 8.33984 c
10.4438 8.41406 10.6265 8.34961 10.7456 8.39063 c
10.9453 8.45996 11.0845 8.65332 11.1216 8.85059 c
11.1372 8.93262 11.1313 8.99512 11.1602 9.07129 c
11.1987 9.17383 11.2715 9.23145 11.2505 9.36426 c
11.2407 9.42578 11.1987 9.48438 11.186 9.55078 c
11.1641 9.66504 11.188 9.77441 11.1865 9.8877 c
11.1836 10.0879 11.2031 10.2666 11.1084 10.4375 c
10.7285 11.125 9.87207 11.3662 9.13379 11.2266 c
8.9541 11.1924 8.84717 11.1006 8.69189 11.0195 c
8.52148 10.9316 8.55322 10.8535 8.37354 10.7959 c
8.29248 10.7695 8.15771 10.6719 8.15869 10.5723 c
8.16016 10.457 8.16357 10.5215 8.17041 10.4033 C
8.1499 10.3926 8.14893 10.4082 8.14014 10.4287 C
F
0.495117 10.4307 m
0.512695 10.3584 0.502441 10.3037 0.469238 10.2402 c
0.416504 10.1396 0.356934 10.1777 0.304199 10.1123 c
0.253906 10.0498 0.205078 9.83594 0.225098 9.75 C
0.056152 9.69238 0.215332 9.52344 0.209961 9.40039 c
0.20752 9.35059 0.169434 9.29492 0.165039 9.23926 c
0.155273 9.12012 0.182129 8.97363 0.23291 8.86914 c
0.330078 8.6709 0.500977 8.45605 0.667969 8.3252 c
0.85791 8.17676 1.03271 7.75293 1.27637 7.69434 c
1.45361 7.65234 1.66016 7.79883 1.81934 7.83691 c
1.99951 7.87988 2.2168 7.82715 2.39063 7.88965 c
2.6123 7.96875 2.51807 8.22656 2.67871 8.33984 c
2.7832 8.41406 2.96582 8.34961 3.08496 8.39063 c
3.28467 8.45996 3.42383 8.65332 3.46094 8.85059 c
3.47656 8.93262 3.4707 8.99512 3.49951 9.07129 c
3.53809 9.17383 3.61084 9.23145 3.58984 9.36426 c
3.58008 9.42578 3.53809 9.48438 3.52539 9.55078 c
3.50342 9.66504 3.52734 9.77441 3.52588 9.8877 c
3.52295 10.0879 3.54248 10.2666 3.44775 10.4375 c
3.06787 11.125 2.21143 11.3662 1.47314 11.2266 c
1.29346 11.1924 1.18652 11.1006 1.03125 11.0195 c
0.86084 10.9316 0.892578 10.8535 0.712891 10.7959 c
0.631836 10.7695 0.49707 10.6719 0.498047 10.5723 c
0.499512 10.457 0.50293 10.5215 0.509766 10.4033 C
0.489258 10.3926 0.488281 10.4082 0.479492 10.4287 C
F
69.439 2.77832 m
69.4565 2.70605 69.4468 2.65137 69.4131 2.58789 c
69.3608 2.4873 69.3003 2.52539 69.248 2.45996 c
69.1973 2.39746 69.1489 2.18359 69.1689 2.09766 C
69 2.04004 69.1587 1.87109 69.1538 1.74805 c
69.1514 1.69824 69.1133 1.64258 69.1089 1.58691 c
69.0986 1.46777 69.126 1.32129 69.1768 1.2168 c
69.2739 1.01855 69.4448 0.803711 69.6118 0.672852 c
69.8018 0.524414 69.9766 0.100586 70.2202 0.041992 c
70.3975 0 70.604 0.146484 70.7632 0.18457 c
70.9434 0.227539 71.1606 0.174805 71.3345 0.237305 c
71.5562 0.316406 71.4619 0.574219 71.6226 0.6875 c
71.7271 0.761719 71.9097 0.697266 72.0288 0.738281 c
72.2285 0.808594 72.3682 1.00098 72.4048 1.19824 c
72.4204 1.28027 72.4146 1.34277 72.4434 1.41895 c
72.4814 1.52148 72.5547 1.5791 72.5337 1.71191 c
72.5239 1.77344 72.4824 1.83203 72.4692 1.89844 c
72.4478 2.0127 72.4712 2.12207 72.4697 2.23535 c
72.4668 2.43555 72.4863 2.61426 72.3916 2.78516 c
72.0117 3.47266 71.1553 3.71387 70.417 3.57422 c
70.2373 3.54004 70.1304 3.44824 69.9751 3.36719 c
69.8047 3.2793 69.8364 3.20117 69.6567 3.14355 c
69.5757 3.11719 69.4414 3.01953 69.4419 2.91992 c
69.4438 2.80469 69.4468 2.86914 69.4536 2.75098 C
69.4331 2.74023 69.4321 2.75586 69.4233 2.77637 c
F
61.7783 2.77832 m
61.7959 2.70605 61.7856 2.65137 61.7524 2.58789 c
61.6997 2.4873 61.6401 2.52539 61.5874 2.45996 c
61.5371 2.39746 61.4883 2.18359 61.5083 2.09766 C
61.3394 2.04004 61.4985 1.87109 61.4932 1.74805 c
61.4907 1.69824 61.4526 1.64258 61.4482 1.58691 c
61.4385 1.46777 61.4653 1.32129 61.5161 1.2168 c
61.6133 1.01855 61.7842 0.803711 61.9512 0.672852 c
62.1411 0.524414 62.3159 0.100586 62.5596 0.041992 c
62.7368 0 62.9434 0.146484 63.1025 0.18457 c
63.2827 0.227539 63.5 0.174805 63.6738 0.237305 c
63.8955 0.316406 63.8013 0.574219 63.9619 0.6875 c
64.0664 0.761719 64.249 0.697266 64.3682 0.738281 c
64.5679 0.807617 64.707 1.00098 64.7441 1.19824 c
64.7598 1.28027 64.7539 1.34277 64.7827 1.41895 c
64.8213 1.52148 64.894 1.5791 64.873 1.71191 c
64.8633 1.77344 64.8213 1.83203 64.8086 1.89844 c
64.7866 2.0127 64.8105 2.12207 64.8091 2.23535 c
64.8062 2.43555 64.8257 2.61426 64.731 2.78516 c
64.3511 3.47266 63.4946 3.71387 62.7563 3.57422 c
62.5767 3.54004 62.4697 3.44824 62.3145 3.36719 c
62.144 3.2793 62.1758 3.20117 61.9961 3.14355 c
61.915 3.11719 61.7803 3.01953 61.7813 2.91992 c
61.7827 2.80469 61.7861 2.86914 61.793 2.75098 C
61.7725 2.74023 61.7715 2.75586 61.7627 2.77637 C
F
54.1182 2.77832 m
54.1357 2.70605 54.1255 2.65137 54.0923 2.58789 c
54.0396 2.4873 53.98 2.52539 53.9272 2.45996 c
53.877 2.39746 53.8281 2.18359 53.8481 2.09766 C
53.6792 2.04004 53.8384 1.87109 53.833 1.74805 c
53.8306 1.69824 53.7925 1.64258 53.7881 1.58691 c
53.7783 1.46777 53.8052 1.32129 53.856 1.2168 c
53.9531 1.01855 54.124 0.803711 54.291 0.672852 c
54.481 0.524414 54.6558 0.100586 54.8994 0.041992 c
55.0767 0 55.2832 0.146484 55.4424 0.18457 c
55.6226 0.227539 55.8398 0.174805 56.0137 0.237305 c
56.2354 0.316406 56.1411 0.574219 56.3018 0.6875 c
56.4063 0.761719 56.5889 0.697266 56.708 0.738281 c
56.9077 0.807617 57.0469 1.00098 57.084 1.19824 c
57.0996 1.28027 57.0938 1.34277 57.1226 1.41895 c
57.1611 1.52148 57.2339 1.5791 57.2129 1.71191 c
57.2031 1.77344 57.1611 1.83203 57.1484 1.89844 c
57.1265 2.0127 57.1504 2.12207 57.1489 2.23535 c
57.146 2.43555 57.1655 2.61426 57.0708 2.78516 c
56.6909 3.47266 55.8345 3.71387 55.0962 3.57422 c
54.9165 3.54004 54.8096 3.44824 54.6543 3.36719 c
54.4839 3.2793 54.5156 3.20117 54.3359 3.14355 c
54.2549 3.11719 54.1201 3.01953 54.1211 2.91992 c
54.1226 2.80469 54.126 2.86914 54.1328 2.75098 C
54.1123 2.74023 54.1113 2.75586 54.1025 2.77637 C
F
46.4575 2.77832 m
46.4751 2.70605 46.4648 2.65137 46.4316 2.58789 c
46.3789 2.4873 46.3193 2.52539 46.2666 2.45996 c
46.2163 2.39746 46.1675 2.18359 46.1875 2.09766 C
46.0186 2.04004 46.1777 1.87109 46.1724 1.74805 c
46.1699 1.69824 46.1318 1.64258 46.1274 1.58691 c
46.1177 1.46777 46.1445 1.32129 46.1953 1.2168 c
46.2925 1.01855 46.4634 0.803711 46.6304 0.672852 c
46.8203 0.524414 46.9951 0.100586 47.2388 0.041992 c
47.416 0 47.6226 0.146484 47.7817 0.18457 c
47.9619 0.227539 48.1792 0.174805 48.353 0.237305 c
48.5747 0.316406 48.4805 0.574219 48.6411 0.6875 c
48.7456 0.761719 48.9282 0.697266 49.0474 0.738281 c
49.2471 0.807617 49.3862 1.00098 49.4233 1.19824 c
49.439 1.28027 49.4331 1.34277 49.4619 1.41895 c
49.5005 1.52148 49.5732 1.5791 49.5522 1.71191 c
49.5425 1.77344 49.5005 1.83203 49.4878 1.89844 c
49.4658 2.0127 49.4897 2.12207 49.4883 2.23535 c
49.4854 2.43555 49.5049 2.61426 49.4102 2.78516 c
49.0303 3.47266 48.1738 3.71387 47.4355 3.57422 c
47.2559 3.54004 47.1489 3.44824 46.9937 3.36719 c
46.8232 3.2793 46.855 3.20117 46.6753 3.14355 c
46.5942 3.11719 46.4595 3.01953 46.4604 2.91992 c
46.4619 2.80469 46.4653 2.86914 46.4722 2.75098 C
46.4517 2.74023 46.4507 2.75586 46.4419 2.77637 C
F
38.7974 2.77832 m
38.8149 2.70605 38.8047 2.65137 38.7715 2.58789 c
38.7188 2.4873 38.6592 2.52539 38.6064 2.45996 c
38.5562 2.39746 38.5073 2.18359 38.5273 2.09766 C
38.3584 2.04004 38.5176 1.87109 38.5122 1.74805 c
38.5098 1.69824 38.4717 1.64258 38.4673 1.58691 c
38.4575 1.46777 38.4844 1.32129 38.5352 1.2168 c
38.6323 1.01855 38.8032 0.803711 38.9702 0.672852 c
39.1602 0.524414 39.335 0.100586 39.5786 0.041992 c
39.7559 0 39.9624 0.146484 40.1216 0.18457 c
40.3018 0.227539 40.519 0.174805 40.6929 0.237305 c
40.9146 0.316406 40.8203 0.574219 40.981 0.6875 c
41.0854 0.761719 41.2681 0.697266 41.3872 0.738281 c
41.5869 0.807617 41.7261 1.00098 41.7632 1.19824 c
41.7788 1.28027 41.7729 1.34277 41.8018 1.41895 c
41.8403 1.52148 41.9131 1.5791 41.8921 1.71191 c
41.8823 1.77344 41.8403 1.83203 41.8276 1.89844 c
41.8057 2.0127 41.8296 2.12207 41.8281 2.23535 c
41.8252 2.43555 41.8447 2.61426 41.75 2.78516 c
41.3701 3.47266 40.5137 3.71387 39.7754 3.57422 c
39.5957 3.54004 39.4888 3.44824 39.3335 3.36719 c
39.1631 3.2793 39.1948 3.20117 39.0151 3.14355 c
38.9341 3.11719 38.7993 3.01953 38.8003 2.91992 c
38.8018 2.80469 38.8052 2.86914 38.812 2.75098 C
38.7915 2.74023 38.7905 2.75586 38.7817 2.77637 C
F
31.1367 2.77832 m
31.1543 2.70605 31.144 2.65137 31.1108 2.58789 c
31.0581 2.4873 30.9985 2.52539 30.9458 2.45996 c
30.8955 2.39746 30.8467 2.18359 30.8667 2.09766 C
30.6978 2.04004 30.8569 1.87109 30.8516 1.74805 c
30.8491 1.69824 30.811 1.64258 30.8066 1.58691 c
30.7969 1.46777 30.8237 1.32129 30.8745 1.2168 c
30.9717 1.01855 31.1426 0.803711 31.3096 0.672852 c
31.4995 0.524414 31.6743 0.100586 31.918 0.041992 c
32.0952 0 32.3018 0.146484 32.4609 0.18457 c
32.6411 0.227539 32.8584 0.174805 33.0322 0.237305 c
33.2539 0.316406 33.1597 0.574219 33.3203 0.6875 c
33.4248 0.761719 33.6074 0.697266 33.7266 0.738281 c
33.9263 0.807617 34.0654 1.00098 34.1025 1.19824 c
34.1182 1.28027 34.1123 1.34277 34.1411 1.41895 c
34.1797 1.52148 34.2524 1.5791 34.2314 1.71191 c
34.2217 1.77344 34.1797 1.83203 34.167 1.89844 c
34.145 2.0127 34.1689 2.12207 34.1675 2.23535 c
34.1646 2.43555 34.1841 2.61426 34.0894 2.78516 c
33.7095 3.47266 32.853 3.71387 32.1147 3.57422 c
31.9351 3.54004 31.8281 3.44824 31.6729 3.36719 c
31.5024 3.2793 31.5342 3.20117 31.3545 3.14355 c
31.2734 3.11719 31.1387 3.01953 31.1396 2.91992 c
31.1411 2.80469 31.1445 2.86914 31.1514 2.75098 C
31.1309 2.74023 31.1299 2.75586 31.1211 2.77637 C
F
23.4766 2.77832 m
23.4941 2.70605 23.4839 2.65137 23.4507 2.58789 c
23.3979 2.4873 23.3384 2.52539 23.2856 2.45996 c
23.2354 2.39746 23.1865 2.18359 23.2065 2.09766 C
23.0376 2.04004 23.1968 1.87109 23.1914 1.74805 c
23.189 1.69824 23.1509 1.64258 23.1465 1.58691 c
23.1367 1.46777 23.1636 1.32129 23.2144 1.2168 c
23.3115 1.01855 23.4824 0.803711 23.6494 0.672852 c
23.8394 0.524414 24.0142 0.100586 24.2578 0.041992 c
24.4351 0 24.6416 0.146484 24.8008 0.18457 c
24.981 0.227539 25.1982 0.174805 25.3721 0.237305 c
25.5938 0.316406 25.4995 0.574219 25.6602 0.6875 c
25.7646 0.761719 25.9473 0.697266 26.0664 0.738281 c
26.2661 0.807617 26.4053 1.00098 26.4424 1.19824 c
26.458 1.28027 26.4521 1.34277 26.481 1.41895 c
26.5195 1.52148 26.5923 1.5791 26.5713 1.71191 c
26.5615 1.77344 26.5195 1.83203 26.5068 1.89844 c
26.4849 2.0127 26.5088 2.12207 26.5073 2.23535 c
26.5044 2.43555 26.5239 2.61426 26.4292 2.78516 c
26.0493 3.47266 25.1929 3.71387 24.4546 3.57422 c
24.2749 3.54004 24.168 3.44824 24.0127 3.36719 c
23.8423 3.2793 23.874 3.20117 23.6943 3.14355 c
23.6133 3.11719 23.4785 3.01953 23.4795 2.91992 c
23.481 2.80469 23.4844 2.86914 23.4912 2.75098 C
23.4707 2.74023 23.4697 2.75586 23.4609 2.77637 C
F
15.8159 2.77832 m
15.8335 2.70605 15.8232 2.65137 15.79 2.58789 c
15.7373 2.4873 15.6777 2.52539 15.625 2.45996 c
15.5747 2.39746 15.5259 2.18359 15.5459 2.09766 C
15.377 2.04004 15.5361 1.87109 15.5308 1.74805 c
15.5283 1.69824 15.4902 1.64258 15.4858 1.58691 c
15.4761 1.46777 15.5029 1.32129 15.5537 1.2168 c
15.6509 1.01855 15.8218 0.803711 15.9888 0.672852 c
16.1787 0.524414 16.3535 0.100586 16.5972 0.041992 c
16.7744 0 16.981 0.146484 17.1401 0.18457 c
17.3203 0.227539 17.5376 0.174805 17.7114 0.237305 c
17.9331 0.316406 17.8389 0.574219 17.9995 0.6875 c
18.104 0.761719 18.2866 0.697266 18.4058 0.738281 c
18.6055 0.807617 18.7446 1.00098 18.7817 1.19824 c
18.7974 1.28027 18.7915 1.34277 18.8203 1.41895 c
18.8589 1.52148 18.9316 1.5791 18.9106 1.71191 c
18.9009 1.77344 18.8589 1.83203 18.8462 1.89844 c
18.8242 2.0127 18.8481 2.12207 18.8467 2.23535 c
18.8438 2.43555 18.8633 2.61426 18.7686 2.78516 c
18.3887 3.47266 17.5322 3.71387 16.7939 3.57422 c
16.6143 3.54004 16.5073 3.44824 16.3521 3.36719 c
16.1816 3.2793 16.2134 3.20117 16.0337 3.14355 c
15.9526 3.11719 15.8179 3.01953 15.8188 2.91992 c
15.8203 2.80469 15.8237 2.86914 15.8306 2.75098 C
15.8101 2.74023 15.8091 2.75586 15.8003 2.77637 C
F
8.15576 2.77832 m
8.17334 2.70605 8.16309 2.65137 8.12988 2.58789 c
8.07715 2.4873 8.01758 2.52539 7.96484 2.45996 c
7.91455 2.39746 7.86572 2.18359 7.88574 2.09766 C
7.7168 2.04004 7.87598 1.87109 7.87061 1.74805 c
7.86816 1.69824 7.83008 1.64258 7.82568 1.58691 c
7.81592 1.46777 7.84277 1.32129 7.89355 1.2168 c
7.99072 1.01855 8.16162 0.803711 8.32861 0.672852 c
8.51855 0.524414 8.69336 0.100586 8.93701 0.041992 c
9.11426 0 9.3208 0.146484 9.47998 0.18457 c
9.66016 0.227539 9.87744 0.174805 10.0513 0.237305 c
10.2729 0.316406 10.1787 0.574219 10.3394 0.6875 c
10.4438 0.761719 10.6265 0.697266 10.7456 0.738281 c
10.9453 0.807617 11.0845 1.00098 11.1216 1.19824 c
11.1372 1.28027 11.1313 1.34277 11.1602 1.41895 c
11.1987 1.52148 11.2715 1.5791 11.2505 1.71191 c
11.2407 1.77344 11.1987 1.83203 11.186 1.89844 c
11.1641 2.0127 11.188 2.12207 11.1865 2.23535 c
11.1836 2.43555 11.2031 2.61426 11.1084 2.78516 c
10.7285 3.47266 9.87207 3.71387 9.13379 3.57422 c
8.9541 3.54004 8.84717 3.44824 8.69189 3.36719 c
8.52148 3.2793 8.55322 3.20117 8.37354 3.14355 c
8.29248 3.11719 8.15771 3.01953 8.15869 2.91992 c
8.16016 2.80469 8.16357 2.86914 8.17041 2.75098 C
8.1499 2.74023 8.14893 2.75586 8.14014 2.77637 C
F
0.495117 2.77832 m
0.512695 2.70605 0.50293 2.65137 0.469238 2.58789 c
0.416992 2.4873 0.356445 2.52539 0.304199 2.45996 c
0.253418 2.39746 0.205078 2.18359 0.225098 2.09766 C
0.056152 2.04004 0.214844 1.87109 0.209961 1.74805 c
0.20752 1.69824 0.169434 1.64258 0.165039 1.58691 c
0.154785 1.46777 0.182129 1.32129 0.23291 1.2168 c
0.330078 1.01855 0.500977 0.803711 0.667969 0.672852 c
0.85791 0.524414 1.03271 0.100586 1.27637 0.041992 c
1.45361 0 1.66016 0.146484 1.81934 0.18457 c
1.99951 0.227539 2.2168 0.174805 2.39063 0.237305 c
2.6123 0.316406 2.51807 0.574219 2.67871 0.6875 c
2.7832 0.761719 2.96582 0.697266 3.08496 0.738281 c
3.28467 0.808594 3.42432 1.00098 3.46094 1.19824 c
3.47656 1.28027 3.4707 1.34277 3.49951 1.41895 c
3.5376 1.52148 3.61084 1.5791 3.58984 1.71191 c
3.58008 1.77344 3.53857 1.83203 3.52539 1.89844 c
3.50391 2.0127 3.52734 2.12207 3.52588 2.23535 c
3.52295 2.43555 3.54248 2.61426 3.44775 2.78516 c
3.06787 3.47266 2.21143 3.71387 1.47314 3.57422 c
1.29346 3.54004 1.18652 3.44824 1.03125 3.36719 c
0.86084 3.2793 0.892578 3.20117 0.712891 3.14355 c
0.631836 3.11719 0.497559 3.01953 0.498047 2.91992 c
0.5 2.80469 0.50293 2.86914 0.509766 2.75098 C
0.489258 2.74023 0.488281 2.75586 0.479492 2.77637 c
F
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Waves Pattern)
(Waves Pattern) 16.5288 5.83691 69.5884 62.1177 [
%AI3_Tile
(0 O 0 R 0.7765 0.0431 0.1098 0.0039 k
 0.7765 0.0431 0.1098 0.0039 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
16.5288 5.83691 m
16.5288 62.1177 L
69.5884 62.1177 L
69.5884 5.83691 L
16.5288 5.83691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.25 w 4 M []0 d0 XR
66.1079 63.5161 m
66.6782 61.8623 68.312 61.3062 69.5884 62.1177 C
68.4126 62.749 68.9067 64.2759 70.6567 63.9658 c
73.2075 63.5151 72.9673 60.3872 71.5415 58.8247 c
69.48 56.5693 65.3013 54.4048 53.4595 64.1436 C
S
39.5776 63.5161 m
40.1479 61.8623 41.7817 61.3062 43.0591 62.1177 C
41.8823 62.749 42.3745 64.2759 44.1265 63.9658 c
46.6763 63.5151 46.436 60.3872 45.0103 58.8247 c
42.9507 56.5693 38.771 54.4048 26.9282 64.1436 c
S
13.0454 63.5161 m
13.6167 61.8623 15.2515 61.3062 16.5269 62.1177 C
15.3501 62.749 15.8433 64.2759 17.5952 63.9658 c
20.144 63.5151 19.9038 60.3872 18.478 58.8247 c
16.4185 56.5693 12.2407 54.4048 0.396973 64.1436 c
S
80.3853 40.064 m
78.3267 37.8101 74.147 35.645 62.3052 45.3838 C
57.1235 49.6465 52.8296 49.9897 50.3267 48.5435 c
48.7661 47.6416 48.0776 45.7476 48.4224 44.7554 c
48.9937 43.1025 50.6274 42.5454 51.9028 43.3574 C
50.7271 43.9888 51.2202 45.5161 52.9712 45.2051 c
55.522 44.7544 55.2808 41.6274 53.855 40.064 c
51.7954 37.8091 47.6167 35.645 35.7739 45.3838 c
30.5894 49.6465 26.2974 49.9897 23.7935 48.5435 c
22.2319 47.6416 21.5464 45.7476 21.8901 44.7554 c
22.4624 43.1025 24.0962 42.5454 25.3696 43.3574 C
24.1929 43.9888 24.688 45.5161 26.4399 45.2051 c
28.9888 44.7544 28.7485 41.6274 27.3228 40.064 c
25.2632 37.8101 21.0845 35.645 9.24268 45.3838 c
S
71.1489 26.623 m
65.9653 30.8862 61.6743 31.229 59.1694 29.7832 c
57.6099 28.8818 56.9233 26.9878 57.2661 25.9956 c
57.8384 24.3418 59.4722 23.7856 60.7466 24.5977 C
59.5698 25.229 60.0649 26.7559 61.8169 26.4458 c
64.3657 25.9946 64.1245 22.8667 62.6997 21.3042 c
60.6401 19.0493 56.4614 16.8843 44.6187 26.623 C
39.4351 30.8862 35.1431 31.229 32.6401 29.7832 c
31.0776 28.8818 30.3921 26.9878 30.7349 25.9956 c
31.3062 24.3418 32.9409 23.7856 34.2163 24.5977 C
33.0405 25.229 33.5337 26.7559 35.2847 26.4458 c
37.8345 25.9946 37.5942 22.8667 36.1694 21.3042 c
34.1099 19.0493 29.9292 16.8843 18.0874 26.623 c
12.9019 30.8862 8.60986 31.229 6.10791 29.7832 c
S
79.9956 7.86328 m
74.8091 12.1265 70.5181 12.4692 68.0161 11.0234 c
66.4556 10.1211 65.769 8.22705 66.1118 7.23486 c
66.6841 5.58301 68.3179 5.02588 69.5923 5.83691 C
68.4165 6.46826 68.9106 7.99609 70.6606 7.68506 c
73.2095 7.23389 72.9712 4.10791 71.5454 2.54443 c
69.4849 0.289551 65.3052 -1.875 53.4653 7.86328 C
48.2798 12.1265 43.9868 12.4692 41.4849 11.0234 c
39.9253 10.1211 39.2368 8.22705 39.5815 7.23486 c
40.1519 5.58301 41.7876 5.02588 43.063 5.83691 C
41.8862 6.46826 42.3784 7.99609 44.1313 7.68506 c
46.6802 7.23389 46.4399 4.10791 45.0142 2.54443 c
42.9546 0.289551 38.7759 -1.875 26.9331 7.86328 c
21.7476 12.1265 17.4556 12.4692 14.9526 11.0234 c
13.3911 10.1211 12.7065 8.22705 13.0493 7.23486 c
13.6216 5.58301 15.2554 5.02588 16.5288 5.83691 C
15.3521 6.46826 15.8472 7.99609 17.5991 7.68506 c
20.1479 7.23389 19.9077 4.10791 18.48 2.54443 c
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 2)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4020.2314 4739.2334 m
-3911.6592 4739.2334 L
-3911.6592 4737.8208 L
-4020.2314 4737.8208 L
-4020.2314 4739.2334 L
n
u
0 O
0 0 0 1 k
-3911.6592 4737.8584 m
-3911.7109 4737.8208 L
-3911.8438 4737.9248 L
-3911.6592 4737.8584 L
f
-3912.5342 4738.0889 m
-3912.5083 4738.1084 -3912.5205 4738.1396 -3912.4946 4738.1592 C
-3911.9814 4737.8623 L
-3912.2109 4737.6943 -3912.3828 4738.2017 -3912.5342 4738.0889 c
f
-3912.6855 4738.0596 m
-3912.8843 4737.9902 -3912.9668 4738.1289 -3913.0132 4738.1768 C
-3912.9434 4738.0688 -3912.6416 4738.21 -3912.6855 4738.0596 C
f
-3930.2212 4738.1289 m
-3930.2026 4738.1279 -3930.1782 4738.124 -3930.1592 4738.1201 C
-3930.1904 4738.1152 -3930.2109 4738.1201 -3930.2212 4738.1289 C
f
-3934.7964 4738.6016 m
-3934.8442 4738.7124 L
-3933.9907 4738.5146 -3933.0273 4738.7158 -3932.1252 4738.6289 C
-3932.1855 4738.6689 L
-3929.8945 4738.7119 -3927.7822 4738.5264 -3925.5088 4738.4414 C
-3925.5444 4738.4541 -3925.5566 4738.4863 -3925.5933 4738.499 c
-3925.4834 4738.4609 -3925.3618 4738.3896 -3925.2388 4738.3984 C
-3925.2073 4738.4238 -3925.2734 4738.4512 -3925.3125 4738.4619 C
-3924.8333 4738.6455 -3923.9028 4738.3457 -3923.6025 4738.4873 C
-3923.4678 4738.4668 -3923.4082 4738.3911 -3923.4834 4738.332 C
-3921.7041 4738.2856 -3919.8013 4738.25 -3917.9893 4738.1064 C
-3917.9019 4738.1318 -3917.8862 4738.1816 -3917.9102 4738.2451 C
-3916.3613 4737.9473 -3914.7378 4738.0659 -3913.1533 4738.1143 C
-3913.0923 4738.0361 -3913.3145 4738.0313 -3913.1587 4737.9492 C
-3913.6682 4737.8521 -3914.0918 4738.1421 -3914.5537 4737.999 C
-3914.4946 4737.9238 L
-3914.8311 4737.876 -3914.5625 4738.1143 -3914.9116 4738.0171 C
-3915.0488 4737.9541 -3914.8772 4737.9209 -3914.9414 4737.915 C
-3915.6558 4737.9463 -3916.4014 4737.8779 -3917.0742 4738.0615 C
-3917.2402 4737.8975 -3917.8418 4738.0557 -3918.1062 4737.8984 C
-3918.2913 4737.9639 -3918.4766 4737.9473 -3918.5469 4738.0557 C
-3921.0479 4737.9697 -3923.6025 4738.1279 -3926.1653 4738.1152 C
-3927.3638 4738.4336 -3928.7998 4738.0547 -3930.2227 4738.1611 C
-3930.2324 4738.1504 -3930.2305 4738.1377 -3930.2212 4738.1289 C
-3930.6855 4738.207 -3931.3613 4738.2441 -3931.9153 4738.2041 C
-3932.3838 4738.3389 L
-3935.7158 4738.0625 -3939.1201 4738.2568 -3942.5044 4738.1421 c
-3946.3496 4738.0625 -3949.7188 4737.8345 -3953.4639 4738.2529 C
-3953.4592 4738.2212 -3953.4893 4738.2041 -3953.3926 4738.1924 C
-3954.4731 4738.2559 -3955.4583 4738.1421 -3956.4756 4738.208 C
-3956.4727 4738.1768 L
-3958.9983 4738.438 -3961.7292 4738.1421 -3964.1636 4738.4238 C
-3967.1274 4738.3955 -3970.4785 4738.4238 -3973.6157 4738.5044 C
-3973.6084 4738.4414 L
-3976.1187 4738.5742 -3978.5444 4738.2412 -3981.0488 4738.3408 C
-3983.6252 4738.1982 -3986.3457 4738.7017 -3988.9434 4738.5107 C
-3990.5508 4738.2017 -3992.6621 4738.8628 -3994.1719 4738.5439 C
-3997.2734 4738.0615 -4000.2822 4738.3721 -4003.3828 4738.6611 C
-4006.2432 4738.4893 -4009.0996 4738.9307 -4011.8701 4738.5796 C
-4013.1826 4738.8047 -4014.6323 4738.3018 -4016.0933 4738.3662 C
-4016.0413 4738.4443 L
-4016.5654 4738.208 -4017.2092 4738.7744 -4017.5361 4738.4238 C
-4017.4814 4738.4072 L
-4017.7588 4738.2295 -4018.1262 4738.8281 -4018.2949 4738.6152 C
-4018.3398 4738.7041 L
-4018.6758 4738.7295 -4018.3794 4738.604 -4018.6387 4738.5688 C
-4018.7363 4738.5796 -4018.6758 4738.7295 -4018.8794 4738.6787 C
-4018.9238 4738.3184 -4019.7026 4738.7568 -4019.7256 4738.3521 C
-4019.5422 4738.3521 -4020.0137 4738.1953 -4019.6011 4738.1104 C
-4019.7188 4738.0688 -4020.2822 4738.0889 -4020.2314 4738.2607 C
-4020.2793 4738.4434 -4020.4995 4738.6025 -4020.1572 4738.7432 C
-4020.0884 4738.6104 L
-4019.9731 4738.7432 -4020.0012 4738.6768 -4019.9595 4738.7764 C
-4019.5122 4738.7939 -4019.4521 4738.9873 -4019.1318 4739.0664 C
-4019.1348 4739.0625 -4019.1377 4739.0596 -4019.1333 4739.0527 C
-4018.9141 4738.8936 -4018.6104 4738.9873 -4018.4375 4739.0107 C
-4018.3672 4739.085 L
-4018.2617 4739.2393 -4017.8584 4738.7822 -4017.9946 4739.0479 C
-4017.0852 4738.9819 -4016.0432 4738.9849 -4015.0264 4738.9819 C
-4014.8843 4738.8809 -4014.2493 4738.9912 -4014.4707 4738.7969 c
-4014.2163 4739.0186 -4013.46 4739.0742 -4013.1797 4739.0659 C
-4013.1899 4739.0864 -4013.2021 4739.1104 -4013.2461 4739.1025 C
-4012.7012 4739.3896 -4012.6006 4738.8359 -4012.0898 4739.188 C
-4012.0103 4738.938 -4011.1626 4739.2671 -4010.8743 4738.9751 C
-4010.8105 4739.0303 -4010.7898 4739.0796 -4010.8125 4739.124 C
-4009.8936 4739.1289 -4008.8789 4739.2192 -4008.1011 4739.2305 C
-4007.4365 4739.0132 -4006.4922 4739.3291 -4005.9209 4739.0283 C
-4005.4478 4739.0928 -4004.6816 4739.2168 -4004.0215 4739.0967 C
-4004.0852 4739.1328 L
-4003.3398 4739.1152 -4002.4082 4739.0996 -4001.8965 4738.9111 C
-4001.6763 4739.1992 -4001.3545 4739.1421 -4001.0317 4739.2334 C
-4000.5342 4739.0996 -3999.5293 4739.1396 -3998.7695 4739.0186 C
-3998.6533 4739.1514 -3998.1426 4738.9619 -3998.1035 4739.1553 C
-3995.9756 4738.7822 -3993.3442 4738.9121 -3991.0718 4739.1943 C
-3991.1045 4739.208 L
-3990.8096 4739.1025 -3990.4697 4738.8682 -3990.1699 4738.7305 C
-3990.1406 4738.748 -3990.1436 4738.7793 -3990.2073 4738.7793 C
-3989.7922 4738.7432 -3989.4033 4738.9331 -3988.9893 4738.8975 C
-3988.9922 4738.9292 -3988.9922 4738.9292 -3989.0596 4738.96 C
-3988.6709 4738.874 -3988.2559 4739.1143 -3987.7964 4738.9648 C
-3987.7712 4739.0161 L
-3987.4785 4738.9443 L
-3987.4858 4739.0078 -3987.4971 4739.104 -3987.6533 4739.083 C
-3984.0898 4739.1455 -3980.4116 4738.8145 -3976.7529 4738.8623 C
-3976.8877 4738.9229 L
-3976.1782 4738.8145 L
-3976.1816 4738.8467 -3976.2158 4738.8623 -3976.2495 4738.877 C
-3975.3457 4738.9849 -3974.4082 4738.8047 -3973.5273 4738.832 C
-3973.5317 4738.8628 -3973.6653 4738.9248 -3973.5422 4738.96 C
-3972.8896 4738.7856 -3972.4946 4739.1865 -3972.1682 4738.8252 C
-3972.1377 4738.8408 -3972.1172 4738.9229 -3972.1836 4738.9521 C
-3970.3701 4738.832 -3968.5078 4738.8389 -3966.6807 4738.8975 C
-3965.1587 4738.5703 -3963.4583 4738.8662 -3961.8772 4738.6064 C
-3961.8853 4738.6719 L
-3959.8389 4738.4434 -3957.6682 4738.688 -3955.5469 4738.6421 C
-3954.6663 4738.668 -3954.0708 4738.5908 -3953.1855 4738.5864 C
-3953.1636 4738.668 L
-3951.6738 4738.3584 -3950.0322 4738.9463 -3948.4785 4738.6055 C
-3948.5852 4738.7158 L
-3948.3442 4738.5449 -3947.6455 4738.7764 -3947.7373 4738.4824 C
-3947.4629 4738.5708 L
-3946.4067 4738.1841 -3945.5413 4738.75 -3944.2471 4738.499 C
-3944.3323 4738.5688 L
-3943.9878 4738.5146 -3943.5869 4738.4712 -3943.3323 4738.5361 C
-3943.3716 4738.5459 -3943.3535 4738.5664 -3943.4346 4738.585 C
-3942.3574 4738.8604 -3941.1582 4738.5557 -3940.0215 4738.5664 C
-3940.1499 4738.6958 L
-3939.6006 4738.5439 -3938.5923 4738.6855 -3937.8701 4738.6152 C
-3937.9141 4738.6768 L
-3937.5483 4738.5908 L
-3937.5391 4738.7124 L
-3936.5986 4738.7212 -3935.7139 4738.6152 -3934.7964 4738.6016 C
f
-3925.3125 4738.4619 m
-3925.3154 4738.4609 -3925.3193 4738.4609 -3925.3228 4738.458 C
-3925.3506 4738.4688 -3925.3369 4738.4668 -3925.3125 4738.4619 C
f
-4019.0166 4739.0928 m
-4019.0596 4739.085 -4019.0957 4739.0771 -4019.1318 4739.0664 C
-4019.1233 4739.0928 -4019.0532 4739.0864 -4019.0166 4739.0928 c
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8609.1963 m
-7697.0332 8609.1963 L
-7697.0332 8549.167 L
-7893 8549.167 L
-7893 8609.1963 L
n
u
0 O
0.05 0.7 0.9 0 k
-7872.96 8602.5723 m
-7884.9639 8597.7666 -7890.4199 8601.3789 v
-7885.6582 8601.2217 -7881.4912 8603.0352 v
-7890.6182 8603.4043 -7893 8608.5166 v
-7890.0234 8605.6191 -7883.0781 8606.9238 v
-7876.1357 8608.2285 -7859.6685 8611.8896 -7864.8252 8606.293 C
-7868.0791 8604.9639 -7869.7061 8604.2354 -7872.96 8602.5723 C
f
0.055556 0.84 1 0.17 k
-7863.9961 8607.4258 m
-7866.1016 8605.7217 -7876.7441 8604.8682 -7875.4082 8600.9297 c
-7874.0723 8596.9922 -7871.4971 8595.457 Y
-7869.6094 8595.4473 -7868.6665 8595.4209 -7866.7773 8595.3154 C
-7864.7656 8604.8086 -7863.9961 8607.4258 V
f
0.05 0.7 0.9 0 k
-7871.6641 8588.7119 m
-7873.1621 8595.2861 -7873.9102 8596.5186 -7875.4082 8600.9297 C
-7873.4229 8595.6143 -7866.9844 8598.8135 v
-7860.1191 8602.2236 -7838.1914 8598.4111 -7852.6309 8588.665 C
-7860.2441 8589.3945 -7864.0508 8589.5186 -7871.6641 8588.7119 C
f
0.055556 0.84 1 0.17 k
-7875.9395 8570.4414 m
-7873.7524 8571.6025 -7875.9355 8575.3125 v
-7882.7813 8586.9375 -7881.6582 8593.8721 -7874.4814 8592.6367 c
-7867.3047 8591.4014 -7852.1719 8588.1396 -7848.8955 8591.9453 C
-7850.9912 8583.3701 -7853.0435 8578.6328 -7855.1387 8568.7686 C
-7872.4814 8563.085 -7875.9395 8570.4414 v
f
0.05 0.7 0.9 0 k
-7717.0723 8596.7842 m
-7705.0664 8596.7441 -7699.6094 8602.0576 v
-7704.3701 8599.8271 -7708.5381 8600.3799 v
-7699.4121 8604.3223 -7697.0332 8608.8828 v
-7700.0059 8605.5811 -7706.9512 8605.2637 v
-7713.8965 8604.9463 -7730.3652 8607.1787 -7725.2061 8599.8203 C
-7721.9531 8598.4971 -7720.3252 8597.8789 -7717.0723 8596.7842 C
f
0.055556 0.84 1 0.17 k
-7726.0332 8601.3916 m
-7723.9307 8599.1455 -7713.2852 8600.9941 -7714.6221 8595.5605 c
-7715.9595 8590.127 -7718.5313 8587.1787 Y
-7720.6274 8586.1563 -7721.6758 8585.6533 -7723.7715 8584.6797 C
-7725.2666 8597.4814 -7726.0332 8601.3916 V
f
0.05 0.7 0.9 0 k
-7718.3633 8580.3896 m
-7716.8662 8586.3994 -7716.1191 8589.4746 -7714.6221 8595.5605 C
-7716.6523 8587.6211 -7723.0449 8589.8506 v
-7732.6563 8593.2031 -7750.0996 8585.1787 -7737.3984 8576.7295 C
-7729.7852 8577.6299 -7725.9766 8578.3506 -7718.3633 8580.3896 C
f
0.055556 0.84 1 0.17 k
-7714.0938 8569.374 m
-7716.0264 8569.0254 -7714.0957 8572.1426 v
-7707.3496 8583.0322 -7710.9688 8588.5566 -7718.1445 8583.6318 c
-7725.3203 8578.7051 -7738.2949 8577.9619 -7741.5713 8581.2559 C
-7739.1289 8573.2988 -7737.3359 8569.7842 -7734.8926 8565.04 C
-7717.5527 8564.2061 -7714.0938 8569.374 v
f
u
0.05 0.7 0.9 0 k
-7729.4277 8570.5674 m
-7743.8345 8571.2266 -7758.0845 8575.6191 -7771.8652 8579.8662 c
-7787.4668 8584.6738 -7802.2051 8589.2158 -7817.1953 8588.8594 c
-7822.2734 8588.7393 -7831.0762 8586.7334 -7840.3955 8584.6094 c
-7857.1255 8580.7959 -7869.4551 8578.2969 -7876.5449 8579.6904 C
-7877.6865 8579.833 -7879.4863 8580.2998 V
-7879.7852 8583.4121 -7880.2598 8585.4365 Y
-7876.8242 8575.501 -7832.5723 8591.376 -7817.2637 8591.7393 c
-7787.9629 8592.4346 -7759.0166 8574.8066 -7729.2959 8573.4434 c
-7712.2471 8572.6631 -7710.2988 8581.9521 Y
-7710.8262 8579.2969 -7711.4404 8575.7666 V
-7713.3857 8574.0566 -7714.8164 8573.0654 Y
-7718.0762 8571.4141 -7722.7383 8570.2607 -7729.4277 8570.5674 c
f
-7860.8848 8552.2754 m
-7847.8828 8553.5625 -7834.5156 8556.7793 -7827.6255 8560.2783 c
-7810.3325 8569.0625 -7791.5723 8566.4727 -7775.5039 8562.7803 C
-7772.3438 8562.0498 L
-7757.0684 8558.4971 -7726.6387 8551.4219 -7714.6074 8557.041 C
-7713.5615 8557.3418 -7711.9824 8558.3838 V
-7710.5977 8557.1934 -7708.7383 8557.8369 -7709.8906 8556.748 c
-7720.8496 8546.377 -7759.0234 8556.041 -7776.1484 8559.9746 c
-7792.8721 8563.8154 -7810.4111 8565.792 -7826.3213 8557.7109 c
-7841.3535 8550.0762 -7882.4902 8544.8125 -7886.9609 8552.9014 c
-7887.2578 8553.4385 -7886.5547 8553.5371 -7885.4473 8554.4971 C
-7883.9785 8553.6221 -7882.71 8553.165 Y
-7879.6895 8551.9766 -7872.7485 8551.1016 -7860.8848 8552.2754 c
f
0.02 0.28 0.72 0 k
-7711.9824 8558.3838 m
-7713.5615 8557.3418 -7714.6074 8557.041 Y
-7726.6387 8551.4219 -7757.0684 8558.4971 -7772.3438 8562.0498 C
-7775.5039 8562.7803 L
-7791.5723 8566.4727 -7810.3325 8569.0625 -7827.6255 8560.2783 c
-7834.5156 8556.7793 -7847.8828 8553.5625 -7860.8848 8552.2754 c
-7872.7485 8551.1016 -7879.6895 8551.9766 -7882.71 8553.165 C
-7883.9785 8553.6221 -7885.4473 8554.4971 V
-7883.8018 8555.9219 -7881.2598 8559.249 -7879.7524 8568.749 c
-7879.0684 8573.0635 -7879.1904 8577.2158 -7879.4863 8580.2998 C
-7877.6865 8579.833 -7876.5449 8579.6904 Y
-7869.4551 8578.2969 -7857.1255 8580.7959 -7840.3955 8584.6094 c
-7831.0762 8586.7334 -7822.2734 8588.7393 -7817.1953 8588.8594 c
-7802.2051 8589.2158 -7787.4668 8584.6738 -7771.8652 8579.8662 c
-7758.0845 8575.6191 -7743.8345 8571.2266 -7729.4277 8570.5674 c
-7722.7383 8570.2607 -7718.0762 8571.4141 -7714.8164 8573.0654 C
-7713.3857 8574.0566 -7711.4404 8575.7666 V
-7712.1328 8571.7881 -7712.9385 8566.6982 -7713.2256 8563.0459 c
-7713.4346 8560.3945 -7712.7891 8559.0781 -7711.9824 8558.3838 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611.8896 m
-7867.1089 8611.8896 L
-7867.1089 8586.0498 L
-7893 8586.0498 L
-7893 8611.8896 L
n
*u
0 O
0.62 0.04 0.93 0 k
-7867.4077 8590.2705 m
-7867.2969 8590.1865 -7867.1973 8590.0957 -7867.1089 8589.998 C
-7867.1089 8587.2783 L
-7867.7085 8586.5361 -7868.7285 8586.0498 -7869.5703 8586.0498 c
-7870.1948 8586.0498 -7870.8989 8586.415 -7871.1328 8586.7031 C
-7871.2632 8586.832 -7871.4199 8586.8838 -7871.5752 8586.8838 c
-7871.7329 8586.8838 -7871.8613 8586.832 -7871.9141 8586.7266 c
-7872.0957 8586.3369 -7872.4351 8586.0762 -7872.9048 8586.0762 c
-7873.6592 8586.0762 -7876.5239 8588.7578 -7876.5239 8589.5146 c
-7876.5239 8589.6445 -7876.4199 8589.6973 -7876.2373 8589.6973 c
-7876.0029 8589.6973 -7875.6128 8589.5928 -7875.2476 8589.4111 C
-7875.0132 8589.3076 -7873.9199 8588.499 -7873.6328 8588.499 c
-7873.2949 8588.499 -7873.0605 8589.3076 -7872.7207 8589.3076 c
-7872.4351 8589.3076 -7871.3408 8588.3174 -7871.0796 8588.1338 c
-7870.8452 8587.9775 -7870.0908 8587.2236 -7869.4399 8587.2236 c
-7868.5288 8587.2236 -7867.6157 8587.7158 -7867.6157 8588.707 c
-7867.6157 8589.2285 -7868.4238 8590.7646 -7871.2632 8591.2598 c
-7871.5239 8591.3105 -7872.8765 8591.2871 -7873.1895 8591.3105 c
-7873.5029 8591.3369 -7875.0391 8590.8682 -7875.3789 8590.791 c
-7876.4199 8590.5566 -7876.4985 8590.5566 -7878.4512 8590.5566 c
-7878.5825 8590.5566 -7878.6606 8590.5566 -7878.6606 8590.4775 c
-7878.6606 8590.4258 -7878.6333 8590.3477 -7878.5557 8590.2432 C
-7878.2949 8589.8535 -7878.0605 8589.333 -7878.0605 8588.7334 c
-7878.0605 8587.4043 -7879.4155 8586.0498 -7880.9263 8586.0498 c
-7883.8428 8586.0498 -7883.8428 8587.7695 -7883.8428 8588.0039 c
-7883.8428 8588.5518 -7883.5039 8589.6709 -7882.2549 8589.6709 c
-7881.5508 8589.6709 -7881.2637 8589.333 -7881.2637 8589.0205 c
-7881.2637 8588.7861 -7881.3945 8588.6025 -7881.5771 8588.5244 c
-7881.8389 8588.4209 -7881.9419 8588.2891 -7881.9419 8588.1602 c
-7881.9419 8587.8994 -7881.5771 8587.665 -7881.1343 8587.665 c
-7880.3262 8587.665 -7879.5708 8588.4463 -7879.5708 8589.0986 c
-7879.5708 8591.1826 -7883.9209 8591.7822 -7884.1548 8591.7803 c
-7886.0254 8591.7695 -7887.2549 8592.8125 -7887.2168 8594.8418 c
-7887.1938 8596.1963 -7888.3892 8599.7393 -7890.2646 8599.7393 c
-7890.8389 8599.7393 -7891.2813 8599.4014 -7891.2813 8598.6973 c
-7891.2813 8598.0459 -7891.0991 8597.6025 -7890.8892 8597.6025 c
-7890.7861 8597.6025 -7890.6548 8597.7598 -7890.5254 8598.0459 C
-7890.4727 8598.2031 -7890.2915 8598.3076 -7890.0825 8598.3076 c
-7889.6133 8598.3076 -7889.0151 8597.8916 -7889.0151 8596.7178 c
-7889.0151 8595.5459 -7889.7183 8595.0781 -7890.4468 8595.0781 c
-7891.7754 8595.0781 -7893 8596.1963 -7893 8598.5664 c
-7893 8600.5205 -7891.75 8601.457 -7890.6812 8601.457 c
-7889.6133 8601.457 -7889.2495 8600.8584 -7888.8848 8600.5723 c
-7888.7549 8600.4688 -7888.6758 8600.417 -7888.6245 8600.417 c
-7888.5469 8600.417 -7888.52 8600.4951 -7888.52 8600.6514 c
-7888.52 8601.2754 -7888.0508 8604.0635 -7888.0508 8604.6357 c
-7888.0508 8605.3643 -7888.0508 8611.3291 -7890.1089 8611.3291 c
-7891.0728 8611.3291 -7891.5679 8610.5742 -7891.5679 8609.6875 c
-7891.5679 8609.0361 -7890.6289 8608.1787 -7890.3169 8607.7344 c
-7889.7959 8607.0322 -7889.7959 8606.5098 Y
-7889.7959 8606.3545 -7889.8477 8606.2754 -7889.9517 8606.251 C
-7890.9678 8606.1201 -7891.1768 8606.041 -7891.1768 8605.7559 c
-7891.1768 8605.2871 -7890.4209 8604.4795 -7890.0303 8604.2979 c
-7889.7437 8604.167 -7889.6133 8603.8809 -7889.6133 8603.5938 c
-7889.6133 8603.3076 -7889.7437 8602.9697 -7890.1865 8602.9697 c
-7891.2021 8602.9697 -7892.9229 8605.5996 -7892.9229 8606.0938 c
-7892.9229 8606.5635 -7892.6616 8606.9014 -7892.27 8607.085 c
-7892.1665 8607.1357 -7892.1143 8607.2666 -7892.1143 8607.4219 c
-7892.1143 8607.5791 -7892.1665 8607.7344 -7892.2969 8607.8652 C
-7892.5835 8608.0996 -7892.9468 8608.8037 -7892.9468 8609.4277 c
-7892.9468 8610.2686 -7892.4604 8611.2891 -7891.7207 8611.8896 C
-7889.0439 8611.8896 L
-7888.9341 8611.7979 -7888.8301 8611.6973 -7888.7285 8611.5898 c
-7888.4678 8611.3291 -7888.3125 8611.2256 -7888.1812 8611.2256 c
-7888.0254 8611.2256 -7887.6089 8611.8242 -7887.4785 8611.8242 c
-7886.8008 8611.8242 -7886.8008 8611.2773 -7886.8008 8610.0791 c
-7886.8008 8609.8955 -7886.8535 8609.0635 -7886.8535 8608.9072 c
-7886.8535 8608.6475 -7886.7754 8608.5166 -7886.6445 8608.5166 c
-7886.5396 8608.5166 -7886.4102 8608.6201 -7886.2788 8608.7773 c
-7885.5078 8609.7334 -7884.0596 8611.1426 -7882.0928 8611.8896 C
-7876.5278 8611.8896 L
-7875.3564 8611.4287 -7874.4448 8610.6875 -7873.7349 8609.8184 C
-7873.5425 8610.6689 -7872.9136 8611.8877 -7870.9766 8611.8877 c
-7869.9438 8611.8877 -7869.0239 8611.3389 -7868.6079 8610.5098 C
-7867.6665 8610.1787 -7867.1108 8609.1689 -7867.1108 8608.0215 c
-7867.1108 8606.085 -7868.3301 8605.4561 -7869.1797 8605.2627 C
-7868.3096 8604.5557 -7867.5693 8603.6426 -7867.1089 8602.4717 C
-7867.1089 8596.9053 L
-7867.8564 8594.9385 -7869.2646 8593.4902 -7870.2207 8592.7178 c
-7870.3774 8592.5879 -7870.4551 8592.4834 -7870.4551 8592.4043 c
-7870.4551 8592.0146 -7868.2148 8591.9883 -7867.7461 8591.9883 c
-7867.4863 8591.9883 -7867.3564 8591.7549 -7867.3564 8591.5205 c
-7867.3564 8591.3105 -7867.4336 8591.1299 -7867.6157 8591.1025 c
-7867.8237 8591.0781 -7867.9551 8591.0254 -7867.9551 8590.8955 c
-7867.9551 8590.7646 -7867.7988 8590.582 -7867.4077 8590.2705 c
f
1 D
-7870.2988 8608.4717 m
-7870.23 8608.459 -7870.1743 8608.4492 -7870.1421 8608.4492 c
-7869.7783 8608.4492 -7869.2832 8608.8398 -7869.2832 8609.5439 c
-7869.2832 8609.6006 -7869.2896 8609.6572 -7869.2998 8609.7139 C
-7869.9854 8609.7002 -7870.3662 8609.2139 -7870.3662 8608.8545 c
-7870.3662 8608.792 -7870.3276 8608.6191 -7870.2988 8608.4717 C
f
-7867.9185 8608.0479 m
-7867.9185 8608.4385 -7868.0835 8608.9326 -7868.3872 8609.2813 C
-7868.5181 8608.249 -7869.4956 8607.6162 -7870.2471 8607.6162 c
-7870.8208 8607.6162 -7871.1846 8607.876 -7871.1846 8608.1631 c
-7871.1846 8608.1963 -7871.1846 8608.2715 -7871.1509 8608.3477 C
-7871.1812 8608.4658 -7871.1992 8608.6016 -7871.1992 8608.751 c
-7871.1992 8609.4336 -7870.6772 8610.3018 -7869.8086 8610.5557 C
-7870.1445 8610.8662 -7870.5825 8611.0811 -7870.9502 8611.0811 c
-7872.4077 8611.0811 -7872.9292 8610.0635 -7872.9292 8609.2314 c
-7872.9292 8609.0146 -7872.9209 8608.8271 -7872.8945 8608.6572 C
-7872.4512 8608.0234 -7872.1064 8607.5439 -7871.8179 8607.1826 C
-7871.4541 8606.8916 -7870.9736 8606.5479 -7870.3423 8606.1035 C
-7870.1709 8606.0762 -7869.9849 8606.0674 -7869.7676 8606.0674 c
-7868.9336 8606.0674 -7867.9185 8606.5889 -7867.9185 8608.0479 c
f
-7869.7261 8595.2969 m
-7869.4141 8595.2969 -7867.6157 8596.4951 -7867.6157 8599.6465 c
-7867.6157 8602.6123 -7869.3276 8605.5273 -7872.5757 8605.583 C
-7872.5781 8605.5557 -7872.5796 8605.5254 -7872.5796 8605.4961 c
-7872.5796 8605.3711 -7872.7769 8603.6494 -7873.8911 8602.2881 C
-7873.8086 8602.2979 -7873.7236 8602.3037 -7873.6328 8602.3037 c
-7872.5132 8602.3037 -7871.6274 8601.1826 -7871.6274 8600.1934 c
-7871.6274 8599.2041 -7872.4351 8597.5635 -7874.9092 8597.5635 c
-7877.1797 8597.5635 -7878.2173 8599.3994 -7878.3564 8600.7256 C
-7879.6064 8601.0361 -7881.0449 8602.0791 -7881.0449 8604.0889 c
-7881.0449 8606.5635 -7879.4048 8607.3711 -7878.4141 8607.3711 c
-7877.4238 8607.3711 -7876.3047 8606.4854 -7876.3047 8605.3643 c
-7876.3047 8605.2949 -7876.3086 8605.2266 -7876.3145 8605.1631 C
-7875.0869 8606.1025 -7873.7246 8606.4189 -7873.5029 8606.4189 c
-7873.4751 8606.4189 -7873.4468 8606.4199 -7873.4199 8606.4219 C
-7873.5645 8609.5605 -7876.1621 8611.3818 -7879.3516 8611.3818 c
-7881.6436 8611.3818 -7884.3008 8609.9482 -7884.3008 8608.959 c
-7884.3008 8608.543 -7883.5181 8608.4648 -7883.3628 8608.4648 c
-7883.2588 8608.4648 -7882.6592 8608.5938 Y
-7882.5293 8608.5938 -7882.4512 8608.4902 -7882.4512 8608.3594 c
-7882.4512 8608.125 -7883.0767 8607.1621 -7884.0132 8607.1621 c
-7884.5352 8607.1621 -7885.2383 8607.1104 -7885.4727 8606.8232 c
-7885.6289 8606.6416 -7886.1499 8605.4688 -7886.1499 8605.2354 c
-7886.1499 8605.1035 -7886.0708 8605.0264 -7885.9155 8605.0264 c
-7885.7075 8605.0264 -7884.7949 8605.208 -7884.6133 8605.208 c
-7883.2329 8605.208 -7882.2168 8604.4014 -7882.2168 8602.9424 c
-7882.2168 8602.7871 -7882.2432 8602.2139 -7882.4775 8602.2139 c
-7882.6079 8602.2139 -7882.9727 8602.7607 -7883.1021 8602.7607 c
-7883.2329 8602.7607 -7883.3101 8602.6826 -7883.3101 8602.5518 c
-7883.3101 8602.5264 -7883.2075 8601.875 -7883.2075 8601.7705 c
-7883.2075 8600.8076 -7883.8325 8600.4951 -7884.0669 8600.4951 c
-7884.5605 8600.4951 -7884.8213 8600.8848 -7884.8213 8601.4063 c
-7884.8213 8601.5361 -7884.7949 8601.667 -7884.7695 8601.8232 C
-7884.6133 8602.501 -7884.0669 8602.7607 -7884.0669 8603.3076 c
-7884.0669 8604.0635 -7885.0557 8604.3232 -7885.8115 8604.3232 c
-7886.7231 8604.3232 -7887.2695 8602.708 -7887.2695 8600.9883 c
-7887.2695 8599.96 -7886.8765 8598.4795 -7886.4009 8597.3125 c
-7885.9727 8596.2666 -7884.9492 8596.2881 -7884.5552 8596.209 c
-7884.5449 8596.208 -7883.5605 8596.0059 -7883.2412 8595.7119 c
-7882.8276 8595.3291 -7882.6992 8594.5088 -7882.6982 8594.4971 c
-7882.6621 8594.1416 -7882.6807 8592.9912 -7881.5845 8592.5557 c
-7880.4326 8592.0986 -7879.0088 8591.7285 -7878.0088 8591.7285 c
-7876.2896 8591.7285 -7874.6748 8592.2754 -7874.6748 8593.1865 c
-7874.6748 8593.9424 -7874.9355 8594.5674 -7875.6909 8594.5674 c
-7876.2373 8594.5674 -7876.4985 8594.0205 -7877.1758 8593.8643 C
-7877.3325 8593.8379 -7877.4629 8593.8125 -7877.5918 8593.8125 c
-7878.1133 8593.8125 -7878.5039 8594.0732 -7878.5039 8594.5674 c
-7878.5039 8594.8018 -7878.1919 8595.4258 -7877.2285 8595.4258 c
-7877.1235 8595.4258 -7876.4717 8595.3232 -7876.4453 8595.3232 c
-7876.3154 8595.3232 -7876.2373 8595.4014 -7876.2373 8595.5313 c
-7876.2373 8595.6621 -7876.7837 8596.0254 -7876.7837 8596.1563 c
-7876.7837 8596.3916 -7876.2109 8596.417 -7876.0552 8596.417 c
-7875.0918 8596.417 -7873.7896 8595.792 -7873.7896 8594.333 c
-7873.7896 8594.1504 -7873.9717 8593.291 -7873.9717 8593.083 c
-7873.9717 8592.9258 -7873.8936 8592.8486 -7873.7637 8592.8486 c
-7873.0332 8592.8486 -7871.8096 8593.5518 -7871.8096 8595.1143 c
-7871.8096 8595.8438 -7870.9502 8596.5469 -7870.6108 8596.5469 c
-7870.4028 8596.5469 -7869.9604 8595.2969 -7869.7261 8595.2969 c
f
-7878.3271 8601.7578 m
-7878.2246 8602.5537 -7877.9595 8603.2236 -7877.6016 8603.7822 C
-7877.6357 8603.7783 -7877.6636 8603.7754 -7877.6846 8603.7754 c
-7878.0493 8603.7754 -7878.4668 8603.9326 -7878.7012 8604.167 C
-7878.9355 8604.375 -7879.1436 8604.4795 -7879.3262 8604.4795 c
-7879.5869 8604.4795 -7879.8472 8604.2197 -7879.8472 8603.6201 c
-7879.8472 8602.5146 -7879.0615 8601.9912 -7878.3271 8601.7578 C
f
-7874.8311 8599.8545 m
-7875.1172 8599.959 -7875.2476 8600.4014 -7875.2476 8600.792 c
-7875.2476 8600.8955 -7875.23 8601.04 -7875.1836 8601.1982 C
-7875.7646 8600.877 -7876.4727 8600.665 -7877.3354 8600.6299 C
-7877.1729 8599.835 -7876.6836 8598.7344 -7875.2739 8598.7344 c
-7874.4409 8598.7344 -7874.3101 8599.3594 -7874.3101 8599.4375 c
-7874.3101 8599.6201 -7874.4927 8599.751 -7874.8311 8599.8545 C
f
-7877.3936 8601.5898 m
-7877.3589 8601.5889 -7877.3247 8601.5889 -7877.2949 8601.5889 c
-7875.5078 8601.5889 -7873.7461 8603.2871 -7873.4556 8605.5078 C
-7875.5215 8605.1162 -7877.2188 8603.252 -7877.3936 8601.5898 C
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7892.8833 8611.8447 m
-7801.0479 8611.8447 L
-7801.0479 8607.5654 L
-7892.8833 8607.5654 L
-7892.8833 8611.8447 L
n
0 O
0 0 0 1 k
-7892.6631 8609.165 m
-7893 8609.2314 -7892.4814 8609.4209 -7892.8833 8609.2783 C
-7892.8379 8609.1602 -7892.7725 8609.0713 -7892.6631 8609.165 C
f
-7802.1675 8609.3311 m
-7803.2524 8610.0938 -7804.6816 8609.3232 -7805.8701 8609.8096 C
-7806.0098 8609.8418 -7805.8345 8609.3916 -7806.1484 8609.4922 C
-7807.3008 8610.085 -7809.1162 8609.7314 -7810.5195 8609.2744 C
-7810.4346 8609.1563 L
-7810.7017 8609.0713 -7811.0283 8609.4619 -7811.3115 8609.4072 C
-7811.3135 8609.3291 -7811.2207 8609.2959 -7811.2861 8609.1885 C
-7811.3574 8609.4248 -7811.7983 8609.2979 -7811.9185 8609.4736 C
-7812.0303 8609.3818 -7812.0195 8609.1943 -7812.1641 8609.0908 C
-7812.3262 8609.3594 L
-7812.7769 8609.999 -7813.4209 8609.3154 -7814.0361 8609.6455 C
-7814.0063 8609.583 -7813.9453 8609.5342 -7813.9941 8609.4736 C
-7814.9814 8609.8623 -7816.2168 8609.79 -7817.3208 8609.9326 C
-7817.2769 8609.8379 -7817.2363 8609.665 -7817.3008 8609.5576 C
-7817.3555 8609.8408 -7817.6963 8609.9121 -7817.9922 8609.9678 C
-7818.1255 8609.6768 -7818.4995 8610.2334 -7818.8467 8610.0732 C
-7818.8169 8610.0088 L
-7819.0732 8610.3135 -7819.1973 8609.833 -7819.4053 8610.1982 C
-7819.5684 8609.9697 L
-7819.6807 8610.3799 -7819.9395 8609.7568 -7820.1514 8609.9658 C
-7820.1445 8610.0498 L
-7820.3442 8610.1494 -7820.4482 8609.9434 -7820.6338 8610.0127 C
-7820.6514 8609.9658 L
-7821.0854 8610.0732 -7821.3379 8609.8447 -7821.3271 8610.165 C
-7821.4795 8609.9082 -7820.9063 8610.0479 -7821.1455 8609.6748 C
-7822.5732 8610.0049 -7824.0459 8609.9404 -7825.4834 8609.9463 C
-7825.6465 8609.8174 -7825.7505 8609.7783 -7825.7871 8609.6572 C
-7825.9307 8609.7217 -7826.3281 8609.7158 -7826.4585 8609.8799 C
-7826.4102 8609.873 -7826.5513 8609.7158 -7826.6274 8609.7002 C
-7826.8887 8609.5791 -7826.9131 8610.0518 -7827.2002 8609.9082 C
-7827.0859 8609.8232 -7827.0469 8609.7197 -7827.0854 8609.6006 C
-7827.3301 8609.8506 -7827.6577 8609.8105 -7827.9473 8609.8916 C
-7827.9023 8609.8379 -7827.8325 8609.8057 -7827.8433 8609.7051 C
-7828.1602 8609.9883 -7828.4209 8609.6455 -7828.6982 8609.8242 C
-7828.5947 8609.6396 L
-7829.0415 8609.415 -7828.7266 8610.0264 -7829.1128 8609.8936 C
-7829.02 8609.835 -7829.0527 8609.7627 -7829.0361 8609.6875 C
-7829.3965 8610.0234 -7829.9795 8609.9121 -7830.3389 8610.0264 C
-7830.3174 8610.001 -7830.3232 8609.9502 Y
-7830.7148 8609.9922 -7831.1245 8609.8877 -7831.5552 8610.0342 C
-7831.7119 8609.9521 -7831.5039 8609.583 -7831.9185 8609.6514 C
-7831.9033 8610.0225 -7832.6221 8609.8037 -7832.3779 8610.2236 C
-7832.7319 8610.1631 -7833.2925 8610.0234 -7833.5283 8610.1494 C
-7833.3691 8610.0088 -7833.7007 8609.6963 -7833.4063 8609.665 C
-7833.6289 8609.4395 L
-7833.5957 8609.2881 -7833.3999 8609.4912 -7833.4707 8609.2998 C
-7833.6182 8609.3154 -7834.0479 8609.4619 -7834.1797 8609.4014 C
-7834.4531 8609.6289 -7834.7041 8610.0537 -7835.1465 8610.1006 C
-7834.9385 8609.9561 -7835.2646 8609.6914 -7835.1235 8609.6279 C
-7835.7407 8610.3389 L
-7835.8877 8610.3564 -7835.7725 8610.0459 -7835.9854 8610.1426 C
-7835.9746 8610.2412 -7836.0674 8610.3018 -7836.1318 8610.3818 C
-7836.1875 8610.3389 -7836.7441 8610.4736 -7836.8081 8610.1084 C
-7836.8735 8609.9658 -7836.5684 8610.0322 -7836.7314 8609.9014 C
-7837.0029 8609.9053 -7837.0151 8610.0303 -7837.2871 8610.0361 C
-7837.2925 8609.9873 L
-7837.4717 8609.9326 -7837.8213 8610.1426 -7837.6265 8610.3447 C
-7837.5015 8610.3564 -7837.6738 8610.125 -7837.4888 8610.2314 C
-7837.6152 8610.4434 -7837.9312 8610.5029 -7838.2031 8610.5068 C
-7838.1104 8610.4482 -7838.1216 8610.3506 -7838.0845 8610.2471 C
-7838.4497 8610.5342 -7838.8369 8610.625 -7839.2451 8610.7451 C
-7839.2515 8610.9189 -7839.0928 8610.4287 -7839.0327 8610.5205 C
-7839.5557 8610.2793 -7840.1128 8610.8623 -7840.5479 8610.5098 C
-7840.4766 8610.4795 -7840.5098 8610.7568 -7840.5146 8610.708 C
-7840.7666 8610.6865 -7840.7549 8610.4346 -7840.9189 8610.5273 C
-7840.9355 8610.3799 -7841.1255 8610.5752 -7841.2944 8610.6201 C
-7841.3818 8610.7266 -7841.3384 8610.5479 -7841.1914 8610.5322 C
-7841.4268 8610.6572 -7842.3691 8610.8838 -7842.9131 8610.6689 C
-7842.9023 8610.7666 -7843.2471 8611.0273 -7843.3721 8611.0166 C
-7843.3232 8610.7881 L
-7843.4375 8610.6514 -7843.7422 8610.8076 -7843.7632 8610.6123 C
-7844.0303 8610.8896 -7842.7344 8610.376 -7843.0957 8610.5898 C
-7843.1895 8610.3994 -7843.5991 8610.9541 -7843.5215 8610.6426 C
-7843.7725 8610.6514 -7844.0161 8610.9082 -7844.2559 8610.6943 C
-7844.1865 8610.7314 -7844.0522 8610.377 -7844.2549 8610.3936 C
-7844.6123 8610.4346 -7844.3564 8610.5029 -7844.6465 8610.5791 C
-7844.8281 8610.6729 L
-7844.8398 8610.8955 -7845.1475 8610.6426 -7845.0146 8610.8916 C
-7845.0586 8610.708 -7845.5337 8611.0049 -7845.4971 8610.6357 C
-7845.4473 8610.3447 L
-7845.6016 8610.3662 -7845.7002 8610.6514 -7845.8213 8610.7793 C
-7845.8418 8610.7529 -7845.8823 8610.6943 -7845.8745 8610.6475 C
-7845.8994 8611.0928 -7846.2432 8610.6104 -7846.4268 8610.9541 C
-7846.7505 8610.7998 -7847.2495 8610.9404 -7847.4023 8610.6631 C
-7847.6514 8610.7979 -7847.8784 8610.958 -7848.1621 8610.8623 C
-7848.1055 8610.8203 -7848.0283 8610.8076 -7848.0122 8610.7119 C
-7848.1904 8610.5811 -7848.2344 8610.6982 -7848.3975 8610.7705 C
-7848.3608 8610.7041 -7848.7539 8610.5098 -7848.9521 8610.3525 C
-7849.1992 8610.4854 -7849.1143 8610.7256 -7849.1392 8610.8721 C
-7849.3652 8610.4326 -7849.8379 8611.1553 -7850.1211 8610.7568 C
-7850.0352 8610.6963 -7849.7598 8610.541 -7849.9658 8610.4307 C
-7850.1919 8609.9922 -7850.4219 8610.7549 -7850.7861 8610.5439 C
-7850.6968 8610.9082 L
-7850.8594 8610.6826 -7851.2334 8611.1201 -7851.1963 8610.749 C
-7851.3184 8610.8799 -7851.6265 8610.6279 -7851.5859 8610.9834 C
-7852.1846 8610.6826 -7853.0425 8611.165 -7853.4102 8610.5273 C
-7853.4961 8610.5869 -7853.7104 8610.5264 -7853.6665 8610.709 C
-7853.5239 8610.9072 -7853.4673 8610.5674 -7853.4141 8610.7021 C
-7853.4912 8610.7129 -7853.5078 8610.8105 -7853.5161 8610.8594 C
-7853.7021 8610.7783 -7853.8486 8610.7529 -7853.6729 8610.457 C
-7854.0869 8610.2373 -7854.1001 8611.0615 -7854.6274 8610.9229 C
-7854.6035 8610.7754 -7854.6436 8610.7197 -7854.7979 8610.7432 C
-7855.0903 8610.9951 L
-7855.4312 8610.9365 -7855.2842 8610.6602 -7855.2925 8610.4111 C
-7855.4746 8610.4541 -7855.6973 8610.4424 -7855.7803 8610.6279 C
-7856.0015 8610.3154 L
-7855.8398 8610.541 -7856.1514 8610.4658 -7856.2368 8610.5264 C
-7856.1514 8610.4658 L
-7856.1846 8610.3594 -7856.3955 8610.4248 -7856.5024 8610.4561 C
-7856.4766 8610.6104 -7856.2617 8610.6729 -7856.1445 8610.7178 C
-7856.2373 8610.8271 -7856.3823 8610.8018 -7856.5059 8610.9307 C
-7856.4648 8610.6865 -7856.8027 8610.7568 -7856.9473 8610.7314 C
-7857.1133 8610.6787 -7857.1348 8610.9502 -7857.1831 8610.9424 C
-7857.1875 8610.8154 -7857.4541 8610.9209 -7857.3247 8610.7432 C
-7857.2681 8610.7021 -7857.1953 8610.8662 -7857.1016 8610.7549 C
-7857.2109 8610.6602 -7857.1982 8610.4395 -7857.4258 8610.6006 C
-7857.5967 8610.7217 -7857.3818 8611.083 -7857.7061 8610.9287 C
-7857.6211 8610.8682 -7857.6055 8610.7705 -7857.5391 8610.6826 C
-7857.8433 8610.5557 L
-7857.8564 8610.7783 L
-7857.8975 8610.7217 -7857.8691 8610.7021 -7857.8877 8610.6729 C
-7857.9785 8610.9072 -7858.3521 8610.7451 -7858.4209 8611.0088 C
-7858.5742 8611.0322 -7858.7441 8610.8545 -7858.8906 8610.8291 C
-7858.8623 8610.8096 L
-7859.0415 8610.6787 -7859.2793 8610.7646 -7859.4297 8610.915 C
-7859.4219 8610.8662 L
-7859.5195 8610.8486 -7859.7505 8610.8838 -7859.8735 8611.0146 C
-7860.1201 8610.8467 -7859.9561 8610.1738 -7860.2295 8610.4541 C
-7860.48 8610.4619 -7860.6221 8610.8623 -7860.5215 8611.0049 C
-7860.9717 8610.8545 -7861.4834 8611.2178 -7861.9009 8610.8721 C
-7861.9658 8610.9619 -7861.9248 8611.0186 -7862.0586 8611.0713 C
-7862.7197 8610.9834 -7863.4551 8611.335 -7863.9814 8610.8975 C
-7863.79 8610.8037 -7863.9688 8610.6748 -7863.9727 8610.5479 C
-7864.1309 8610.7471 -7864.1631 8610.3408 -7864.2197 8610.6826 C
-7864.2041 8610.8838 -7864.2197 8610.9814 -7864.0337 8611.0625 C
-7864.4282 8611.1709 -7865.0283 8611.1709 -7865.2471 8610.9834 C
-7865.1377 8611.0762 -7865.2227 8611.1377 -7865.3086 8611.1982 C
-7865.2803 8610.877 -7865.5713 8610.8291 -7865.7915 8610.9424 C
-7865.8223 8611.1377 L
-7865.9658 8610.9365 L
-7866.0503 8610.999 -7866.0591 8611.3467 -7866.2773 8611.1592 C
-7866.2891 8611.083 -7866.3018 8611.0059 -7866.3418 8610.9502 C
-7866.5693 8611.1104 -7866.8906 8611.3818 -7867.1377 8611.2158 C
-7867.3398 8610.9307 L
-7867.4453 8610.9619 -7867.6235 8611.1338 -7867.4375 8611.2158 C
-7867.8594 8611.0439 -7868.1309 8611.0225 -7868.2646 8610.7754 C
-7868.9912 8611.377 -7870.0459 8611.4014 -7870.8906 8611.3584 C
-7870.8652 8611.2119 L
-7871.0923 8611.0752 -7870.9834 8611.4678 -7871.1416 8611.3662 C
-7871.0684 8611.2266 -7871.3145 8611.0625 -7871.1362 8610.8916 C
-7871.4609 8610.7373 -7871.5547 8611.1455 -7871.7656 8611.2119 C
-7871.7979 8611.4043 -7871.5957 8611.0889 -7871.6367 8611.333 C
-7871.6729 8611.4014 -7872.0859 8611.1826 -7872.1362 8611.4736 C
-7872.2178 8611.3594 -7872.1543 8611.1455 -7872.1104 8611.0273 C
-7872.3086 8611.1689 L
-7872.5513 8610.8291 -7871.7559 8610.5615 -7872.0107 8610.1426 C
-7872.1934 8610.1885 L
-7872.3682 8609.8838 -7871.71 8609.8447 -7872.1689 8609.7402 C
-7872.3682 8609.8838 -7872.5381 8610.3057 -7872.3608 8610.4346 C
-7872.7754 8610.5146 -7872.5527 8611.1279 -7872.9985 8611.1035 C
-7873.1201 8610.9326 -7872.6416 8611.0625 -7872.7275 8610.8232 C
-7872.9375 8610.5889 -7873.1484 8610.9541 -7873.3354 8610.8721 C
-7873.1279 8610.9814 -7873.3032 8611.2754 -7873.4375 8611.3291 C
-7873.6641 8611.1914 -7873.29 8611.0537 -7873.6113 8611.0234 C
-7873.6641 8611.1914 -7873.9595 8611.3174 -7873.7041 8611.4346 C
-7873.8203 8611.8154 -7874.0381 8611.3291 -7874.2129 8611.624 C
-7874.3174 8611.3564 -7873.8823 8611.0049 -7874.2354 8610.8711 C
-7874.1792 8611.1289 -7874.6704 8611.2217 -7874.4839 8611.6045 C
-7874.6221 8611.5303 -7874.6367 8611.3271 -7874.5361 8611.1689 C
-7874.7334 8611.0098 -7875.0151 8611.6396 -7875.0801 8611.1279 C
-7875.1479 8611.3916 L
-7875.21 8611.3057 -7875.2983 8611.2412 -7875.3994 8611.0986 C
-7875.5732 8611.0938 -7875.96 8611.4561 -7875.9443 8611.0576 C
-7876 8611.0986 -7876.3975 8611.0811 -7876.2441 8611.3564 C
-7875.9971 8611.5244 -7875.96 8611.1553 -7875.8223 8611.5273 C
-7875.9971 8611.2236 -7876.1787 8611.5674 -7876.3213 8611.6689 C
-7876.3447 8611.5146 L
-7876.4297 8611.5752 -7876.6255 8611.541 -7876.6787 8611.708 C
-7876.6133 8611.6201 -7876.6475 8611.5146 -7876.7148 8611.4775 C
-7876.8042 8611.7119 L
-7877.1494 8611.8291 -7876.8857 8611.2998 -7877.2217 8611.3682 C
-7876.9663 8611.1865 L
-7877.0225 8611.2256 -7877.1367 8611.0059 -7877.2979 8611.0791 C
-7877.3604 8611.293 -7877.4775 8611.5498 -7877.5313 8611.7158 C
-7877.7207 8611.8096 -7877.6162 8611.4746 -7877.8027 8611.6943 C
-7877.5586 8611.4365 L
-7877.5215 8611.3662 -7877.7231 8611.083 -7877.9761 8611.0889 C
-7878.1377 8611.1631 -7878.3887 8611.4717 -7878.1338 8611.5889 C
-7878.2607 8611.5928 -7878.4385 8611.4619 -7878.3379 8611.3057 C
-7878.6255 8611.3799 -7878.2998 8611.5361 -7878.5479 8611.6689 C
-7878.6494 8611.5264 -7878.9658 8611.3232 -7879.1563 8611.1162 C
-7878.8975 8610.7578 L
-7879.0693 8610.7549 L
-7878.8467 8610.4678 -7879.1826 8610.5361 -7879.0566 8610.2334 C
-7879.1743 8610.1865 -7879.3169 8610.2891 -7879.4307 8610.3682 C
-7879.0864 8610.8525 -7879.8159 8611.0303 -7879.7158 8611.4717 C
-7880.1875 8611.5928 -7880.0107 8610.3975 -7880.5024 8611.0889 C
-7880.4219 8611.2041 -7880.6533 8611.54 -7880.3564 8611.4121 C
-7880.6494 8611.3643 -7880.5557 8611.8555 -7880.9014 8611.6729 C
-7880.6455 8611.4912 -7881.1763 8611.2256 -7880.8066 8610.9619 C
-7880.8311 8611.1084 -7880.6001 8611.0732 -7880.5435 8611.0322 C
-7880.6641 8610.8623 -7880.5186 8610.5869 -7880.8184 8610.5869 C
-7881.0015 8610.6289 -7881.2524 8610.6377 -7881.2158 8610.8682 C
-7881.2085 8611.1211 -7880.9365 8610.8408 -7881.0537 8611.0967 C
-7881.4185 8611.1846 -7881.4795 8610.7998 -7881.6304 8611.249 C
-7881.3999 8611.2129 -7881.3423 8611.4736 -7881.3467 8611.6475 C
-7881.6143 8611.7529 L
-7881.5625 8611.585 L
-7881.9922 8611.4639 -7881.6895 8611.8896 -7882.1055 8611.8447 C
-7882.3008 8611.5127 L
-7882.2017 8611.2266 -7881.6953 8611.6396 -7881.7695 8611.1738 C
-7882.04 8611.1553 -7882.1299 8611.3916 -7882.3848 8611.2715 C
-7882.3281 8611.2314 -7882.2505 8611.2197 -7882.1943 8611.1787 C
-7882.2915 8611.1631 -7882.3877 8610.5459 -7882.7734 8610.9072 C
-7882.9727 8611.0479 -7882.8262 8611.0732 -7882.8311 8611.2471 C
-7883.2656 8611.2998 -7883.3955 8611.4775 -7883.6753 8611.5049 C
-7883.6177 8611.165 -7884.1699 8611.4717 -7883.8608 8611.124 C
-7883.7188 8611.3232 -7883.0903 8611.3037 -7882.9365 8610.9795 C
-7883.0947 8610.5762 -7882.5952 8611.0361 -7882.5024 8610.6279 C
-7882.8506 8610.6182 -7882.8335 8610.2217 -7882.8896 8609.9619 C
-7882.9863 8609.9434 -7883.0801 8610.0537 -7883.1377 8610.0938 C
-7883.1787 8610.3389 -7883.0522 8610.335 -7883.0449 8610.5869 C
-7883.4336 8610.5205 -7883.8081 8610.6572 -7884.0225 8610.8955 C
-7884.1523 8610.7744 -7884.1113 8610.5303 -7883.9575 8610.5068 C
-7884.4199 8610.5791 -7884.9141 8610.5459 -7885.3535 8610.4717 C
-7885.0693 8610.8711 -7885.8433 8610.5654 -7885.6494 8610.8975 C
-7885.4141 8610.9873 -7885.2119 8611.2715 -7885.3418 8611.4502 C
-7885.4888 8611.4248 -7885.3369 8611.2754 -7885.3984 8611.1904 C
-7885.5859 8611.4082 -7885.6895 8610.8408 -7885.8735 8611.1846 C
-7885.4512 8611.0557 -7885.7915 8610.6982 -7885.7139 8610.3857 C
-7886.0186 8610.5615 -7885.7007 8610.1631 -7886.0024 8610.1631 C
-7886.3057 8610.3369 -7886.6787 8610.4736 -7887.0161 8610.541 C
-7887.4399 8610.2451 -7888.0898 8610.5361 -7888.4683 8610.5479 C
-7888.6665 8610.3896 -7888.5322 8610.0361 -7888.7471 8609.9746 C
-7888.9995 8609.9814 -7888.5601 8610.3564 -7888.9336 8610.1943 C
-7888.8975 8610.124 L
-7889.0107 8610.2061 -7889.5825 8609.8838 -7889.6929 8610.3916 C
-7889.5776 8610.0088 L
-7889.6475 8609.9736 -7889.7119 8610.0615 -7889.7695 8610.1025 C
-7889.7725 8609.9775 -7889.8535 8609.8643 -7889.7402 8609.7822 C
-7889.9707 8609.5186 -7890.2241 8609.8242 -7890.4746 8609.835 C
-7890.3135 8610.0615 L
-7890.7422 8610.2393 -7891.0293 8610.0146 -7891.4443 8610.0938 C
-7891.4316 8609.8721 L
-7891.6787 8610.0049 L
-7891.6182 8609.79 -7891.8447 8609.6514 -7891.9751 8609.8311 C
-7891.3335 8609.2881 L
-7891.1553 8609.4189 -7891.5283 8609.5557 -7891.4165 8609.7744 C
-7891.3213 8609.9658 -7890.9375 8609.9053 -7890.8755 8609.6914 C
-7891.0225 8609.667 -7891.0293 8609.7158 -7891.1436 8609.7959 C
-7891.1919 8609.4873 -7890.9688 8609.499 -7890.8584 8609.293 C
-7890.9355 8609.3057 -7891.0449 8609.2119 -7891.0615 8609.3096 C
-7890.9102 8609.1592 -7890.7578 8609.1357 -7890.5059 8609.1279 C
-7890.6763 8609.249 -7890.4131 8609.3193 -7890.4775 8609.4072 C
-7890.4575 8609.1357 -7890.2168 8609.0518 -7889.9053 8609.1279 C
-7889.6831 8609.4424 -7889.3208 8608.9258 -7888.96 8609.0127 C
-7889.1064 8609.2881 -7889.2935 8609.5088 -7889.5127 8609.6201 C
-7889.2861 8609.7578 -7889.2607 8609.6123 -7889.0337 8609.751 C
-7888.9238 8609.5459 -7888.8457 8609.2314 -7888.5503 8609.1064 C
-7888.5342 8609.3096 L
-7888.2666 8609.2061 -7888.2666 8608.9053 -7887.9258 8608.9619 C
-7887.3418 8609.0615 -7886.7407 8609.0615 -7886.2949 8609.0869 C
-7886.2783 8609.2891 L
-7886.0303 8608.8555 -7885.4521 8609.1289 -7885.1182 8608.9365 C
-7884.5503 8609.1318 -7883.8848 8608.7432 -7883.5938 8609.0928 C
-7882.5913 8608.9365 -7881.7148 8608.7842 -7880.6768 8608.8584 C
-7880.8516 8609.1533 L
-7880.6655 8608.9365 -7880.7305 8609.3232 -7880.5479 8609.2793 C
-7880.7578 8609.0439 -7880.2949 8608.9736 -7880.1665 8608.793 C
-7879.7041 8609.0225 -7879.1104 8608.7725 -7878.7007 8608.5654 C
-7878.6846 8608.7686 L
-7878.2705 8608.3877 -7877.7759 8608.7217 -7877.2598 8608.7842 C
-7877.2007 8608.8682 -7877.1074 8609.0586 -7876.9536 8609.0361 C
-7876.6738 8608.708 -7876.5273 8608.7314 -7876.1167 8608.5264 C
-7875.8169 8608.5264 -7875.3301 8608.6074 -7875.0254 8608.7354 C
-7873.8975 8608.2744 -7872.7456 8608.5693 -7871.5732 8608.292 C
-7871.4888 8608.5303 L
-7870.3521 8608.0205 -7868.9541 8608.4834 -7867.9839 8608.2217 C
-7868.0776 8608.6289 L
-7867.7734 8608.7549 -7867.3843 8608.5225 -7867.4619 8608.2334 C
-7867.1567 8608.3584 -7866.7007 8608.0361 -7866.5068 8608.3711 C
-7866.1953 8608.4463 -7866.1255 8608.1826 -7865.8662 8608.1279 C
-7865.2422 8608.2822 -7865.0107 8608.2471 -7864.4224 8608.1709 C
-7864.5684 8608.1455 L
-7864.6328 8608.2354 -7864.6387 8608.4082 -7864.4922 8608.4346 C
-7864.2725 8608.3213 -7863.6846 8608.5439 -7863.9033 8608.0576 C
-7863.2754 8608.3389 -7862.4385 8607.8291 -7861.8271 8608.208 C
-7861.8789 8608.0752 -7861.7246 8608.0498 -7861.6602 8607.96 C
-7861.1089 8607.9541 -7860.5293 8608.2256 -7860.0898 8607.999 C
-7860.0024 8608.0654 -7860.2295 8608.2256 -7860.0049 8608.2393 C
-7859.8721 8608.1885 -7860.0024 8608.0654 -7859.8384 8607.9912 C
-7858.9453 8607.7432 -7858.0303 8608.2471 -7857.2188 8608.1826 C
-7855.7754 8607.9258 -7854.2695 8608.0557 -7852.8867 8608.0127 C
-7852.9023 8608.1104 L
-7852.4395 8607.7373 -7851.8159 8608.4922 -7851.4463 8607.9307 C
-7851.3369 8608.0234 -7851.0283 8607.9746 -7851.1094 8608.1631 C
-7850.7407 8607.8994 -7850.0771 8608.4111 -7849.5439 8608.0762 C
-7849.5928 8608.0674 -7849.6211 8608.0869 -7849.6777 8608.1289 C
-7849.1392 8608.3447 -7848.6641 8608.0498 -7848.0957 8608.2451 C
-7848.1533 8608.2871 -7848.2583 8608.3174 -7848.2754 8608.415 C
-7848.0557 8608.6025 -7847.7549 8608.0029 -7847.6348 8608.4736 C
-7847.5088 8608.4697 -7847.5449 8608.2373 -7847.6221 8608.251 C
-7846.3779 8608.4346 -7845.0498 8608.1338 -7843.7549 8608.0264 C
-7842.8271 8608.3076 -7843.6982 8608.8193 -7842.9663 8608.4678 C
-7842.9063 8608.5586 -7842.9229 8608.2881 -7842.9131 8608.3857 C
-7842.6299 8608.2539 -7842.4717 8608.9111 -7842.2754 8608.665 C
-7842.3564 8608.376 -7842.1445 8608.5029 -7842.1387 8608.3271 C
-7841.5713 8608.5146 -7841.4575 8608.7754 -7841.0098 8608.5557 C
-7841.0435 8608.708 L
-7840.5186 8608.2783 -7839.9102 8608.5088 -7839.4673 8608.0127 C
-7836.5728 8607.9229 -7833.7983 8607.6475 -7830.9761 8607.5898 C
-7828.1865 8607.6846 -7825.4551 8607.4619 -7822.6221 8607.7256 C
-7821.9585 8608.125 -7821.9087 8608.1143 -7821.1797 8607.9521 C
-7821.2095 8608.0166 -7821.2549 8608.0322 -7821.2061 8608.0928 C
-7821.1699 8607.7646 -7820.6929 8608.0615 -7820.6235 8607.749 C
-7819.5762 8607.8096 -7818.6113 8607.7197 -7817.5337 8607.7178 C
-7817.7041 8607.7529 -7817.7896 8608.0205 -7817.5869 8607.999 C
-7817.3755 8607.79 L
-7817.3408 8607.8818 L
-7817.2021 8607.833 -7817.0513 8607.6709 -7817.1943 8607.5654 C
-7814.4873 8607.2822 -7811.8242 8607.9404 -7809.1729 8607.8594 C
-7808.5435 8607.9961 -7807.6475 8607.8711 -7806.9629 8607.8037 C
-7804.9355 8608.2412 -7803.1079 8608.5938 -7801.0479 8608.2881 C
-7801.3169 8609.1357 -7802.1675 8609.3311 V
f
-7892.2578 8609.1318 m
-7892.1855 8609.2959 -7891.9497 8609.3857 -7892.1377 8609.6045 C
-7892.1611 8609.4502 -7892.2822 8609.2783 -7892.2578 8609.1318 C
f
-7885.9619 8610.8193 m
-7885.9536 8610.7705 -7885.8721 8610.8857 -7885.8521 8610.9121 C
-7885.9297 8610.9248 -7886.0024 8611.0625 -7886.0645 8610.9775 C
-7885.9854 8610.9658 -7885.9976 8610.8877 -7885.9619 8610.8193 C
f
-7884.3521 8610.917 m
-7884.3765 8611.0625 -7884.7207 8611.1787 -7884.9238 8611.1963 C
-7884.3521 8610.917 L
f
-7882.8521 8611.5186 m
-7882.7227 8611.6416 -7882.7583 8611.709 -7882.9326 8611.7051 C
-7882.9453 8611.6279 -7882.8877 8611.5889 -7882.8521 8611.5186 C
f
-7882.7456 8611.1865 m
-7882.6211 8611.1826 -7882.5591 8611.2686 -7882.4985 8611.3525 C
-7882.5029 8611.2266 -7882.7871 8611.4307 -7882.7456 8611.1865 C
f
-7879.4893 8611.6104 m
-7879.4111 8611.5986 -7879.2417 8611.4775 -7879.1689 8611.6396 C
-7879.2505 8611.5264 -7879.5498 8611.8242 -7879.4893 8611.6104 C
f
-7877.9761 8611.3896 m
-7877.9272 8611.3994 -7877.9072 8611.4258 -7877.8506 8611.3857 C
-7877.7607 8611.4521 -7877.8555 8611.5586 -7877.9312 8611.5723 C
-7877.9761 8611.3896 L
f
-7850.4287 8610.8037 m
-7850.5923 8610.876 L
-7850.5684 8610.7314 L
-7850.4287 8610.8037 L
f
-7838.3574 8610.7959 m
-7838.1943 8610.7041 -7838.2441 8610.9326 -7838.2168 8610.9541 C
-7838.3643 8610.9697 -7838.1621 8610.7744 -7838.3574 8610.7959 C
f
-7831.8486 8610.0674 m
-7831.8984 8610.0713 L
-7831.8818 8609.7725 L
-7831.8486 8610.0674 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611.8896 m
-7867.0591 8611.8896 L
-7867.0591 8585.9453 L
-7893 8585.9453 L
-7893 8611.8896 L
n
*u
1 D
0 O
0.62 0.04 0.93 0 k
-7867.9858 8605.8047 m
-7867.2168 8605.8477 -7867.0718 8606.6357 -7867.4526 8606.6982 c
-7867.8086 8606.7568 -7867.9175 8606.9658 -7867.7866 8607.1484 c
-7867.6675 8607.3174 -7867.1934 8607.6992 -7867.0635 8607.8291 C
-7867.0615 8607.8291 -7867.0635 8610.5576 -7867.0635 8610.5586 c
-7867.0703 8611.3994 -7867.6494 8611.2891 -7868.3896 8611.8896 C
-7871.1104 8611.8896 L
-7871.2085 8611.7998 -7871.2993 8611.7002 -7871.3818 8611.5889 c
-7871.6943 8611.1992 -7871.8774 8611.043 -7872.0063 8611.043 c
-7872.1377 8611.043 -7872.1895 8611.1729 -7872.2158 8611.3818 c
-7872.2417 8611.5635 -7872.4238 8611.6416 -7872.6318 8611.6416 c
-7872.8662 8611.6416 -7873.1006 8611.5117 -7873.1006 8611.251 c
-7873.1006 8610.7822 -7873.1279 8608.541 -7873.5186 8608.541 c
-7873.5967 8608.541 -7873.7002 8608.6201 -7873.8311 8608.7773 c
-7874.6025 8609.7334 -7876.0513 8611.1426 -7878.0176 8611.8896 C
-7883.5835 8611.8896 L
-7884.9722 8611.3418 -7885.9951 8610.4043 -7886.7495 8609.3232 c
-7888.8066 8606.3809 -7889.0142 8606.0674 -7890.3423 8606.0674 c
-7891.1768 8606.0674 -7892.1919 8606.5889 -7892.1919 8608.0459 c
-7892.1919 8608.751 -7891.4111 8609.7139 -7890.6553 8609.7139 c
-7889.9521 8609.7139 -7889.5615 8609.2197 -7889.5615 8608.8545 c
-7889.5615 8608.751 -7889.6665 8608.333 -7889.6665 8608.2559 c
-7889.6665 8607.8125 -7889.3535 8607.8125 -7889.2754 8607.8125 c
-7888.9897 8607.8125 -7888.7295 8608.1768 -7888.7295 8608.751 c
-7888.7295 8609.5576 -7889.4585 8610.625 -7890.6294 8610.625 c
-7891.9839 8610.625 -7893 8609.4277 -7893 8608.0215 c
-7893 8605.4424 -7890.8374 8605.1826 -7890.2646 8605.1826 c
-7889.5361 8605.1826 -7888.6504 8605.4424 -7888.1294 8605.8594 C
-7888.0254 8605.9375 -7887.9209 8605.9902 -7887.8433 8605.9902 c
-7887.6606 8605.9902 -7887.5303 8605.7803 -7887.5303 8605.4951 c
-7887.5303 8605.0791 -7886.4102 8600.624 -7882.1382 8600.624 c
-7880.8105 8600.624 -7878.6753 8601.6406 -7878.6753 8604.0889 c
-7878.6753 8606.5635 -7880.3154 8607.3711 -7881.3057 8607.3711 c
-7882.2959 8607.3711 -7883.4155 8606.4854 -7883.4155 8605.3643 c
-7883.4155 8604.0361 -7882.3218 8603.751 -7881.9038 8603.751 c
-7881.5137 8603.751 -7881.0713 8603.8799 -7880.9663 8604.167 C
-7880.8623 8604.5049 -7880.7329 8604.6875 -7880.5498 8604.6875 c
-7880.4722 8604.6875 -7879.8462 8604.5576 -7879.8462 8603.7236 c
-7879.8462 8601.7969 -7881.9038 8601.5879 -7882.4248 8601.5879 c
-7884.3535 8601.5879 -7886.6958 8603.8018 -7886.6958 8606.3291 c
-7886.6958 8609.6357 -7883.7534 8611.3818 -7880.7583 8611.3818 c
-7877.6064 8611.3818 -7876.4097 8609.584 -7876.4097 8609.2715 c
-7876.4097 8609.0361 -7877.6592 8608.5938 -7877.6592 8608.3857 c
-7877.6592 8608.0479 -7876.9561 8607.1885 -7876.2266 8607.1885 c
-7874.6631 8607.1885 -7873.96 8605.9639 -7873.96 8605.2354 c
-7873.96 8605.1035 -7874.0386 8605.0264 -7874.1943 8605.0264 c
-7874.4033 8605.0264 -7875.2622 8605.208 -7875.4458 8605.208 c
-7876.0967 8605.208 -7877.2314 8605.1533 -7877.9678 8604.0459 c
-7878.5854 8603.1182 -7878.1143 8602.2031 -7878.3994 8601.4512 c
-7878.5352 8601.0908 -7879.9375 8599.8369 -7879.9521 8599.6533 C
-7879.9727 8599.6748 L
-7880.1943 8599.6748 -7881.5566 8599.3584 -7882.7842 8598.4209 C
-7882.7783 8598.4854 -7882.7744 8598.5518 -7882.7744 8598.6221 c
-7882.7744 8599.7432 -7883.8936 8600.6279 -7884.8838 8600.6279 c
-7885.8745 8600.6279 -7887.5142 8599.8193 -7887.5142 8597.3467 c
-7887.5142 8595.3359 -7886.0762 8594.292 -7884.8262 8593.9834 C
-7884.6875 8592.6572 -7883.6494 8590.8193 -7881.3794 8590.8193 c
-7878.9058 8590.8193 -7878.0977 8592.46 -7878.0977 8593.4512 c
-7878.0977 8594.4395 -7878.9834 8595.5586 -7880.1025 8595.5586 c
-7880.1934 8595.5586 -7880.2783 8595.5557 -7880.3599 8595.5439 C
-7879.2471 8596.9063 -7879.0498 8598.627 -7879.0498 8598.752 C
-7878.6602 8599.4736 -7878.1743 8600.0303 v
-7877.3174 8601.0146 -7877.4995 8602.0928 -7877.2935 8602.7607 c
-7876.9185 8603.9883 -7876.4346 8602.6826 -7876.4346 8602.5518 c
-7876.4346 8602.5254 -7876.5391 8601.875 -7876.5391 8601.7695 c
-7876.5391 8600.8076 -7875.9146 8600.4951 -7875.6802 8600.4951 c
-7875.1846 8600.4951 -7874.9248 8600.8848 -7874.9248 8601.4063 c
-7874.9248 8601.5361 -7874.9502 8601.665 -7874.9766 8601.8223 C
-7875.1328 8602.5 -7875.6802 8602.7607 -7875.6802 8603.3076 c
-7875.6802 8604.0635 -7875.0542 8604.3232 -7874.2998 8604.3232 C
-7872.8096 8604.7949 -7872.4238 8605.8076 v
-7872.0386 8606.8203 -7872.4238 8607.4746 -7872.3721 8607.7344 c
-7871.8774 8610.5742 -7870.3408 8611.3818 -7869.8193 8611.3818 c
-7868.8286 8611.3818 -7868.3354 8610.4697 -7868.3354 8609.5576 c
-7868.3354 8608.9072 -7869.0913 8608.1514 -7869.2471 8607.917 c
-7869.4287 8607.6572 -7870.2065 8606.6855 -7870.4272 8606.5029 c
-7870.5088 8606.4346 -7870.9038 8606.2139 -7871.0386 8605.9033 C
-7871.3335 8605.5156 -7871.3486 8605.333 -7871.9814 8604.9521 c
-7872.5454 8604.6143 -7872.1265 8604.3076 Y
-7871.8394 8604.0732 -7871.7881 8603.3711 -7871.7881 8602.8496 c
-7871.7881 8601.9111 -7870.8232 8601.2871 -7870.5889 8601.2871 c
-7870.4595 8601.2871 -7870.3545 8601.3643 -7870.3545 8601.4951 C
-7870.4858 8602.0938 -7870.4858 8602.1982 v
-7870.4858 8602.251 -7870.6934 8603.7109 -7870.6665 8603.8496 C
-7870.4551 8603.9277 -7870.0635 8603.4307 -7869.6416 8603.0361 C
-7868.6958 8602.54 -7867.5674 8600.2207 -7867.5674 8598.1865 c
-7867.5674 8594.9053 -7869.4951 8592.249 -7872.8042 8592.249 c
-7875.3286 8592.249 -7877.3618 8594.1758 -7877.3618 8596.1299 c
-7877.3618 8596.7803 -7877.0479 8598.6826 -7875.3286 8598.6826 c
-7874.7305 8598.6826 -7874.4697 8598.4209 -7874.4697 8598.1602 c
-7874.4697 8597.9795 -7874.5742 8597.7695 -7874.7822 8597.5361 C
-7875.0166 8597.3008 -7875.1729 8596.8848 -7875.1729 8596.5205 c
-7875.1729 8596.2871 -7874.9385 8595.1396 -7873.5854 8595.1396 c
-7872.4648 8595.1396 -7871.5791 8596.2598 -7871.5791 8597.249 c
-7871.5791 8598.2393 -7872.3857 8599.8799 -7874.8608 8599.8799 c
-7877.3096 8599.8799 -7878.3247 8597.7451 -7878.3247 8596.416 c
-7878.3247 8591.9619 -7873.6631 8591.415 -7873.4546 8591.415 c
-7873.1685 8591.415 -7872.96 8591.2842 -7872.96 8591.1025 c
-7872.96 8591.0234 -7873.0122 8590.9199 -7873.0898 8590.8154 C
-7873.5073 8590.2949 -7873.7666 8589.4082 -7873.7666 8588.6807 c
-7873.7666 8588.1064 -7873.5073 8585.9453 -7870.9282 8585.9453 c
-7869.5215 8585.9453 -7868.3232 8586.7783 -7868.3232 8588.1338 c
-7868.3232 8589.3057 -7869.3921 8590.0352 -7870.1982 8590.0352 c
-7870.7715 8590.0352 -7871.1362 8589.7744 -7871.1362 8589.4873 c
-7871.1362 8589.4082 -7871.1362 8589.0986 -7870.6934 8589.0986 c
-7870.6152 8589.0986 -7870.1982 8589.2021 -7870.0942 8589.2021 c
-7869.7295 8589.2021 -7869.2354 8588.8105 -7869.2354 8588.1064 c
-7869.2354 8587.248 -7870.2246 8586.7529 -7870.9014 8586.7529 c
-7872.3599 8586.7529 -7872.8818 8587.7686 -7872.8818 8588.6016 c
-7872.8818 8589.9307 -7872.5698 8590.1396 -7869.6265 8592.1963 c
-7868.5439 8592.9512 -7867.6064 8593.9746 -7867.0591 8595.3623 C
-7867.0591 8600.9277 L
-7867.4951 8602.0713 -7868.1538 8603.0391 -7868.8174 8603.8018 C
-7870.4351 8605.2373 -7870.5034 8605.665 -7867.9858 8605.8047 c
f
0 D
-7886.3169 8596.876 m
-7886.3169 8597.4746 -7886.0562 8597.7373 -7885.7959 8597.7373 c
-7885.6138 8597.7373 -7885.4058 8597.6318 -7885.1714 8597.4238 C
-7884.9375 8597.1895 -7884.5195 8597.0342 -7884.1553 8597.0342 c
-7884.1338 8597.0342 -7884.1055 8597.0361 -7884.0713 8597.04 C
-7884.4287 8596.4795 -7884.6943 8595.8096 -7884.7969 8595.0156 C
-7885.5313 8595.249 -7886.3169 8595.7725 -7886.3169 8596.876 c
f
-7880.7798 8592.6943 m
-7880.7798 8592.6162 -7880.9102 8591.9912 -7881.7432 8591.9912 c
-7883.1538 8591.9912 -7883.6431 8593.0908 -7883.8047 8593.8877 C
-7882.9424 8593.9209 -7882.2354 8594.1338 -7881.6538 8594.4551 C
-7881.7002 8594.2969 -7881.7178 8594.1514 -7881.7178 8594.0498 c
-7881.7178 8593.6592 -7881.5874 8593.2158 -7881.3008 8593.1123 C
-7880.9614 8593.0059 -7880.7798 8592.877 -7880.7798 8592.6943 c
f
-7879.9258 8598.7646 m
-7880.2158 8596.5439 -7881.9785 8594.8447 -7883.7646 8594.8447 c
-7883.7935 8594.8447 -7883.8281 8594.8467 -7883.8633 8594.8477 C
-7883.6895 8596.5088 -7881.9912 8598.3721 -7879.9258 8598.7646 C
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7842.0845 8611.8896 m
-7842.0845 8585.9473 L
-7893 8585.9473 L
-7893 8611.8896 L
-7842.0845 8611.8896 L
n
*u
0 O
0.62 0.04 0.93 0 k
-7845.1978 8592.7197 m
-7845.3535 8592.5889 -7845.4321 8592.4854 -7845.4321 8592.4072 c
-7845.4321 8592.0166 -7843.1914 8591.9902 -7842.7222 8591.9902 c
-7842.4614 8591.9902 -7842.3325 8591.7559 -7842.3325 8591.5215 c
-7842.3325 8591.3125 -7842.4102 8591.1309 -7842.5918 8591.1035 c
-7842.8008 8591.0791 -7842.9302 8591.0264 -7842.9302 8590.8955 c
-7842.9302 8590.7666 -7842.7744 8590.584 -7842.3838 8590.2705 C
-7842.2734 8590.1885 -7842.1738 8590.0986 -7842.0845 8590 C
-7842.0845 8587.2783 L
-7842.6831 8586.5361 -7843.7046 8586.0518 -7844.5449 8586.0518 c
-7845.1714 8586.0518 -7845.8745 8586.417 -7846.1089 8586.7031 C
-7846.2383 8586.833 -7846.3945 8586.8848 -7846.5503 8586.8848 c
-7846.7075 8586.8848 -7846.8374 8586.833 -7846.8896 8586.7295 c
-7847.0718 8586.3389 -7847.4102 8586.0791 -7847.8794 8586.0791 c
-7848.6353 8586.0791 -7851.5 8588.7607 -7851.5 8589.5156 c
-7851.5 8589.6465 -7851.3955 8589.6982 -7851.2129 8589.6982 c
-7850.9785 8589.6982 -7850.5879 8589.5938 -7850.2241 8589.4111 C
-7849.9897 8589.3076 -7848.8955 8588.501 -7848.6079 8588.501 c
-7848.2695 8588.501 -7848.0352 8589.3076 -7847.6978 8589.3076 c
-7847.4102 8589.3076 -7846.3169 8588.3174 -7846.0566 8588.1357 c
-7845.8223 8587.9795 -7845.0664 8587.2236 -7844.4155 8587.2236 c
-7843.5039 8587.2236 -7842.5918 8587.7178 -7842.5918 8588.708 c
-7842.5918 8589.2295 -7843.3994 8590.7666 -7846.2383 8591.2607 c
-7846.4995 8591.3125 -7847.8535 8591.2871 -7848.1665 8591.3125 c
-7848.4785 8591.3389 -7850.0161 8590.8711 -7850.3535 8590.792 c
-7851.3955 8590.5576 -7851.4736 8590.5576 -7853.4272 8590.5576 c
-7853.5576 8590.5576 -7853.6362 8590.5576 -7853.6362 8590.4795 c
-7853.6362 8590.4277 -7853.6094 8590.3496 -7853.5313 8590.2461 C
-7853.2705 8589.8545 -7853.0361 8589.333 -7853.0361 8588.7344 c
-7853.0361 8587.4063 -7854.3906 8586.0518 -7855.9014 8586.0518 c
-7858.8184 8586.0518 -7858.8184 8587.7705 -7858.8184 8588.0049 c
-7858.8184 8588.5518 -7858.4795 8589.6719 -7857.2295 8589.6719 c
-7856.5264 8589.6719 -7856.2402 8589.333 -7856.2402 8589.0205 c
-7856.2402 8588.7871 -7856.3706 8588.6045 -7856.5527 8588.5264 c
-7856.8135 8588.4219 -7856.9175 8588.292 -7856.9175 8588.1621 c
-7856.9175 8587.9014 -7856.5527 8587.667 -7856.1094 8587.667 c
-7855.3022 8587.667 -7854.5474 8588.4482 -7854.5474 8589.0996 c
-7854.5474 8591.1826 -7858.8975 8591.7822 -7859.1313 8591.7822 c
-7859.4185 8591.7822 -7859.6777 8591.7041 -7859.8862 8591.3916 C
-7862.1255 8588.2686 -7866.0273 8585.9521 -7867.54 8585.9482 C
-7867.54 8585.9482 L
-7867.5415 8585.9482 -7867.5415 8585.9482 -7867.5425 8585.9482 c
-7867.5435 8585.9482 -7867.5435 8585.9482 -7867.5439 8585.9482 C
-7867.5439 8585.9482 L
-7869.5498 8585.9512 -7873.1675 8588.5283 -7875.1978 8591.3916 c
-7875.4063 8591.7041 -7875.6665 8591.7822 -7875.9526 8591.7822 c
-7877.3071 8591.7822 -7880.8496 8590.6094 -7880.8496 8588.7344 c
-7880.8496 8588.1621 -7880.5103 8587.7178 -7879.8081 8587.7178 c
-7879.1558 8587.7178 -7878.7134 8587.9014 -7878.7134 8588.1094 c
-7878.7134 8588.2139 -7878.8706 8588.3438 -7879.1558 8588.4746 C
-7879.3135 8588.5264 -7879.4175 8588.708 -7879.4175 8588.917 c
-7879.4175 8589.3857 -7879 8589.9854 -7877.8281 8589.9854 c
-7876.6558 8589.9854 -7876.1875 8589.2813 -7876.1875 8588.5518 c
-7876.1875 8587.2236 -7877.3071 8586 -7879.6777 8586 c
-7881.6313 8586 -7882.5679 8587.249 -7882.5679 8588.3174 c
-7882.5679 8589.3857 -7881.9697 8589.751 -7881.6826 8590.1152 c
-7881.5786 8590.2461 -7881.5264 8590.3232 -7881.5264 8590.375 c
-7881.5264 8590.4541 -7881.6055 8590.4795 -7881.7607 8590.4795 c
-7882.3857 8590.4795 -7885.1729 8590.9482 -7885.7466 8590.9482 c
-7886.4751 8590.9482 -7892.4395 8590.9482 -7892.4395 8588.8916 c
-7892.4395 8587.9258 -7891.6846 8587.4326 -7890.7983 8587.4326 c
-7890.1475 8587.4326 -7889.2881 8588.3711 -7888.8457 8588.6826 c
-7888.1426 8589.2041 -7887.6206 8589.2041 Y
-7887.4648 8589.2041 -7887.3862 8589.1504 -7887.3599 8589.0459 C
-7887.2305 8588.0313 -7887.1519 8587.8232 -7886.8662 8587.8232 c
-7886.3975 8587.8232 -7885.5898 8588.5791 -7885.4072 8588.9697 c
-7885.2778 8589.2559 -7884.9902 8589.3857 -7884.7041 8589.3857 c
-7884.4185 8589.3857 -7884.0791 8589.2559 -7884.0791 8588.8125 c
-7884.0791 8587.7969 -7886.71 8586.0791 -7887.2046 8586.0791 c
-7887.6738 8586.0791 -7888.0122 8586.3389 -7888.1943 8586.7295 c
-7888.2466 8586.833 -7888.3774 8586.8848 -7888.5327 8586.8848 c
-7888.6895 8586.8848 -7888.8457 8586.833 -7888.9761 8586.7031 C
-7889.21 8586.417 -7889.9126 8586.0518 -7890.5386 8586.0518 c
-7891.3794 8586.0518 -7892.3999 8586.5361 -7893 8587.2783 C
-7893 8589.9551 L
-7892.9082 8590.0635 -7892.8081 8590.1689 -7892.7002 8590.2705 C
-7892.4395 8590.5322 -7892.3359 8590.6875 -7892.3359 8590.8184 c
-7892.3359 8590.9746 -7892.9346 8591.3916 -7892.9346 8591.5215 c
-7892.9346 8592.1982 -7892.3882 8592.1982 -7891.1895 8592.1982 c
-7891.0063 8592.1982 -7890.1738 8592.1465 -7890.0176 8592.1465 c
-7889.7568 8592.1465 -7889.6274 8592.2256 -7889.6274 8592.3545 c
-7889.6274 8592.459 -7889.7305 8592.5889 -7889.8862 8592.7197 c
-7890.8442 8593.4912 -7892.2529 8594.9404 -7893 8596.9063 C
-7893 8602.4727 L
-7892.4526 8603.8613 -7891.5166 8604.8838 -7890.4336 8605.6396 c
-7887.4912 8607.6963 -7887.1782 8607.9033 -7887.1782 8609.2314 c
-7887.1782 8610.0654 -7887.6992 8611.0811 -7889.1582 8611.0811 c
-7889.8354 8611.0811 -7890.8242 8610.5869 -7890.8242 8609.7266 c
-7890.8242 8609.0234 -7890.3306 8608.6338 -7889.9648 8608.6338 c
-7889.8618 8608.6338 -7889.4438 8608.7373 -7889.3662 8608.7373 c
-7888.9238 8608.7373 -7888.9238 8608.4248 -7888.9238 8608.3467 c
-7888.9238 8608.0605 -7889.2881 8607.7998 -7889.8618 8607.7998 c
-7890.6685 8607.7998 -7891.7358 8608.5273 -7891.7358 8609.7002 c
-7891.7358 8611.0557 -7890.5386 8611.8887 -7889.1318 8611.8887 c
-7886.5537 8611.8887 -7886.2935 8609.7266 -7886.2935 8609.1533 c
-7886.2935 8608.4248 -7886.5537 8607.5391 -7886.9702 8607.0176 C
-7887.0479 8606.9131 -7887.1006 8606.8096 -7887.1006 8606.7324 c
-7887.1006 8606.5498 -7886.8911 8606.4189 -7886.6055 8606.4189 c
-7886.3975 8606.4189 -7881.7344 8605.8721 -7881.7344 8601.4189 c
-7881.7344 8600.0908 -7882.7515 8597.9551 -7885.1992 8597.9551 c
-7887.6738 8597.9551 -7888.4814 8599.5957 -7888.4814 8600.585 c
-7888.4814 8601.5752 -7887.5962 8602.6943 -7886.4751 8602.6943 c
-7885.1206 8602.6943 -7884.8862 8601.5488 -7884.8862 8601.3145 c
-7884.8862 8600.9512 -7885.0435 8600.5322 -7885.2778 8600.2988 C
-7885.4858 8600.0635 -7885.5898 8599.8555 -7885.5898 8599.6729 c
-7885.5898 8599.4111 -7885.3286 8599.1533 -7884.7305 8599.1533 c
-7883.0122 8599.1533 -7882.6992 8601.0557 -7882.6992 8601.7041 c
-7882.6992 8603.6592 -7884.7305 8605.585 -7887.2568 8605.585 c
-7890.5649 8605.585 -7892.4922 8602.9297 -7892.4922 8599.6475 c
-7892.4922 8597.3564 -7891.0586 8594.6992 -7890.0698 8594.6992 c
-7889.6519 8594.6992 -7889.5742 8595.4795 -7889.5742 8595.6367 c
-7889.5742 8595.7402 -7889.7046 8596.3398 Y
-7889.7046 8596.4697 -7889.6006 8596.5479 -7889.4702 8596.5479 c
-7889.2358 8596.5479 -7888.2729 8595.9229 -7888.2729 8594.9854 c
-7888.2729 8594.4648 -7888.2207 8593.7607 -7887.9336 8593.5264 c
-7887.7524 8593.3711 -7886.5801 8592.8496 -7886.3457 8592.8496 c
-7886.2144 8592.8496 -7886.1367 8592.9277 -7886.1367 8593.085 c
-7886.1367 8593.292 -7886.3193 8594.2041 -7886.3193 8594.3857 c
-7886.3193 8595.7666 -7885.5122 8596.7822 -7884.0527 8596.7822 c
-7883.8975 8596.7822 -7883.3242 8596.7568 -7883.3242 8596.5225 c
-7883.3242 8596.3916 -7883.8711 8596.0264 -7883.8711 8595.8975 c
-7883.8711 8595.7666 -7883.7935 8595.6875 -7883.6626 8595.6875 c
-7883.6367 8595.6875 -7882.9858 8595.792 -7882.8809 8595.792 c
-7881.9175 8595.792 -7881.6055 8595.168 -7881.6055 8594.9336 c
-7881.6055 8594.4385 -7881.9951 8594.1787 -7882.5166 8594.1787 c
-7882.6465 8594.1787 -7882.7778 8594.2041 -7882.9336 8594.2305 C
-7883.6104 8594.3857 -7883.8711 8594.9336 -7884.4185 8594.9336 c
-7885.1729 8594.9336 -7885.4336 8593.9434 -7885.4336 8593.1885 c
-7885.4336 8592.2754 -7883.8184 8591.7295 -7882.0991 8591.7295 c
-7880.1465 8591.7295 -7876.5786 8593.1367 -7876.5786 8593.8652 C
-7877.6982 8597.1475 -7877.8545 8597.7725 v
-7877.9063 8598.0059 -7877.9839 8598.1104 -7878.0889 8598.1104 c
-7878.4282 8598.1104 -7879.0527 8596.417 -7879.3394 8596.417 c
-7879.7031 8596.417 -7879.9121 8597.46 -7879.9121 8598.6055 c
-7879.9121 8602.1211 -7877.6465 8607.2266 -7877.1504 8607.9561 c
-7877.0474 8608.1123 -7876.9946 8608.2432 -7876.9946 8608.3721 c
-7876.9946 8608.5811 -7877.1504 8608.7373 -7877.3857 8608.7373 c
-7877.4639 8608.7373 -7880.8496 8607.4863 -7880.8496 8606.7578 c
-7880.8496 8606.6016 -7880.7969 8606.4717 -7880.7969 8606.3408 c
-7880.7969 8605.9248 -7881.0313 8605.7432 -7881.5786 8605.7432 c
-7882.3857 8605.7432 -7882.4385 8606.1064 -7882.4385 8606.3154 c
-7882.4385 8606.5244 -7882.3857 8606.7842 -7882.3857 8607.3311 c
-7882.3857 8607.5654 -7882.4639 8608.2949 -7882.6729 8608.3467 c
-7883.4814 8608.5273 -7884.2617 8609.0498 -7884.2617 8609.4141 c
-7884.2617 8609.9619 -7883.5054 8611.3936 -7883.1934 8611.3936 c
-7882.7246 8611.3936 -7881.7344 8609.1279 -7881.3706 8609.1279 c
-7881.1626 8609.1279 -7880.4849 8611.5244 -7880.0425 8611.5244 c
-7879.8594 8611.5244 -7879.6514 8611.2891 -7879.6514 8610.9248 c
-7879.6514 8610.3525 -7880.1465 8609.5186 -7880.1465 8609.1279 c
-7880.1465 8608.9453 -7880.0688 8608.8408 -7879.9121 8608.8408 c
-7879.5728 8608.8408 -7878.2715 8609.4922 -7876.5786 8610.3525 c
-7875.1978 8611.0273 -7874.1816 8611.8887 -7872.4102 8611.8887 c
-7869.6504 8611.8887 -7867.6455 8610.0146 -7867.6455 8606.5498 c
-7867.6455 8605.4814 -7867.8262 8604.3359 -7868.1138 8603.1641 c
-7868.2954 8602.4336 -7869.5454 8599.2568 -7869.5454 8598.5801 c
-7869.5454 8598.293 -7869.4414 8598.1631 -7869.2334 8598.1631 c
-7869.0513 8598.1631 -7868.2974 8598.4482 -7867.5439 8598.4492 C
-7867.5439 8598.4492 L
-7867.5435 8598.4492 -7867.5435 8598.4492 -7867.5425 8598.4492 c
-7867.5415 8598.4492 -7867.5415 8598.4492 -7867.54 8598.4492 C
-7867.54 8598.4492 L
-7866.7866 8598.4482 -7866.0337 8598.1631 -7865.8506 8598.1631 c
-7865.6426 8598.1631 -7865.5386 8598.293 -7865.5386 8598.5801 c
-7865.5386 8599.2568 -7866.7881 8602.4336 -7866.9702 8603.1641 c
-7867.2568 8604.3359 -7867.4395 8605.4814 -7867.4395 8606.5498 c
-7867.4395 8610.0146 -7865.4336 8611.8887 -7862.6729 8611.8887 c
-7860.9023 8611.8887 -7859.8862 8611.0273 -7858.5054 8610.3525 c
-7856.8135 8609.4922 -7855.5103 8608.8408 -7855.1719 8608.8408 c
-7855.0161 8608.8408 -7854.9375 8608.9453 -7854.9375 8609.1279 c
-7854.9375 8609.5186 -7855.4326 8610.3525 -7855.4326 8610.9248 c
-7855.4326 8611.2891 -7855.2246 8611.5244 -7855.0425 8611.5244 c
-7854.5474 8611.5244 -7853.8706 8608.7109 -7853.6362 8608.7109 c
-7853.3755 8608.7109 -7853.0098 8609.9346 -7852.7231 8610.9775 c
-7852.5938 8611.4717 -7852.2554 8611.6533 -7851.9688 8611.6533 c
-7851.6035 8611.6533 -7851.2393 8611.3936 -7851.2393 8611.0273 c
-7851.2393 8610.8994 -7851.2915 8610.7432 -7851.3955 8610.5869 c
-7853.2705 8607.7217 -7852.8018 8606.3682 -7853.0625 8605.8193 c
-7853.1665 8605.6123 -7853.4785 8605.5078 -7853.7656 8605.5078 c
-7854.2344 8605.5078 -7854.2344 8605.6396 -7854.2344 8606.7578 c
-7854.2344 8607.4863 -7857.6201 8608.7373 -7857.6982 8608.7373 c
-7857.9326 8608.7373 -7858.0889 8608.5811 -7858.0889 8608.3721 c
-7858.0889 8608.2432 -7858.0366 8608.1123 -7857.9326 8607.9561 c
-7857.4375 8607.2266 -7855.1719 8602.1211 -7855.1719 8598.6055 c
-7855.1719 8597.46 -7855.3809 8596.417 -7855.7446 8596.417 c
-7856.0845 8596.417 -7856.6313 8598.5537 -7857.0215 8598.5537 c
-7857.2295 8598.5537 -7858.0889 8594.959 -7858.3755 8594.3086 c
-7858.4546 8594.125 -7858.5054 8593.9697 -7858.5054 8593.8652 c
-7858.5054 8593.1367 -7854.9375 8591.7295 -7852.9839 8591.7295 c
-7851.2656 8591.7295 -7849.6504 8592.2754 -7849.6504 8593.1885 c
-7849.6504 8593.9434 -7849.9111 8594.5693 -7850.6665 8594.5693 c
-7851.2129 8594.5693 -7851.4736 8594.0215 -7852.1504 8593.8652 C
-7852.3066 8593.8398 -7852.4375 8593.8135 -7852.5674 8593.8135 c
-7853.0879 8593.8135 -7853.4785 8594.0742 -7853.4785 8594.5693 c
-7853.4785 8594.8037 -7853.1665 8595.4287 -7852.2031 8595.4287 c
-7852.0986 8595.4287 -7851.4473 8595.3232 -7851.4214 8595.3232 c
-7851.2915 8595.3232 -7851.2129 8595.4023 -7851.2129 8595.5322 c
-7851.2129 8595.6631 -7851.7598 8596.0264 -7851.7598 8596.1563 c
-7851.7598 8596.3916 -7851.1875 8596.417 -7851.0313 8596.417 c
-7850.0674 8596.417 -7848.7646 8595.792 -7848.7646 8594.335 c
-7848.7646 8594.1514 -7848.9473 8593.292 -7848.9473 8593.085 c
-7848.9473 8592.9277 -7848.8687 8592.8496 -7848.7393 8592.8496 c
-7848.0098 8592.8496 -7846.7856 8593.5537 -7846.7856 8595.1162 c
-7846.7856 8595.8447 -7845.9258 8596.5479 -7845.5879 8596.5479 c
-7845.3794 8596.5479 -7844.9375 8595.2979 -7844.7026 8595.2979 c
-7844.3887 8595.2979 -7842.5918 8596.4961 -7842.5918 8599.6475 c
-7842.5918 8602.6426 -7844.3374 8605.585 -7847.6455 8605.585 c
-7850.1719 8605.585 -7852.3848 8603.2432 -7852.3848 8601.3145 c
-7852.3848 8600.793 -7852.1768 8598.7354 -7850.25 8598.7354 c
-7849.4165 8598.7354 -7849.2866 8599.3613 -7849.2866 8599.4385 c
-7849.2866 8599.6221 -7849.4688 8599.752 -7849.8066 8599.8555 C
-7850.0938 8599.96 -7850.2241 8600.4033 -7850.2241 8600.793 c
-7850.2241 8601.209 -7849.9375 8602.3037 -7848.6079 8602.3037 c
-7847.4878 8602.3037 -7846.6035 8601.1846 -7846.6035 8600.1943 c
-7846.6035 8599.2041 -7847.4102 8597.5635 -7849.8848 8597.5635 c
-7852.3335 8597.5635 -7853.3486 8599.7002 -7853.3486 8601.0273 c
-7853.3486 8605.2998 -7848.8955 8606.4189 -7848.4785 8606.4189 c
-7848.1914 8606.4189 -7847.9834 8606.5498 -7847.9834 8606.7324 c
-7847.9834 8606.8096 -7848.0352 8606.9131 -7848.1138 8607.0176 C
-7848.5303 8607.5391 -7848.7915 8608.4248 -7848.7915 8609.1533 c
-7848.7915 8609.7266 -7848.5303 8611.8887 -7845.9521 8611.8887 c
-7844.5449 8611.8887 -7843.3481 8610.8721 -7843.3481 8609.5186 c
-7843.3481 8608.3467 -7844.4155 8607.6182 -7845.2222 8607.6182 c
-7845.7959 8607.6182 -7846.1602 8607.877 -7846.1602 8608.165 c
-7846.1602 8608.2432 -7846.1602 8608.5557 -7845.7178 8608.5557 c
-7845.6401 8608.5557 -7845.2222 8608.4512 -7845.1182 8608.4512 c
-7844.7534 8608.4512 -7844.2593 8608.8408 -7844.2593 8609.5439 c
-7844.2593 8610.2998 -7845.2222 8611.0811 -7845.9258 8611.0811 c
-7847.3848 8611.0811 -7847.9058 8610.0654 -7847.9058 8609.2314 c
-7847.9058 8607.9033 -7847.5928 8607.6963 -7844.6494 8605.6396 c
-7843.5674 8604.8838 -7842.6313 8603.8613 -7842.0845 8602.4727 C
-7842.0845 8596.9063 L
-7842.8311 8594.9404 -7844.2402 8593.4912 -7845.1978 8592.7197 c
f
1 D
-7868.6338 8606.3408 m
-7868.6338 8609.2061 -7870.1978 8610.6396 -7871.1602 8610.6396 c
-7871.7075 8610.6396 -7873.6606 8609.7783 -7873.6606 8607.4346 c
-7873.6606 8606.9658 -7873.6094 8606.4717 -7873.5835 8606.0557 c
-7873.5313 8605.2998 -7873.2441 8604.9082 -7872.75 8604.4912 c
-7872.4375 8604.2314 -7871.6289 8603.5273 -7871.6289 8602.6426 c
-7871.6289 8601.9385 -7872.3066 8600.793 -7873.6094 8600.793 c
-7874.2085 8600.793 -7875.6665 8601.0557 -7875.6665 8604.2061 c
-7875.6665 8606.8623 -7874.7295 8608.6338 -7874.5718 8608.8682 C
-7874.4946 8609.0234 -7874.4424 8609.1279 -7874.4424 8609.2061 c
-7874.4424 8609.2842 -7874.4946 8609.3359 -7874.5474 8609.3359 c
-7875.4849 8609.3359 -7876.9165 8606.0273 -7876.9165 8603.0586 c
-7876.9165 8600.8721 -7875.3799 8595.8447 -7873.9736 8595.8447 c
-7872.4897 8595.8447 -7868.6338 8601.4971 -7868.6338 8606.3408 c
f
-7867.54 8595.9482 m
-7867.54 8595.9482 L
-7867.5415 8595.9482 -7867.5415 8595.9482 -7867.5425 8595.9482 c
-7867.5435 8595.9482 -7867.5435 8595.9482 -7867.5439 8595.9482 C
-7867.5439 8595.9482 L
-7868.5313 8595.9512 -7869.3374 8596.2881 -7869.8584 8596.835 c
-7869.9634 8596.9385 -7870.0928 8597.0166 -7870.2222 8597.0166 c
-7870.6401 8597.0166 -7872.8535 8595.2979 -7872.8535 8593.9697 c
-7872.8535 8592.5635 -7869.6504 8590.6621 -7867.54 8590.167 C
-7867.54 8590.1416 L
-7864.8594 8591.001 -7862.2305 8592.6416 -7862.2305 8593.9697 c
-7862.2305 8595.2979 -7864.4438 8597.0166 -7864.8618 8597.0166 c
-7864.9912 8597.0166 -7865.1206 8596.9385 -7865.2256 8596.835 c
-7865.7466 8596.2881 -7866.5518 8595.9512 -7867.54 8595.9482 C
f
-7858.1685 8603.0586 m
-7858.1685 8606.0273 -7859.6001 8609.3359 -7860.5366 8609.3359 c
-7860.5898 8609.3359 -7860.6416 8609.2842 -7860.6416 8609.2061 c
-7860.6416 8609.1279 -7860.5898 8609.0234 -7860.5122 8608.8682 C
-7860.3555 8608.6338 -7859.4185 8606.8623 -7859.4185 8604.2061 c
-7859.4185 8602.6689 -7859.8862 8600.7402 -7861.3711 8600.7402 c
-7861.9185 8600.7402 -7863.5854 8601.6006 -7863.5854 8602.4863 c
-7863.5854 8602.6689 -7863.4814 8603.4766 -7862.6206 8604.1533 c
-7862.1265 8604.5439 -7861.7354 8605.1426 -7861.5015 8605.8721 C
-7861.3975 8606.2891 -7861.3184 8606.7842 -7861.3184 8607.2783 c
-7861.3184 8608.0869 -7861.6577 8610.665 -7863.6113 8610.665 c
-7864.6782 8610.665 -7866.4497 8609.5186 -7866.4497 8606.3408 c
-7866.4497 8601.4971 -7862.5942 8595.8447 -7861.1104 8595.8447 c
-7859.7041 8595.8447 -7858.1685 8600.8721 -7858.1685 8603.0586 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 3 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe Calligr) -
(aphic Brush Tool/ 3 pt. Round/ Adobe Calligraphic Brush Tool/ ) -
(7 pt. Round/ Adobe ArtOnPath Brush Tool/ Pencil - Thin/ Adobe ) -
(ArtOnPath Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Ba) -
(nner/ Adobe PatternOnPath Brush Tool/ Ornamental Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Flat)
(1 3 3 9 9 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Banner)
(1 / Unnamed Brush Pat/ / / / / 5 0.976471 0.741176 0.372549 / ) -
( 1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Pencil - Thin)
(1 / Unnamed 2/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Ornamental Border)
(1 / Unnamed Brush Pat 7/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 2/ / / 5 0.423529 0.72549 0.313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 1)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 1)
Pc
Bb
2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 2)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 2)
Pc
(Waves Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Waves Pattern)
Pc
(Polka Dot Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Polka Dot Pattern)
Pc
0 0.3 0.7 0 k
(C=0 M=30 Y=70 K=0)
Pc
0.05 0.7 0.9 0 k
(C=5 M=70 Y=90 K=0)
Pc
0.05 0.9 0.75 0 k
(C=5 M=90 Y=75 K=0)
Pc
0.3 0 0.95 0 k
(C=30 M=0 Y=95 K=0)
Pc
0.6 0.05 0.95 0 k
(C=60 M=5 Y=95 K=0)
Pc
0.3 0 0.1 0 k
(C=30 M=0 Y=10 K=0)
Pc
0.6 0.1 0.05 0 k
(C=60 M=10 Y=5 K=0)
Pc
0.8 0.05 0.1 0 k
(C=80 M=5 Y=10 K=0)
Pc
0 g
(K=100)
Pc
0.100006 g
(K=90)
Pc
0.200012 g
(K=80)
Pc
0.300003 g
(K=70)
Pc
0.400009 g
(K=60)
Pc
0.5 g
(K=50)
Pc
0.600006 g
(K=40)
Pc
0.700012 g
(K=30)
Pc
0.800003 g
(K=20)
Pc
0.900009 g
(K=10)
Pc
0.950012 g
(K=5)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 D
0 R
0 0 0 0 K
0 J 0 j 1 w 4 M []0 d0 XR
394.0859 510.7949 m
154.0981 510.7949 L
154.0981 701.2852 L
394.0859 701.2852 L
394.0859 510.7949 L
s
0 Ap
0 O
0 0 0 1 k
288.376 579.0049 m
292.4854 577.4727 298.7568 577.0996 306.2773 577.3223 C
306.2773 610.7588 306.2773 656.3887 y
319.209 656.3887 l
319.209 569.0098 l
310.5254 569.0098 295.7471 569.0098 V
275.2422 569.0098 266.0054 578.4316 266.0054 594.3184 c
266.0054 607.9375 275.4268 616.8555 275.4268 631.8188 C
275.4268 644.3809 266.7446 649.1836 248.271 647.521 C
248.271 601.8916 248.271 568.96 y
235.3394 568.96 l
235.3394 656.2036 l
250.1187 656.2036 260.833 656.2036 v
271.5474 656.2036 288.3584 652.5088 288.3584 630.895 C
288.3584 615.2876 278.7178 610.8633 279.2861 591.4375 C
279.6133 586.4072 281.6396 581.5166 288.376 579.0049 C
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
